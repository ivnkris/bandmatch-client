{"version":3,"sources":["utils/userInfoFormatting.js","reducer/reducer.js","utils/getFilters.js","contexts/UserProvider.js","components/Header/index.js","utils/getInstrumentIcons.js","graphql/queries.js","contexts/ModalProvider.js","components/Button/index.js","components/SoundCloudWidget/index.js","graphql/mutations.js","components/Title/index.js","components/AssembleCard/index.js","components/GigCard/index.js","utils/constructCards.js","components/Carousel/index.js","components/MultiSelectDropdown/index.js","components/FilterStrip/index.js","utils/renderCardsLogic.js","components/LoadingSpinner/index.js","pages/Assemble/index.js","components/ProfileInfo/index.js","components/ImageUpload/index.js","components/FormInput/index.js","utils/getMusicianIds.js","pages/BandProfile/index.js","pages/Collaborate/index.js","pages/Gig/index.js","images/assemble.jpg","images/colab.jpg","images/gig.jpg","components/TextPrinter/index.js","pages/Home/index.js","components/ChatSideBar/index.js","pages/Inbox/index.js","components/FormContainer/index.js","components/LoginForm/index.js","pages/Login/index.js","pages/MusicianProfile/index.js","pages/SignUp/index.js","components/MusicianSignupForm/index.js","pages/MusicianSignup/index.js","components/VenueSignupForm/index.js","pages/VenueSignup/index.js","utils/formatToTwoDecimals.js","utils/generateDropdownOptions.js","utils/validateFutureDates.js","pages/Venue/index.js","components/RequestCard/index.js","pages/Requests/index.js","pages/Bands/index.js","pages/Musicians/index.js","components/AboutUsCard/index.js","images/natasha.jpeg","images/soumeya.jpeg","images/kris.jpg","images/dom.jpg","pages/AboutUs/index.js","pages/Error404/index.js","Routes.js","components/NavigationBar/index.js","App.js","reportWebVitals.js","index.js","utils/generateMultiDropdownOptions.js","data/locationOptions.js"],"names":["module","exports","generateGenres","genres","map","genre","name","generateInstruments","instruments","instrument","generateLookingFor","role","reducer","state","action","type","user","payload","userFilters","lookingFor","experienceLevel","userType","location","getFilters","filterName","filters","JSON","parse","localStorage","getItem","UserContext","createContext","useUserContext","useContext","initialState","UserProvider","children","useReducer","dispatch","contextValue","useMemo","Provider","value","Header","props","className","title","getInstrumentIcons","instrumentsLength","size","length","index","key","ASSEMBLE","gql","ASSEMBLE_CAROUSEL","COLLABORATE","COLLABORATE_CAROUSEL","GIGS","GENRESINSTRUMENTS","MUSICIAN_USER","BAND","BAND_PREVIEW","MUSICIAN_PREVIEW","GIG_PREVIEW","CONVERSATIONS","VALIDATE_BAND_MEMBERS","CONVERSATION","BANDS","GIG_REQUESTS","VENUE","MUSICIANS","ModalContext","useModal","ModalProvider","useState","open","content","modalState","setModalState","Button","label","onClick","mode","buttonId","disabled","join","id","SoundCloudWidget","src","soundCloudUrl","width","height","scrolling","frameBorder","LOGIN","SIGNUP","SIGNUP_VENUE_USER","CREATE_MESSAGE","CREATE_BAND","CREATE_GIG","UPDATE_MUSICIAN","UPDATE_GIG_REQUEST","CREATE_GIG_REQUEST","DELETE_GIG","CANCEL_GIG","UPDATE_BAND","Title","text","myProfile","AssembleCard","useForm","register","handleSubmit","useLazyQuery","fetchPolicy","onCompleted","data","band","Modal","Body","style","backgroundImage","imageUrl","backgroundPosition","description","showMessageModal","href","onError","error","getBandInfo","musician","musicianUser","firstName","lastName","getMusicianInfo","useMutation","sendMessageData","sendMessage","formData","a","senderId","recipientId","userId","variables","createMessageInput","onSubmit","charAt","toUpperCase","slice","required","shouldUnregister","placeholder","version","bandId","musicianUserId","GigCard","history","useHistory","postcode","replace","date","moment","dateTime","local","format","console","log","gigRequestQuery","sendGigRequest","event","createGigRequestInput","gigId","performer","setTimeout","go","deleteGigQuery","sendDeleteRequest","deleteGigInput","cancelGigPerformance","sendPerformanceCancellation","deleteGigRequestId","performersId","gig","venue","fee","venueName","getGigInfo","constructPerformerCards","cards","cardsToRender","card","constructBandMemberCards","constructGigCards","gigs","primaryButtonVersion","performers","filter","_id","pendingGig","confirmed","acceptedGig","responsive","largeDesktop","breakpoint","max","min","items","slidesToSlide","desktop","largeTablet","tablet","largeMobile","mobile","CardsCarousel","cardComponents","infinite","itemClass","containerClass","colourStyles","control","styles","backgroundColor","option","isDisabled","isFocused","isSelected","color","cursor","multiValue","multiValueLabel","multiValueRemove","MultiSelectDropDown","options","isMulti","defaultValue","render","field","onChange","ref","inputRef","includes","selectedOptions","rules","FilterStrip","reValidateMode","shouldFocusError","handleApplyFilters","useCallback","stringify","setItem","serverGenres","musicalRoles","closeButton","closeVariant","locationOptions","getFilterOptions","renderCards","musicians","bands","cardsLength","newCards","push","forEach","looking","LoadingSpinner","Assemble","carouselCards","assembleCards","hasMoreItems","setHasMoreItems","useQuery","assembleFilters","bandsOffset","musiciansOffset","assembleData","assembleLoading","loading","fetchMore","carouselData","carouselLoading","carouselError","assembleCarousel","assemble","onLoadMore","updateQuery","prev","fetchMoreResult","ProfileInfo","websiteUrl","openTo","target","rel","ImageUpload","email","setImageUrl","images","setImages","onUpload","file","fileName","config","bucketName","process","REACT_APP_BUCKET_NAME","region","REACT_APP_REGION","accessKeyId","REACT_APP_ACCESS_ID","secretAccessKey","REACT_APP_ACCESS_KEY","ReactS3Client","S3","uploadFile","s3Data","status","imageList","dataURLKey","onImageUpload","onImageRemoveAll","alt","fill","FormInput","additionalClassNames","onBlur","classNames","getMusicianIds","BandProfile","useParams","modalUpdateData","setModalUpdateData","imageUrlBand","setImageUrlBand","validBandMembers","setValidBandMembers","errors","formState","validBandMemberIds","bandData","bandError","myBandProfile","validUsers","checkIfMusicianExists","exists","validateBandMembers","userValidationData","invalidUsers","filteredInvalidUsers","invalidUser","validateMembers","membersInput","$","val","formattedMembers","split","member","trim","checkIfMusicianExistsInput","submitEditBandInfo","onSubmitEditBand","openToMembers","numberOfMembers","parseFloat","openToCollaboration","updateBandInput","bandInfo","getGenreInstruments","genreInstrumentsData","useEffect","bandMusicians","generateOptions","bandGenres","generateDefaultValues","bandInstruments","generateRoleOptions","bandLookingFor","preExpanded","uuid","gigsFilters","gigsData","gigsLoading","page","currentTarget","window","Collaborate","collaborateCards","collaborateFilters","collaborateData","collaborateLoading","collaborateError","collaborateCarousel","collaborate","Gig","musicianId","gigsOffset","TextPrinter","strings","autoStart","loop","Home","showModal","assemblePhoto","colabPhoto","gigPhoto","ChatSideBar","show","setShow","chats","getMessages","drawerClasses","fontSize","chat","conversationId","Inbox","isSideDrawer","setIsSideDrawer","selectedConversation","setSelectedConversation","conversationsId","pollInterval","conversations","conversation","otherUser","participants","find","participant","messages","conversationData","conversationLoading","AlwaysScrollToBottom","elementRef","useRef","current","scrollIntoView","message","FormContainer","LoginForm","login","token","loginInput","password","Login","MusicianProfile","register2","errors2","handleSubmit2","control2","bandUpdateData","setBandUpdateData","musicianData","submitEditProfileInfo","onSubmitEditProfile","openToJoiningBand","updateMusicianUserInput","musicianInfo","editProfileModal","editProfileGenreInstrumentsData","userGenres","userInstruments","userLookingFor","renderCreateBandModal","createBand","url","createBandInput","gigsError","bandsFilters","bandsData","bandsLoading","bandsError","serverInstruments","serverLookingFor","unshift","e","redirectToPage","SignUp","MusicianSignupForm","genreOptions","instrumentOptions","lookingForOptions","formStep","setFormStep","userEmail","setUserEmail","nextFormStep","lastFormStep","watch","signup","signUp","formSelectData","submitForm","newUser","signupInput","isPremium","renderButton","pattern","confirmPassword","validate","steps","activeStep","styleConfig","activeBgColor","completedBgColor","activeTextColor","completedTextColor","inactiveTextColor","MusicianSignup","VenueSignupForm","signupVenueUser","photoUrl","signupVenueUserInput","VenueSignup","formatToTwoDecimals","numberToFormat","formattedNumber","Math","round","toFixed","generateDropdownOptions","validateFutureDates","yesterday","subtract","isAfter","Venue","venueId","createGig","dateTimeUnformatted","attr","dateTimeFormatted","utc","createGigInput","renderCreateGigModal","isValidDate","closeOnSelect","venueData","venueLoading","venueError","RequestCard","gigName","updateGigRequest","acceptRequest","parentElement","dataset","updateGigRequestInput","rejectRequest","Requests","gigRequestsId","requestsLoading","filteredData","gigRequests","performerData","bandDetails","musicianDetails","Bands","bandCards","Musicians","musicianCards","musiciansData","musiciansLoading","AboutUsCard","githubUrl","linkedinUrl","portfolioUrl","AboutUs","domPhoto","krisPhoto","tashaPhoto","soumeyaPhoto","info","Error404","Routes","exact","path","to","NavigationBar","handleLogout","removeItem","capitalizeFirstLetter","string","isMobile","isBrowser","DropdownButton","variant","align","Dropdown","Item","Divider","httpLink","createHttpLink","uri","GRAPHQL_URL","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","typePolicies","Query","feed","keyArgs","merge","existing","incoming","AppModal","onHide","centered","App","ApolloProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1a7ca78.chunk.js","sourcesContent":["const generateGenres = (genres) => {\n  return genres.map((genre) => {\n    return genre.name;\n  });\n};\n\nconst generateInstruments = (instruments) => {\n  return instruments.map((instrument) => {\n    return instrument.name;\n  });\n};\n\nconst generateLookingFor = (instruments) => {\n  return instruments.map((instrument) => {\n    return instrument.role;\n  });\n};\n\nmodule.exports = {\n  generateGenres,\n  generateInstruments,\n  generateLookingFor,\n};\n","const reducer = (state, action) => {\n  if (action.type === \"LOGIN\") {\n    return {\n      ...state,\n      user: action.payload,\n    };\n  }\n\n  if (action.type === \"LOGOUT\") {\n    return {\n      ...state,\n      user: null,\n      userFilters: {\n        genre: [],\n        instruments: [],\n        lookingFor: [],\n        experienceLevel: [],\n        userType: [],\n        location: [],\n      },\n    };\n  }\n\n  if (action.type === \"SETUSERFILTERS\") {\n    return {\n      ...state,\n      userFilters: action.payload,\n    };\n  }\n\n  return state;\n};\n\nexport default reducer;\n","const getFilters = (filterName) => {\n  const filters = JSON.parse(localStorage.getItem(`${filterName}`));\n  if (filters) {\n    return filters;\n  } else {\n    return {\n      genre: [],\n      instruments: [],\n      lookingFor: [],\n      experienceLevel: [],\n      userType: [],\n      location: [],\n    };\n  }\n};\n\nexport default getFilters;\n","import { createContext, useContext, useMemo, useReducer } from \"react\";\n\nimport reducer from \"../reducer/reducer\";\nimport getFilters from \"../utils/getFilters\";\n\nconst UserContext = createContext();\n\nexport const useUserContext = () => useContext(UserContext);\n\nconst initialState = {\n  user: JSON.parse(localStorage.getItem(\"user\")),\n  userFilters: getFilters(\"userFilters\"),\n};\n\nconst UserProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const contextValue = useMemo(() => {\n    return { state, dispatch };\n  }, [state, dispatch]);\n\n  return (\n    <UserContext.Provider value={contextValue}>{children}</UserContext.Provider>\n  );\n};\n\nexport default UserProvider;\n","import \"../../App.css\";\nimport \"./Header.css\";\n\nconst Header = (props) => {\n  return (\n    <div className=\"see-through-background-90 \">\n      <h1 className=\"header\">{props.title}</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import { FaGuitar, FaDrum, FaMicrophone, FaUsers } from \"react-icons/fa\";\nimport {\n  GiMusicalKeyboard,\n  GiPianoKeys,\n  GiGuitarBassHead,\n  GiSaxophone,\n} from \"react-icons/gi\";\n\nconst getSize = (instrumentsLength) => {\n  if (instrumentsLength > 4) {\n    return 16;\n  } else {\n    return 24;\n  }\n};\n\nconst getInstrumentIcons = (instruments) => {\n  const props = {\n    size: getSize(instruments.length),\n    className: \"instrument-icon\",\n  };\n\n  return instruments.map((instrument, index) => {\n    if (instrument === \"guitar\") {\n      return <FaGuitar {...props} key={`${instrument}-${index}`} />;\n    }\n\n    if (instrument === \"drums\") {\n      return <FaDrum {...props} key={`${instrument}-${index}`} />;\n    }\n\n    if (instrument === \"singer\") {\n      return <FaMicrophone {...props} key={`${instrument}-${index}`} />;\n    }\n\n    if (instrument === \"keyboard\") {\n      return <GiMusicalKeyboard {...props} key={`${instrument}-${index}`} />;\n    }\n\n    if (instrument === \"piano\") {\n      return <GiPianoKeys {...props} key={`${instrument}-${index}`} />;\n    }\n\n    if (instrument === \"bass\") {\n      return <GiGuitarBassHead {...props} key={`${instrument}-${index}`} />;\n    }\n\n    if (instrument === \"saxophone\") {\n      return <GiSaxophone {...props} key={`${instrument}-${index}`} />;\n    }\n\n    if (instrument === \"band\") {\n      return <FaUsers {...props} key={`${instrument}-${index}`} />;\n    }\n\n    return <FaUsers {...props} key={`${instrument}-${index}`} />;\n  });\n};\n\nexport default getInstrumentIcons;\n","import { gql } from \"@apollo/client\";\n\nexport const ASSEMBLE = gql`\n  query ExampleQuery(\n    $assembleFilters: Filter\n    $musiciansOffset: Int\n    $bandsOffset: Int\n  ) {\n    assemble(\n      filters: $assembleFilters\n      musiciansOffset: $musiciansOffset\n      bandsOffset: $bandsOffset\n    ) {\n      id\n      musicians {\n        id\n        firstName\n        lastName\n        description\n        location\n        genre {\n          name\n          id\n        }\n        experienceLevel\n        instruments {\n          name\n          id\n          role\n        }\n        imageUrl\n        websiteUrl\n        soundCloudUrl\n        lookingFor {\n          role\n          id\n        }\n        openToCollaboration\n        openToJoiningBand\n      }\n      bands {\n        name\n        id\n        description\n        location\n        genre {\n          name\n          id\n        }\n        experienceLevel\n        numberOfMembers\n        instruments {\n          name\n          id\n          role\n        }\n        imageUrl\n        websiteUrl\n        soundCloudUrl\n        lookingFor {\n          role\n          id\n        }\n        openToCollaboration\n        openToMembers\n      }\n    }\n  }\n`;\n\nexport const ASSEMBLE_CAROUSEL = gql`\n  query Query {\n    assembleCarousel {\n      musicians {\n        id\n        firstName\n        lastName\n        location\n        genre {\n          id\n          name\n        }\n        experienceLevel\n        instruments {\n          id\n          name\n          role\n        }\n        imageUrl\n        lookingFor {\n          id\n          name\n          role\n        }\n        openToJoiningBand\n      }\n      bands {\n        id\n        name\n        location\n        genre {\n          id\n          name\n        }\n        experienceLevel\n        instruments {\n          id\n          name\n          role\n        }\n        imageUrl\n        lookingFor {\n          id\n          name\n          role\n        }\n        openToMembers\n      }\n    }\n  }\n`;\n\nexport const COLLABORATE = gql`\n  query Query(\n    $collaborateFilters: Filter\n    $musiciansOffset: Int\n    $bandsOffset: Int\n  ) {\n    collaborate(\n      filters: $collaborateFilters\n      musiciansOffset: $musiciansOffset\n      bandsOffset: $bandsOffset\n    ) {\n      id\n      bands {\n        name\n        id\n        openToCollaboration\n        location\n        genre {\n          id\n          name\n        }\n        experienceLevel\n        instruments {\n          id\n          name\n          role\n        }\n        imageUrl\n        lookingFor {\n          id\n          name\n          role\n        }\n      }\n      musicians {\n        id\n        firstName\n        lastName\n        location\n        genre {\n          id\n          name\n        }\n        experienceLevel\n        instruments {\n          id\n          name\n          role\n        }\n        imageUrl\n        lookingFor {\n          id\n          name\n          role\n        }\n        openToCollaboration\n      }\n    }\n  }\n`;\n\nexport const COLLABORATE_CAROUSEL = gql`\n  query Query {\n    collaborateCarousel {\n      musicians {\n        id\n        firstName\n        lastName\n        location\n        genre {\n          id\n          name\n        }\n        experienceLevel\n        instruments {\n          id\n          name\n          role\n        }\n        imageUrl\n        lookingFor {\n          id\n          name\n          role\n        }\n        openToCollaboration\n      }\n      bands {\n        id\n        name\n        location\n        genre {\n          id\n          name\n        }\n        experienceLevel\n        instruments {\n          id\n          name\n          role\n        }\n        imageUrl\n        lookingFor {\n          id\n          name\n          role\n        }\n        openToCollaboration\n      }\n    }\n  }\n`;\n\nexport const GIGS = gql`\n  query Query($gigsFilters: Filter, $gigsOffset: Int) {\n    gigs(filters: $gigsFilters, gigsOffset: $gigsOffset) {\n      id\n      title\n      description\n      genre {\n        name\n        id\n      }\n      imageUrl\n      fee\n      websiteUrl\n      dateTime\n      venue {\n        id\n        name\n        postcode\n      }\n      accepting\n      performers {\n        _id\n        musician\n        band\n        confirmed\n      }\n    }\n  }\n`;\n\nexport const GENRESINSTRUMENTS = gql`\n  query Genres {\n    genres {\n      id\n      name\n    }\n    instruments {\n      id\n      name\n      role\n    }\n  }\n`;\n\nexport const MUSICIAN_USER = gql`\n  query Query($musicianUserId: ID!) {\n    musicianUser(id: $musicianUserId) {\n      id\n      firstName\n      lastName\n      description\n      location\n      genre {\n        name\n        id\n      }\n      experienceLevel\n      instruments {\n        name\n        id\n      }\n      imageUrl\n      websiteUrl\n      soundCloudUrl\n      lookingFor {\n        role\n        id\n      }\n      openToCollaboration\n      openToJoiningBand\n      email\n    }\n  }\n`;\n\nexport const BAND = gql`\n  query Query($bandId: ID!) {\n    band(id: $bandId) {\n      id\n      name\n      description\n      location\n      genre {\n        name\n        id\n      }\n      experienceLevel\n      numberOfMembers\n      instruments {\n        name\n        id\n      }\n      imageUrl\n      websiteUrl\n      soundCloudUrl\n      lookingFor {\n        role\n        id\n      }\n      openToCollaboration\n      openToMembers\n      musicians {\n        id\n        email\n        firstName\n        lastName\n        description\n        location\n\n        experienceLevel\n\n        imageUrl\n        websiteUrl\n        soundCloudUrl\n\n        openToJoiningBand\n        openToCollaboration\n      }\n    }\n  }\n`;\n\nexport const BAND_PREVIEW = gql`\n  query Query($bandId: ID!) {\n    band(id: $bandId) {\n      id\n      name\n      description\n      location\n      genre {\n        name\n      }\n      experienceLevel\n      numberOfMembers\n      instruments {\n        name\n        role\n      }\n      imageUrl\n      soundCloudUrl\n    }\n  }\n`;\n\nexport const MUSICIAN_PREVIEW = gql`\n  query Query($musicianUserId: ID!) {\n    musicianUser(id: $musicianUserId) {\n      id\n      firstName\n      lastName\n      description\n      location\n      genre {\n        name\n      }\n      experienceLevel\n      instruments {\n        name\n        role\n      }\n      imageUrl\n      soundCloudUrl\n    }\n  }\n`;\n\nexport const GIG_PREVIEW = gql`\n  query Query($gigId: ID!) {\n    gig(id: $gigId) {\n      id\n      title\n      description\n      genre {\n        name\n      }\n      fee\n      websiteUrl\n      dateTime\n      venue {\n        id\n        name\n        postcode\n      }\n      imageUrl\n    }\n  }\n`;\n\nexport const CONVERSATIONS = gql`\n  query Query($conversationsId: ID!) {\n    conversations(id: $conversationsId) {\n      id\n      participants {\n        id\n        firstName\n        lastName\n        imageUrl\n      }\n      messages {\n        id\n        senderId\n        text\n      }\n    }\n  }\n`;\n\nexport const VALIDATE_BAND_MEMBERS = gql`\n  query Query($checkIfMusicianExistsInput: checkMusicianInput!) {\n    checkIfMusicianExists(input: $checkIfMusicianExistsInput) {\n      email\n      exists\n      id\n    }\n  }\n`;\n\nexport const CONVERSATION = gql`\n  query Query($conversationId: ID!) {\n    conversation(id: $conversationId) {\n      id\n      participants {\n        id\n        email\n        firstName\n        lastName\n        imageUrl\n      }\n      messages {\n        text\n        senderId\n        id\n      }\n    }\n  }\n`;\n\nexport const BANDS = gql`\n  query Query($bandsFilters: Filter) {\n    bands(filters: $bandsFilters) {\n      id\n      name\n      musicians {\n        lastName\n        firstName\n        id\n      }\n      genre {\n        id\n        name\n      }\n      description\n      location\n      experienceLevel\n      numberOfMembers\n      instruments {\n        id\n        name\n      }\n      imageUrl\n      websiteUrl\n      soundCloudUrl\n      lookingFor {\n        id\n        role\n      }\n      openToCollaboration\n      openToMembers\n    }\n  }\n`;\n\nexport const GIG_REQUESTS = gql`\n  query Query($gigRequestsId: ID!) {\n    gigRequests(id: $gigRequestsId) {\n      id\n      title\n      dateTime\n      performers {\n        _id\n        musician\n        band\n        confirmed\n        musicianDetails {\n          firstName\n          lastName\n          imageUrl\n          description\n        }\n        bandDetails {\n          name\n          imageUrl\n          description\n        }\n      }\n      accepting\n    }\n  }\n`;\n\nexport const VENUE = gql`\n  query Query($venueId: ID!) {\n    venue(id: $venueId) {\n      id\n      email\n      firstName\n      lastName\n      name\n      postcode\n      photoUrl\n      description\n      websiteUrl\n    }\n  }\n`;\n\nexport const MUSICIANS = gql`\n  query Query {\n    musicians {\n      id\n      email\n      firstName\n      lastName\n      description\n      location\n      genre {\n        name\n        id\n      }\n      experienceLevel\n      instruments {\n        id\n        name\n      }\n      imageUrl\n      websiteUrl\n      soundCloudUrl\n      lookingFor {\n        role\n        id\n      }\n      openToCollaboration\n      openToJoiningBand\n    }\n  }\n`;\n","import { createContext, useContext, useState } from \"react\";\n\nconst ModalContext = createContext();\n\nexport const useModal = () => useContext(ModalContext);\n\nconst ModalProvider = ({ children }) => {\n  const [modalState, setModalState] = useState({\n    open: false,\n    content: null,\n  });\n\n  return (\n    <ModalContext.Provider value={{ modalState, setModalState }}>\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nexport default ModalProvider;\n","import \"./Button.css\";\nimport \"../../App.css\";\n\nconst Button = ({ label, onClick, size, mode, buttonId, type, disabled }) => {\n  return (\n    <button\n      type={type}\n      className={[`button--${mode}`, `button--${size}`].join(\" \")}\n      onClick={onClick}\n      id={buttonId}\n      disabled={disabled}\n    >\n      {label}\n    </button>\n  );\n};\n\nexport default Button;\n","import \"../../App.css\";\nimport \"./SoundCloudWidget.css\";\n\nconst SoundCloudWidget = (props) => {\n  return (\n    <div className=\"soundCloudWidget-container\">\n      <div className=\"soundCloudWidget\">\n        <iframe\n          title=\"SoundCloud Widget\"\n          id=\"sc-widget\"\n          src={props.soundCloudUrl}\n          width=\"90%\"\n          height=\"100px\"\n          scrolling=\"no\"\n          frameBorder=\"no\"\n        ></iframe>\n      </div>\n    </div>\n  );\n};\n\nexport default SoundCloudWidget;\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n  mutation Mutation($loginInput: LoginInput!) {\n    login(input: $loginInput) {\n      token\n      user {\n        id\n        email\n        firstName\n        lastName\n        name\n      }\n      type\n    }\n  }\n`;\n\nexport const SIGNUP = gql`\n  mutation Mutation($signupInput: SignupInput!) {\n    signup(input: $signupInput) {\n      token\n      user {\n        id\n        email\n        firstName\n        lastName\n      }\n      type\n    }\n  }\n`;\n\nexport const SIGNUP_VENUE_USER = gql`\n  mutation Mutation($signupVenueUserInput: SignupVenueInput!) {\n    signupVenueUser(input: $signupVenueUserInput) {\n      token\n      user {\n        id\n        firstName\n        email\n        lastName\n        name\n      }\n      type\n    }\n  }\n`;\n\nexport const CREATE_MESSAGE = gql`\n  mutation Mutation($createMessageInput: MessageInput!) {\n    createMessage(input: $createMessageInput) {\n      id\n      senderId\n      text\n    }\n  }\n`;\n\nexport const CREATE_BAND = gql`\n  mutation CreateBandMutation($createBandInput: BandInput!) {\n    createBand(input: $createBandInput) {\n      id\n    }\n  }\n`;\n\nexport const CREATE_GIG = gql`\n  mutation CreateGigMutation($createGigInput: GigInput) {\n    createGig(input: $createGigInput) {\n      id\n    }\n  }\n`;\n\nexport const UPDATE_MUSICIAN = gql`\n  mutation UpdateMusicianUserMutation(\n    $updateMusicianUserInput: updateMusicianUserInput\n  ) {\n    updateMusicianUser(input: $updateMusicianUserInput) {\n      id\n    }\n  }\n`;\n\nexport const UPDATE_GIG_REQUEST = gql`\n  mutation Mutation($updateGigRequestInput: updateGigRequestInput) {\n    updateGigRequest(input: $updateGigRequestInput) {\n      id\n      title\n    }\n  }\n`;\n\nexport const CREATE_GIG_REQUEST = gql`\n  mutation Mutation($createGigRequestInput: createGigRequestInput) {\n    createGigRequest(input: $createGigRequestInput) {\n      id\n    }\n  }\n`;\n\nexport const DELETE_BAND = gql`\n  mutation Mutation($deleteBandInput: deleteBandInput) {\n    deleteBand(input: $deleteBandInput) {\n      id\n    }\n  }\n`;\n\nexport const DELETE_GIG = gql`\n  mutation Mutation($deleteGigInput: deleteGigInput) {\n    deleteGig(input: $deleteGigInput)\n  }\n`;\n\nexport const CANCEL_GIG = gql`\n  mutation Mutation($deleteGigRequestId: ID!) {\n    deleteGigRequest(id: $deleteGigRequestId)\n  }\n`;\n\nexport const UPDATE_BAND = gql`\n  mutation Mutation($updateBandInput: updateBandInput) {\n    updateBand(input: $updateBandInput) {\n      id\n    }\n  }\n`;\n","import { RiPencilFill } from \"react-icons/ri\";\n\nimport \"./Title.css\";\nimport \"../../App.css\";\n\nconst Title = ({ text, type, myProfile, onClick }) => {\n  if (myProfile) {\n    return (\n      <div className={`${type}-title `}>\n        {text} {\"  \"}\n        <RiPencilFill className=\"icon\" onClick={onClick} />\n      </div>\n    );\n  } else {\n    return <div className={`${type}-title `}>{text}</div>;\n  }\n};\n\nexport default Title;\n","import React from \"react\";\nimport { FaComment, FaUser } from \"react-icons/fa\";\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\nimport { useForm } from \"react-hook-form\";\n\nimport \"../../App.css\";\nimport \"./AssembleCard.css\";\nimport { Modal } from \"react-bootstrap\";\n\nimport getInstrumentIcons from \"../../utils/getInstrumentIcons\";\nimport { BAND_PREVIEW, MUSICIAN_PREVIEW } from \"../../graphql/queries\";\nimport { useModal } from \"../../contexts/ModalProvider\";\nimport Button from \"../Button/index\";\nimport SoundCloudWidget from \"../SoundCloudWidget\";\nimport {\n  generateGenres,\n  generateInstruments,\n} from \"../../utils/userInfoFormatting\";\nimport { useUserContext } from \"../../contexts/UserProvider\";\nimport { CREATE_MESSAGE } from \"../../graphql/mutations\";\nimport Title from \"../Title\";\n\nconst AssembleCard = (props) => {\n  const { state } = useUserContext();\n\n  const { setModalState, modalState } = useModal();\n\n  const { register, handleSubmit } = useForm();\n\n  const [getBandInfo] = useLazyQuery(BAND_PREVIEW, {\n    fetchPolicy: \"network-only\",\n    onCompleted: (data) => {\n      if (!modalState.open) {\n        if (!data) {\n          setModalState({\n            open: true,\n            content: (\n              <Modal.Body className=\"solid-background\">\n                <p> Sorry, we couldn't load filtering options at this time </p>\n              </Modal.Body>\n            ),\n          });\n        } else {\n          const band = data.band;\n          setModalState({\n            open: true,\n            content: (\n              <>\n                <Modal.Body className=\"solid-background text-align-center\">\n                  <div\n                    className=\"profile-preview-image\"\n                    style={{\n                      backgroundImage: \"url(\" + band.imageUrl + \")\",\n                      backgroundPosition: \"center center\",\n                    }}\n                  >\n                    <div className=\"image-overlay\">\n                      <div className=\"profile-preview-image-overlay-item\">\n                        {band.experienceLevel}\n                      </div>\n                    </div>\n                  </div>\n                  <h5 className=\"title\">{band.name}</h5>\n                  <p className=\"p-yellow pb-2\">\n                    {generateGenres(band.genre).join(\" / \")}\n                  </p>\n                  <div className=\"pb-10\">\n                    {generateInstruments(band.instruments).join(\" \")}\n                  </div>\n                  <p className=\"regular-text\">{band.description}</p>\n                  <div\n                    className=\"flex-apart profile-preview-icons-container\"\n                    user={band.id}\n                  >\n                    <Button\n                      label=\"MESSAGE\"\n                      onClick={showMessageModal}\n                      size=\"medium\"\n                      mode=\"primary\"\n                    />\n                    <a href={`/bands/${band.id}`}>\n                      <Button label=\"PROFILE\" size=\"medium\" mode=\"secondary\" />\n                    </a>\n                  </div>\n                  <div>\n                    <SoundCloudWidget soundCloudUrl={band.soundCloudUrl} />\n                  </div>\n                </Modal.Body>\n              </>\n            ),\n          });\n        }\n      }\n    },\n    onError: (error) => {\n      setModalState({\n        open: true,\n        content: (\n          <Modal.Body className=\"solid-background\">\n            <p> Sorry, we couldn't load filtering options at this time </p>\n          </Modal.Body>\n        ),\n      });\n    },\n  });\n\n  const [getMusicianInfo] = useLazyQuery(MUSICIAN_PREVIEW, {\n    fetchPolicy: \"network-only\",\n    onCompleted: (data) => {\n      if (!modalState.open) {\n        if (!data) {\n          setModalState({\n            open: true,\n            content: (\n              <Modal.Body className=\"solid-background\">\n                <p> Sorry, we couldn't load filtering options at this time </p>\n              </Modal.Body>\n            ),\n          });\n        } else {\n          const musician = data.musicianUser;\n          const title = musician.firstName + \" \" + musician.lastName;\n          setModalState({\n            open: true,\n            content: (\n              <>\n                <Modal.Body className=\"solid-background text-align-center\">\n                  <div\n                    className=\"profile-preview-image\"\n                    style={{\n                      backgroundImage: \"url(\" + musician.imageUrl + \")\",\n                      backgroundPosition: \"center center\",\n                    }}\n                  >\n                    <div className=\"image-overlay\">\n                      <div className=\"profile-preview-image-overlay-item\">\n                        {musician.experienceLevel}\n                      </div>\n                    </div>\n                  </div>\n                  <p className=\"title\">{title}</p>\n\n                  <p className=\"p-yellow pb-2\">\n                    {generateGenres(musician.genre).join(\" / \")}\n                  </p>\n                  <p className=\"pb-10\">\n                    {generateInstruments(musician.instruments).join(\" \")}\n                  </p>\n                  <p className=\"regular-text\">{musician.description}</p>\n                  <div\n                    className=\"flex-apart profile-preview-icons-container\"\n                    user={musician.id}\n                  >\n                    <Button\n                      label=\"MESSAGE\"\n                      onClick={showMessageModal}\n                      size=\"medium\"\n                      mode=\"primary\"\n                    />\n                    <a href={`profile/${musician.id}`}>\n                      <Button label=\"PROFILE\" size=\"medium\" mode=\"secondary\" />\n                    </a>\n                  </div>\n                  <div>\n                    <SoundCloudWidget soundCloudUrl={musician.soundCloudUrl} />\n                  </div>\n                </Modal.Body>\n              </>\n            ),\n          });\n        }\n      }\n    },\n    onError: (error) => {\n      setModalState({\n        open: true,\n        content: (\n          <Modal.Body className=\"solid-background\">\n            <p> Sorry, we couldn't load filtering options at this time </p>\n          </Modal.Body>\n        ),\n      });\n    },\n  });\n\n  const [sendMessageData] = useMutation(CREATE_MESSAGE, {\n    onCompleted: () => {\n      setModalState({ open: false, content: null });\n    },\n  });\n\n  const sendMessage = async (formData) => {\n    const text = formData.text;\n    const senderId = state.user.id;\n    const recipientId = props.userId;\n\n    await sendMessageData({\n      variables: { createMessageInput: { text, senderId, recipientId } },\n    });\n  };\n\n  const showMessageModal = () => {\n    setModalState({\n      open: true,\n      content: (\n        <>\n          <Modal.Body className=\"solid-background messaging-modal\">\n            <Title text=\"MESSAGES\" type=\"profile\" />\n            <form className=\"px-5\" onSubmit={handleSubmit(sendMessage)}>\n              <div className=\"py-3\">\n                To:{\" \"}\n                {props.firstName &&\n                  props.firstName.charAt(0).toUpperCase() +\n                    props.firstName.slice(1)}{\" \"}\n                {props.lastName &&\n                  props.lastName.charAt(0).toUpperCase() +\n                    props.lastName.slice(1)}\n                {props.name && props.name}\n              </div>\n              <textarea\n                className=\"message-text-area\"\n                name=\"text\"\n                {...register(\"text\", {\n                  required: true,\n                  shouldUnregister: true,\n                })}\n                placeholder=\"Write your message here...\"\n              ></textarea>\n              <div className=\"text-center\">\n                <Button\n                  type=\"submit\"\n                  label=\"SEND MESSAGE\"\n                  size=\"medium\"\n                  mode=\"primary\"\n                />\n              </div>\n            </form>\n          </Modal.Body>\n        </>\n      ),\n    });\n  };\n\n  const title =\n    props.type === \"band\" ? props.name : props.firstName + \" \" + props.lastName;\n  const instruments = getInstrumentIcons(props.instruments);\n\n  const userPreview = () => {\n    if (props.type === \"band\") {\n      return (\n        <FaUser\n          size={24}\n          onClick={() => getBandInfo({ variables: { bandId: props.userId } })}\n        />\n      );\n    } else {\n      return (\n        <FaUser\n          size={24}\n          onClick={() =>\n            getMusicianInfo({ variables: { musicianUserId: props.userId } })\n          }\n        />\n      );\n    }\n  };\n\n  return (\n    <div\n      className={[`card-container-${props.version}`, `card-container`].join(\n        \" \"\n      )}\n    >\n      <div\n        className=\"card-image\"\n        style={{\n          backgroundImage: \"url(\" + props.imageUrl + \")\",\n          backgroundPosition: \"center center\",\n        }}\n      >\n        <div className=\"image-overlay \">\n          <div className=\"card-image-overlay-item\">{props.experienceLevel}</div>\n        </div>\n      </div>\n      <div className=\"card-body\">\n        {props.name ? (\n          <h3 className=\"title text-limit-one-line\">{props.name}</h3>\n        ) : (\n          <h3 className=\"title text-limit-one-line\">{title}</h3>\n        )}\n        <p className=\"text py-2\">{props.location}</p>\n        <p className=\"p-yellow pb-2 text-limit-one-line\">\n          {props.genre.join(\"/\")}\n        </p>\n        <p className=\"card-text-instruments text-limit-one-line\">\n          {[...instruments]}\n        </p>\n        {props.version === \"extended\" && props.lookingFor.length !== 0 && (\n          <>\n            <p className=\"p-yellow card-text\">LOOKING FOR: </p>\n            <p className=\"text-limit-one-line\">\n              {props.lookingFor.join(\" | \")}\n            </p>\n          </>\n        )}\n        {props.version === \"extended\" && props.lookingFor.length === 0 && (\n          <>\n            <p className=\"p-yellow card-text\">\n              NOT CURRENTLY LOOKING FOR NEW MEMBERS{\" \"}\n            </p>\n          </>\n        )}\n        <div className=\"icon-container\" user={props.userId} type={props.type}>\n          <FaComment size={24} onClick={showMessageModal} />\n          {userPreview()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AssembleCard;\n","import moment from \"moment\";\nimport { useLazyQuery, useMutation } from \"@apollo/client\";\nimport { Modal } from \"react-bootstrap\";\nimport { useModal } from \"../../contexts/ModalProvider\";\nimport { GIG_PREVIEW } from \"../../graphql/queries\";\nimport Button from \"../Button\";\nimport {\n  CANCEL_GIG,\n  CREATE_GIG_REQUEST,\n  DELETE_GIG,\n} from \"../../graphql/mutations\";\nimport { useUserContext } from \"../../contexts/UserProvider\";\nimport Title from \"../Title\";\nimport { useHistory } from \"react-router-dom\";\n\nconst GigCard = (props) => {\n  const { setModalState, modalState } = useModal();\n  const { state } = useUserContext();\n  const history = useHistory();\n  const postcode = props.postcode.replace(/[+]/g, \" \");\n  const date = moment(props.dateTime * 1)\n    .local()\n    .format(\"DD-MM-YYYY HH:mm\");\n\n  const [gigRequestQuery] = useMutation(CREATE_GIG_REQUEST, {\n    onCompleted: (data) => {\n      setModalState({\n        open: true,\n        content: (\n          <>\n            <Modal.Body className=\"solid-background messaging-modal\">\n              <Title text=\"REQUEST SENT\" type=\"profile\" />\n              <div className=\"text-center pt-3 mx-3\">SUCCESS!</div>\n              <div className=\"text-center pt-4 mx-5\">\n                Your request has been sent to the venue owner. They will review\n                your request and contact you if you are successful!\n              </div>\n            </Modal.Body>\n          </>\n        ),\n      });\n    },\n    onError: (error) => {\n      console.log(error);\n    },\n  });\n  const sendGigRequest = async (event) => {\n    await gigRequestQuery({\n      variables: {\n        createGigRequestInput: {\n          id: props.gigId,\n          performer: { musician: state.user.id },\n        },\n      },\n    });\n\n    setTimeout(() => {\n      history.go(0);\n    }, 800);\n  };\n  const [deleteGigQuery] = useMutation(DELETE_GIG);\n  const sendDeleteRequest = async () => {\n    await deleteGigQuery({\n      variables: {\n        deleteGigInput: {\n          id: props.gigId,\n        },\n      },\n    });\n  };\n\n  const [cancelGigPerformance] = useMutation(CANCEL_GIG);\n  const sendPerformanceCancellation = async () => {\n    await cancelGigPerformance({\n      variables: {\n        deleteGigRequestId: props.performersId,\n      },\n    });\n\n    setTimeout(() => {\n      history.go(0);\n    }, 800);\n  };\n\n  const [getGigInfo] = useLazyQuery(GIG_PREVIEW, {\n    fetchPolicy: \"network-only\",\n    onCompleted: (data) => {\n      if (!modalState.open) {\n        if (!data) {\n          setModalState({\n            open: true,\n            content: (\n              <Modal.Body className=\"solid-background\">\n                <p>\n                  Sorry, we couldn't load information about this gig at this\n                  time. Please try again later.\n                </p>\n              </Modal.Body>\n            ),\n          });\n        } else {\n          const gig = data.gig;\n          const date = moment(gig.dateTime * 1)\n            .local()\n            .format(\"DD-MM-YYYY HH:mm\");\n\n          setModalState({\n            open: true,\n            content: (\n              <>\n                <Modal.Body className=\"solid-background text-align-center\">\n                  <div\n                    className=\"profile-preview-image\"\n                    style={{\n                      backgroundImage: \"url(\" + gig.imageUrl + \")\",\n                      backgroundPosition: \"center center\",\n                    }}\n                  >\n                    <div className=\"image-overlay\">\n                      <div className=\"profile-preview-image-overlay-item\">\n                        <p>{gig.genre.name} </p>\n                      </div>\n                    </div>\n                  </div>\n                  <h5 className=\"title\">{gig.title}</h5>\n                  <p> {date} </p>\n                  <p> @ {gig.venue.name} </p>\n                  <div>{gig.venue.postcode}</div>\n                  <p className=\"p-yellow pb-2 pb-10\">PAY: £{gig.fee}</p>\n                  <p className=\"regular-text\">{gig.description}</p>\n                  <div\n                    className=\"flex-apart profile-preview-icons-container\"\n                    user={gig.id}\n                  >\n                    {state.user.name === props.venueName && (\n                      <Button\n                        label=\"DELETE\"\n                        onClick={sendDeleteRequest}\n                        size=\"medium\"\n                        mode=\"delete\"\n                      />\n                    )}\n                    {props.version === \"regular\" && (\n                      <Button\n                        label=\"REQUEST\"\n                        onClick={sendGigRequest}\n                        size=\"medium\"\n                        mode=\"primary\"\n                      />\n                    )}\n                    {props.version === \"myRequestedGig\" && (\n                      <Button\n                        label=\"APPLIED\"\n                        size=\"medium\"\n                        mode=\"applied\"\n                        disabled={true}\n                      />\n                    )}\n                    {props.version === \"myAcceptedGig\" && (\n                      <Button\n                        label=\"CANCEL\"\n                        onClick={sendPerformanceCancellation}\n                        size=\"medium\"\n                        mode=\"primary\"\n                      />\n                    )}\n                    <a href={`venues/${gig.venue.id}`}>\n                      <Button label=\"VENUE\" size=\"medium\" mode=\"secondary\" />\n                    </a>\n                  </div>\n                </Modal.Body>\n              </>\n            ),\n          });\n        }\n      }\n    },\n    onError: () => {\n      setModalState({\n        open: true,\n        content: (\n          <Modal.Body className=\"solid-background\">\n            <p>\n              Sorry, we couldn't load information about this gig at this time.\n              Please try again later.\n            </p>\n          </Modal.Body>\n        ),\n      });\n    },\n  });\n\n  return (\n    <div className=\"card-container card-container-shortened mx-3\">\n      <div\n        className=\"card-image\"\n        style={{\n          backgroundImage: \"url(\" + props.imageUrl + \")\",\n          backgroundPosition: \"center center\",\n        }}\n      >\n        <div className=\"image-overlay\">\n          <div className=\"card-image-overlay-item\">{props.genre}</div>\n        </div>\n      </div>\n      <div>\n        <h3 className=\"title text-limit-one-line\"> {props.title} </h3>\n        <p> {date} </p>\n        <p className=\"text-limit-two-line\">\n          @ {props.venueName} {postcode}\n        </p>\n        <p className=\"p-yellow pb-2 pb-10\">PAY: £{props.fee}</p>\n      </div>\n      <div id={props.gigId}>\n        {state.user.name === props.venueName && (\n          <Button\n            label=\"DELETE\"\n            onClick={sendDeleteRequest}\n            size=\"small\"\n            mode=\"delete\"\n          />\n        )}\n        {props.version === \"regular\" && (\n          <Button\n            label=\"REQUEST\"\n            onClick={sendGigRequest}\n            size=\"small\"\n            mode=\"primary\"\n          />\n        )}\n        {props.version === \"myRequestedGig\" && (\n          <Button label=\"APPLIED\" size=\"small\" mode=\"applied\" disabled={true} />\n        )}\n        {props.version === \"myAcceptedGig\" && (\n          <Button\n            label=\"CANCEL\"\n            onClick={sendPerformanceCancellation}\n            size=\"small\"\n            mode=\"secondary\"\n          />\n        )}\n        <Button\n          label=\"MORE INFO\"\n          size=\"small\"\n          mode=\"secondary\"\n          onClick={() => getGigInfo({ variables: { gigId: props.gigId } })}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default GigCard;\n","import AssembleCard from \"../components/AssembleCard\";\nimport GigCard from \"../components/GigCard\";\n\nexport const constructPerformerCards = (cards, version = \"extended\") => {\n  const cardsToRender = cards.map((card) => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      if (user.id !== card.id) {\n        return (\n          <AssembleCard\n            key={`${version}-${card.id}`}\n            type={card.type}\n            name={card.name}\n            firstName={card.firstName}\n            lastName={card.lastName}\n            imageUrl={card.imageUrl}\n            instruments={card.instruments || []}\n            lookingFor={card.lookingFor || []}\n            genre={card.genre || []}\n            experienceLevel={card.experienceLevel}\n            version={version}\n            userId={card.id}\n            location={card.location}\n          />\n        );\n      }\n    } else {\n      return (\n        <AssembleCard\n          key={`${version}-${card.id}`}\n          type={card.type}\n          name={card.name}\n          firstName={card.firstName}\n          lastName={card.lastName}\n          imageUrl={card.imageUrl}\n          instruments={card.instruments || []}\n          lookingFor={card.lookingFor || []}\n          genre={card.genre || []}\n          experienceLevel={card.experienceLevel}\n          version={version}\n          userId={card.id}\n          location={card.location}\n        />\n      );\n    }\n  });\n\n  return cardsToRender;\n};\n\nexport const constructBandMemberCards = (cards, version = \"extended\") => {\n  const cardsToRender = cards.map((card) => {\n    return (\n      <AssembleCard\n        key={`${version}-${card.id}`}\n        type={card.type}\n        name={card.name}\n        firstName={card.firstName}\n        lastName={card.lastName}\n        imageUrl={card.imageUrl}\n        instruments={card.instruments || []}\n        lookingFor={card.lookingFor || []}\n        genre={card.genre || []}\n        experienceLevel={card.experienceLevel}\n        version={version}\n        userId={card.id}\n        location={card.location}\n      />\n    );\n  });\n\n  return cardsToRender;\n};\n\nexport const constructGigCards = (gigs, version, userId) => {\n  const cardsToRender = gigs.map((gig) => {\n    const genre = gig.genre.name;\n    const venueName = gig.venue.name;\n    const postcode = gig.venue.postcode;\n\n    let performersId;\n    let primaryButtonVersion;\n\n    if (userId) {\n      if (version === \"myAcceptedGig\") {\n        primaryButtonVersion = version;\n        const performanceRequestId = gig.performers.filter(\n          (performer) => performer.musician === userId\n        );\n        performersId = performanceRequestId[0]._id;\n      } else {\n        const pendingGig = gig.performers.filter(\n          (performer) =>\n            performer.musician === userId &&\n            (performer.confirmed === \"pending\" || \"false\")\n        );\n\n        const acceptedGig = gig.performers.filter(\n          (performer) =>\n            performer.musician === userId && performer.confirmed === \"true\"\n        );\n\n        if (!version && pendingGig.length) {\n          primaryButtonVersion = \"myRequestedGig\";\n        }\n\n        if (!version && acceptedGig.length) {\n          primaryButtonVersion = \"myAcceptedGig\";\n          const performanceRequestId = gig.performers.filter(\n            (performer) => performer.musician === userId\n          );\n          performersId = performanceRequestId[0]._id;\n        }\n      }\n    }\n\n    if (!primaryButtonVersion && userId !== \"venue\") {\n      primaryButtonVersion = \"regular\";\n    }\n\n    return (\n      <GigCard\n        key={gig.id}\n        title={gig.title}\n        genre={genre}\n        performersId={performersId}\n        imageUrl={gig.imageUrl}\n        dateTime={gig.dateTime}\n        venueName={venueName}\n        postcode={postcode}\n        gigId={gig.id}\n        fee={gig.fee}\n        version={primaryButtonVersion}\n      />\n    );\n  });\n\n  return cardsToRender;\n};\n","import Carousel from \"react-multi-carousel\";\nimport \"react-multi-carousel/lib/styles.css\";\nimport { constructPerformerCards } from \"../../utils/constructCards\";\n\nconst responsive = {\n  largeDesktop: {\n    breakpoint: { max: 3000, min: 1401 },\n    items: 6,\n    slidesToSlide: 1,\n  },\n  desktop: {\n    breakpoint: { max: 1400, min: 1308 },\n    items: 5,\n    slidesToSlide: 1,\n  },\n  largeTablet: {\n    breakpoint: { max: 1307, min: 1040 },\n    items: 4,\n    slidesToSlide: 1,\n  },\n  tablet: {\n    breakpoint: { max: 1039, min: 780 },\n    items: 3,\n    slidesToSlide: 1,\n  },\n  largeMobile: {\n    breakpoint: { max: 779, min: 526 },\n    items: 2,\n    slidesToSlide: 1,\n  },\n  mobile: {\n    breakpoint: { max: 525, min: 0 },\n    items: 1,\n    slidesToSlide: 1,\n  },\n};\n\nconst CardsCarousel = ({ cards }) => {\n  const cardComponents = constructPerformerCards(cards, \"carousel\");\n\n  return (\n    <Carousel\n      infinite={true}\n      itemClass=\"carousel-item-padding-40-px\"\n      containerClass=\"carousel-container\"\n      responsive={responsive}\n    >\n      {cardComponents}\n    </Carousel>\n  );\n};\n\nexport default CardsCarousel;\n","import Select from \"react-select\";\nimport { Controller } from \"react-hook-form\";\n\nimport \"./MultiSelectDropdown.css\";\n\nconst colourStyles = {\n  control: (styles) => ({ ...styles, backgroundColor: \"grey\" }),\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n    return {\n      ...styles,\n      backgroundColor: isDisabled\n        ? null\n        : isSelected\n        ? \"grey\"\n        : isFocused\n        ? \"grey\"\n        : null,\n      color: isSelected ? \"white\" : \"black\",\n      cursor: isDisabled ? \"not-allowed\" : \"default\",\n\n      \":active\": {\n        ...styles[\":active\"],\n        backgroundColor: !isDisabled && (isSelected ? \"white\" : \"grey\"),\n      },\n    };\n  },\n  multiValue: (styles, { data }) => {\n    return {\n      ...styles,\n      backgroundColor: \"grey\",\n    };\n  },\n  multiValueLabel: (styles, { data }) => ({\n    ...styles,\n    backgroundColor: \"black\",\n    color: \"white\",\n  }),\n  multiValueRemove: (styles, { data }) => ({\n    ...styles,\n    backgroundColor: \"black\",\n    \":hover\": {\n      backgroundColor: \"grey\",\n    },\n  }),\n};\n\nconst MultiSelectDropDown = ({\n  options,\n  placeholder,\n  isMulti,\n  name,\n  defaultValue,\n  control,\n  label,\n  required,\n}) => {\n  return (\n    <div className=\"multiSelect\">\n      <div className=\"question-div\">\n        <div className=\"question\">{label}</div>\n      </div>\n      <div className=\"black-text\">\n        <Controller\n          render={({ field: { onChange, value, ref } }) => (\n            <Select\n              styles={colourStyles}\n              className=\"black-text\"\n              inputRef={ref}\n              value={options.filter((option) => value.includes(option.value))}\n              onChange={(selectedOptions) =>\n                onChange(selectedOptions.map((option) => option.value))\n              }\n              options={options}\n              isMulti={isMulti}\n              placeholder={placeholder}\n              required={required}\n            />\n          )}\n          name={name}\n          defaultValue={defaultValue || \"\"}\n          control={control}\n          rules={{ required }}\n        />\n      </div>\n    </div>\n  );\n};\nexport default MultiSelectDropDown;\n","import React, { useCallback } from \"react\";\n\nimport \"../../App.css\";\nimport \"./FilterStrip.css\";\n\nimport Button from \"../Button/index\";\n\nimport { Modal } from \"react-bootstrap\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { useForm } from \"react-hook-form\";\n\nimport MultiSelectDropDown from \"../MultiSelectDropdown\";\nimport { useUserContext } from \"../../contexts/UserProvider\";\nimport { GENRESINSTRUMENTS } from \"../../graphql/queries\";\nimport { useModal } from \"../../contexts/ModalProvider\";\nimport locationOptions from \"../../data/locationOptions\";\n\nconst FilterStrip = (props) => {\n  const { dispatch, state } = useUserContext();\n  const { modalState, setModalState } = useModal();\n\n  const { handleSubmit, control } = useForm({\n    mode: \"onBlur\",\n    reValidateMode: \"onChange\",\n    shouldFocusError: true,\n  });\n\n  const handleApplyFilters = useCallback(\n    ({\n      genre,\n      instruments,\n      experienceLevel,\n      lookingFor,\n      userType,\n      location,\n    }) => {\n      const payload = {\n        genre,\n        instruments,\n        experienceLevel,\n        lookingFor,\n        userType,\n        location,\n      };\n\n      // save filters in global context\n      dispatch({\n        type: \"SETUSERFILTERS\",\n        payload,\n      });\n\n      // hide modal\n      setModalState({\n        open: false,\n        content: null,\n      });\n\n      // save filters in local storage, in case page is reloaded\n      const filters = JSON.stringify(payload);\n\n      localStorage.setItem(\"userFilters\", filters);\n    },\n    [dispatch, setModalState]\n  );\n\n  const [getFilterOptions] = useLazyQuery(GENRESINSTRUMENTS, {\n    fetchPolicy: \"network-only\",\n    onCompleted: (data) => {\n      if (!modalState.open) {\n        if (!data) {\n          setModalState({\n            open: true,\n            content: (\n              <Modal.Body className=\"solid-background\">\n                <p> Sorry, we couldn't load filtering options at this time </p>\n              </Modal.Body>\n            ),\n          });\n        } else {\n          const serverGenres = data.genres.map((genre) => {\n            return {\n              value: genre.id,\n              label: genre.name.charAt(0).toUpperCase() + genre.name.slice(1),\n            };\n          });\n\n          const instruments = data.instruments.map((instrument) => {\n            return {\n              value: instrument.id,\n              label:\n                instrument.name.charAt(0).toUpperCase() +\n                instrument.name.slice(1),\n            };\n          });\n\n          const musicalRoles = data.instruments.map((instrument) => {\n            return {\n              value: instrument.id,\n              label:\n                instrument.role.charAt(0).toUpperCase() +\n                instrument.role.slice(1),\n            };\n          });\n\n          setModalState({\n            open: true,\n            content: (\n              <>\n                <Modal.Header\n                  closeButton\n                  className=\"solid-background\"\n                  closeVariant=\"white\"\n                >\n                  <Modal.Title\n                    id=\"contained-modal-title-vcenter\"\n                    className=\"title\"\n                  >\n                    SELECT FILTERS\n                  </Modal.Title>\n                </Modal.Header>\n                <Modal.Body className=\"solid-background\">\n                  <form onSubmit={handleSubmit(handleApplyFilters)}>\n                    <p>LOCATION</p>\n                    <MultiSelectDropDown\n                      options={serverGenres}\n                      defaultValue={state.userFilters.genre}\n                      placeholder=\"Select genre\"\n                      isMulti={true}\n                      name=\"genre\"\n                      control={control}\n                      label=\"Genre\"\n                    />\n\n                    <MultiSelectDropDown\n                      options={locationOptions}\n                      defaultValue={state.userFilters.location}\n                      placeholder=\"Select location\"\n                      isMulti={true}\n                      name=\"location\"\n                      control={control}\n                      label=\"Location\"\n                    />\n\n                    <MultiSelectDropDown\n                      options={instruments}\n                      defaultValue={state.userFilters.instruments}\n                      placeholder=\"Select instruments\"\n                      isMulti={true}\n                      name=\"instruments\"\n                      control={control}\n                      label=\"Instruments\"\n                    />\n                    <MultiSelectDropDown\n                      options={musicalRoles}\n                      defaultValue={state.userFilters.lookingFor}\n                      placeholder=\"Select instruments\"\n                      isMulti={true}\n                      name=\"lookingFor\"\n                      control={control}\n                      label=\"Looking for\"\n                    />\n                    <MultiSelectDropDown\n                      options={[\n                        { value: \"newbie\", label: \"Newbie\" },\n                        { value: \"midway\", label: \"Midway\" },\n                        { value: \"expert\", label: \"Expert\" },\n                      ]}\n                      defaultValue={state.userFilters.experienceLevel}\n                      placeholder=\"Select experience level\"\n                      isMulti={true}\n                      name=\"experienceLevel\"\n                      control={control}\n                      label=\"Experience level\"\n                    />\n                    <MultiSelectDropDown\n                      options={[\n                        { value: \"band\", label: \"Band\" },\n                        { value: \"musician\", label: \"Musician\" },\n                      ]}\n                      defaultValue={state.userFilters.userType}\n                      placeholder=\"Select performer type\"\n                      isMulti={true}\n                      name=\"userType\"\n                      control={control}\n                      label=\"Band or Musician\"\n                    />\n                    <Button\n                      type=\"submit\"\n                      label=\"APPLY\"\n                      mode=\"primary\"\n                      size=\"medium\"\n                    />\n                  </form>\n                </Modal.Body>\n              </>\n            ),\n          });\n        }\n      }\n    },\n    onError: (error) => {\n      setModalState({\n        open: true,\n        content: (\n          <Modal.Body className=\"solid-background\">\n            <p> Sorry, we couldn't load filtering options at this time </p>\n          </Modal.Body>\n        ),\n      });\n    },\n  });\n\n  return (\n    <div className=\"filter-strip-container see-through-background-90\">\n      <div className=\"filter-strip-elements-container gutter\">\n        <p className=\"title\">{props.title}</p>\n        <Button\n          label=\"FILTER\"\n          size=\"medium\"\n          mode=\"primary\"\n          onClick={() => {\n            getFilterOptions();\n          }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default FilterStrip;\n","const renderCards = (data) => {\n  const { musicians } = data;\n\n  let bands = [];\n\n  if (data.bands) {\n    bands = data.bands.map((band) => {\n      return {\n        ...band,\n        type: \"band\",\n      };\n    });\n  }\n\n  // takes whichever array is larger to not limit cards rendered\n  const cardsLength =\n    musicians.length > bands.length ? musicians.length : bands.length;\n\n  const newCards = [];\n\n  // for cards length pushes bands first then musicians until the shorter one runs out\n  for (let index = 0; index < cardsLength; index++) {\n    if (bands[index]) {\n      newCards.push(bands[index]);\n    }\n\n    if (musicians[index]) {\n      newCards.push(musicians[index]);\n    }\n  }\n\n  const cards = newCards.map((card) => {\n    let genres = [];\n    let instruments = [];\n    let lookingFor = [];\n\n    card.genre.forEach((genre) => {\n      genres.push(genre.name);\n    });\n\n    card.instruments.forEach((instrument) => {\n      instruments.push(instrument.name);\n    });\n\n    card.lookingFor.forEach((looking) => {\n      lookingFor.push(looking.role);\n    });\n    return {\n      ...card,\n      genre: genres,\n      instruments,\n      lookingFor,\n    };\n  });\n\n  return cards;\n};\n\nexport default renderCards;\n","const LoadingSpinner = () => {\n  return (\n    <div className=\"pb-5 text-center\">\n      <div className=\"spinner-border \" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport \"./Assemble.css\";\nimport Header from \"../../components/Header\";\nimport CardsCarousel from \"../../components/Carousel\";\nimport FilterStrip from \"../../components/FilterStrip\";\nimport { constructPerformerCards } from \"../../utils/constructCards\";\nimport Button from \"../../components/Button\";\n\nimport { ASSEMBLE, ASSEMBLE_CAROUSEL } from \"../../graphql/queries\";\nimport { useUserContext } from \"../../contexts/UserProvider\";\nimport renderCards from \"../../utils/renderCardsLogic\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\n\nconst Assemble = (props) => {\n  const { state } = useUserContext();\n\n  const [hasMoreItems, setHasMoreItems] = useState(true);\n\n  const filters = {\n    genre: state.userFilters.genre,\n    instruments: state.userFilters.instruments,\n    lookingFor: state.userFilters.lookingFor,\n    experienceLevel: state.userFilters.experienceLevel,\n    userType: state.userFilters.userType,\n    location: state.userFilters.location,\n  };\n\n  const {\n    data: assembleData,\n    loading: assembleLoading,\n    error,\n    fetchMore,\n  } = useQuery(ASSEMBLE, {\n    variables: {\n      assembleFilters: filters,\n      bandsOffset: 0,\n      musiciansOffset: 0,\n    },\n    onError: (error) => {\n      console.log(error);\n    },\n  });\n\n  const {\n    data: carouselData,\n    loading: carouselLoading,\n    error: carouselError,\n  } = useQuery(ASSEMBLE_CAROUSEL);\n\n  if (error) {\n    console.log(error);\n    return <div>Error</div>;\n  }\n\n  if (carouselError) {\n    console.log(carouselError);\n    return <div>Error</div>;\n  }\n\n  let carouselCards;\n  if (carouselData) {\n    carouselCards = renderCards(carouselData.assembleCarousel);\n  }\n\n  let assembleCards;\n  if (assembleData) {\n    assembleCards = renderCards(assembleData.assemble);\n  }\n\n  const onLoadMore = async () => {\n    await fetchMore({\n      variables: {\n        bandsOffset: assembleData.assemble.bands.length,\n        musiciansOffset: assembleData.assemble.musicians.length,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev;\n\n        if (\n          !fetchMoreResult.assemble.bands.length &&\n          !fetchMoreResult.assemble.musicians.length\n        ) {\n          setHasMoreItems(false);\n        }\n\n        const result = {\n          assemble: {\n            id: prev.assemble.id,\n            bands: [...prev.assemble.bands, ...fetchMoreResult.assemble.bands],\n            musicians: [\n              ...prev.assemble.musicians,\n              ...fetchMoreResult.assemble.musicians,\n            ],\n          },\n        };\n\n        return result;\n      },\n    });\n  };\n\n  return (\n    <div className=\"results-page-container\">\n      <Header className=\"pt-3\" title=\"Create, complete or join a band\" />\n      <div className=\"see-through-background-90 mt-20 \">\n        <p className=\"title gutter\">NEW KIDS ON THE BLOCK</p>\n        {carouselLoading && <LoadingSpinner />}\n        {carouselData && <CardsCarousel cards={carouselCards} />}\n      </div>\n      <FilterStrip title=\"FIND YOUR MATCH\" />\n      <div className=\"see-through-background-90 text-align-center main-cards-container\">\n        {assembleLoading && <LoadingSpinner />}\n        {assembleData && (\n          <div className=\"cards-container\">\n            {constructPerformerCards(assembleCards)}\n          </div>\n        )}\n        {hasMoreItems && (\n          <Button\n            label=\"LOAD MORE\"\n            size=\"medium\"\n            mode=\"primary\"\n            onClick={onLoadMore}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Assemble;\n","import { useMutation } from \"@apollo/client\";\nimport { useForm } from \"react-hook-form\";\nimport { FaComment } from \"react-icons/fa\";\nimport { GrSoundcloud } from \"react-icons/gr\";\nimport { Modal } from \"react-bootstrap\";\n\nimport { useModal } from \"../../contexts/ModalProvider\";\nimport { useUserContext } from \"../../contexts/UserProvider\";\nimport { CREATE_MESSAGE } from \"../../graphql/mutations\";\nimport Title from \"../Title\";\n\nimport \"./ProfileInfo.css\";\nimport Button from \"../Button\";\n\nconst ProfileInfo = (props) => {\n  const { state } = useUserContext();\n\n  const { setModalState } = useModal();\n\n  const { register, handleSubmit } = useForm();\n\n  const [sendMessageData] = useMutation(CREATE_MESSAGE, {\n    onCompleted: () => {\n      setModalState({ open: false, content: null });\n    },\n  });\n\n  const sendMessage = async (formData) => {\n    const text = formData.text;\n    const senderId = state.user.id;\n    const recipientId = props.userId;\n\n    await sendMessageData({\n      variables: { createMessageInput: { text, senderId, recipientId } },\n    });\n  };\n\n  const showMessageModal = () => {\n    setModalState({\n      open: true,\n      content: (\n        <>\n          <Modal.Body className=\"solid-background messaging-modal\">\n            <Title text=\"MESSAGES\" type=\"profile\" />\n            <form className=\"px-5\" onSubmit={handleSubmit(sendMessage)}>\n              <div className=\"py-3\">To: {props.name && props.name}</div>\n              <textarea\n                className=\"message-text-area\"\n                name=\"text\"\n                {...register(\"text\", {\n                  required: true,\n                  shouldUnregister: true,\n                })}\n                placeholder=\"Write your message here...\"\n              ></textarea>\n              <div className=\"text-center\">\n                <Button\n                  type=\"submit\"\n                  label=\"SEND MESSAGE\"\n                  size=\"medium\"\n                  mode=\"primary\"\n                />\n              </div>\n            </form>\n          </Modal.Body>\n        </>\n      ),\n    });\n  };\n\n  return (\n    <div className=\"profile-strip\">\n      <div\n        className=\"profile-image\"\n        style={{\n          backgroundImage: \"url(\" + props.imageUrl + \")\",\n          backgroundPosition: \"center center\",\n        }}\n      >\n        <div className=\"image-overlay\">\n          <div className=\"profile-preview-image-overlay-item\">\n            {props.experienceLevel}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"musician-info-div text-center\">\n        {props.myProfile && <p className=\"title mb-2\">{props.name}</p>}\n        {props.location && <p className=\"mb-3\">Location: {props.location}</p>}\n        {props.instruments && (\n          <p className=\"p-yellow pb-2 \">\n            Instrument(s): {props.instruments.join(\" | \")}\n          </p>\n        )}\n        {props.genre && (\n          <p className=\"p-yellow pb-2 text-limit-one-line\">\n            Genre(s): {props.genre.join(\" | \")}\n          </p>\n        )}\n\n        {props.websiteUrl && (\n          <a href={props.websiteUrl} className=\"mb-3\">\n            {props.websiteUrl}\n          </a>\n        )}\n\n        {props.openTo && props.myProfile && (\n          <p className=\"mb-3\">{props.openTo}</p>\n        )}\n\n        <div>{props.description}</div>\n\n        {props.myProfile && props.lookingFor && props.lookingFor.length && (\n          <p className=\"p-yellow mt-2 text-limit-one-line\">\n            LOOKING FOR:{\" \"}\n            <span className=\"looking-for\">{props.lookingFor.join(\" | \")}</span>\n          </p>\n        )}\n        <div className=\"profile-icon-container mt-4\">\n          <div className=\"message-icon\">\n            <FaComment size={24} onClick={showMessageModal} />\n          </div>\n          {props.soundCloudUrl && (\n            <a target=\"_blank\" rel=\"noreferrer\" href={props.soundCloudUrl}>\n              <GrSoundcloud size={32} />\n            </a>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import { AiFillCamera, AiFillEdit } from \"react-icons/ai\";\nimport { RiDeleteBin6Fill } from \"react-icons/ri\";\nimport { useState } from \"react\";\nimport S3 from \"react-aws-s3\";\nimport ImageUploading from \"react-images-uploading\";\n\nimport Button from \"../Button\";\n\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = ({ email, setImageUrl, imageUrl }) => {\n  const [images, setImages] = useState([]);\n\n  const onChange = (imageList) => {\n    setImages(imageList);\n  };\n\n  const onUpload = async () => {\n    const file = images[0].file;\n    const fileName = `${email}/images/profile/${file.name}`;\n\n    const config = {\n      bucketName: process.env.REACT_APP_BUCKET_NAME,\n      region: process.env.REACT_APP_REGION,\n      accessKeyId: process.env.REACT_APP_ACCESS_ID,\n      secretAccessKey: process.env.REACT_APP_ACCESS_KEY,\n    };\n\n    const ReactS3Client = new S3(config);\n\n    const s3Data = await ReactS3Client.uploadFile(file, fileName);\n\n    if (s3Data.status === 204) {\n      setImageUrl(s3Data.location);\n      setImages([]);\n    } else {\n      console.log(\"Failed to upload image\");\n    }\n  };\n\n  return (\n    <div className=\"App py-3\">\n      <ImageUploading value={images} onChange={onChange} dataURLKey=\"data_url\">\n        {({ imageList, onImageUpload, onImageRemoveAll }) => (\n          <div className=\"upload__image-wrapper\">\n            <div className=\"card-action-area text-center\">\n              {images.length !== 0 && (\n                <>\n                  <div>\n                    <img\n                      className=\"preview-image\"\n                      alt={images[0].name}\n                      src={images[0][\"data_url\"]}\n                    />\n                    <div className=\"preview-title my-2\">Image Preview</div>\n                  </div>\n                </>\n              )}\n\n              {imageList.length !== 0 && (\n                <div className=\"d-flex gap-2 justify-content-center px-3\">\n                  <button className=\"logo-button\" onClick={onImageRemoveAll}>\n                    <span className=\"upload-logo\">\n                      <RiDeleteBin6Fill size=\"1.5rem\" />\n                    </span>\n                  </button>\n\n                  <button className=\"logo-button\" onClick={onImageUpload}>\n                    <span className=\"upload-logo\">\n                      <AiFillEdit size=\"1.5rem\" />\n                    </span>\n                  </button>\n                </div>\n              )}\n            </div>\n\n            {imageList.length !== 0 && (\n              <div className=\"d-flex gap-2 justify-content-center py-2\">\n                <Button\n                  mode=\"primary\"\n                  label=\"UPLOAD\"\n                  size=\"medium\"\n                  type=\"button\"\n                  onClick={onUpload}\n                />\n              </div>\n            )}\n\n            <div className=\"image-upload-actions\">\n              {imageList.length === 0 && (\n                <button\n                  type=\"button\"\n                  className=\"upload-btn\"\n                  onClick={onImageUpload}\n                >\n                  <span className=\"upload-logo\">\n                    <AiFillCamera size=\"1.5rem\" fill=\"black\" />\n                  </span>\n                  SELECT PROFILE IMAGE\n                </button>\n              )}\n\n              {imageUrl && (\n                <div className=\"uploaded-image-div\">\n                  <img\n                    alt={imageUrl}\n                    className=\"preview-image\"\n                    src={imageUrl}\n                  />\n                  <div className=\"preview-title my-2\">Uploaded Image</div>\n                </div>\n              )}\n            </div>\n          </div>\n        )}\n      </ImageUploading>\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import classNames from \"classnames\";\n\nimport \"./FormInput.css\";\n\nconst FormInput = ({\n  placeholder,\n  additionalClassNames,\n  type = \"text\",\n  error,\n  register,\n  required,\n  onBlur,\n  id,\n  value,\n}) => {\n  return (\n    <div className=\"form-element\">\n      <input\n        type={type}\n        className={classNames(\"form-input\", {\n          \"form-input--error\": error,\n          additionalClassNames,\n        })}\n        placeholder={placeholder}\n        defaultValue={value}\n        {...register}\n        required={required}\n        onBlur={onBlur}\n        id={id}\n      />\n    </div>\n  );\n};\n\nexport default FormInput;\n","const getMusicianIds = (musicians) => {\n  return musicians.map((musician) => musician.id);\n};\n\nexport default getMusicianIds;\n","import { useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport $ from \"jquery\";\n\nimport { useUserContext } from \"../../contexts/UserProvider\";\nimport ProfileInfo from \"../../components/ProfileInfo\";\nimport SoundCloudWidget from \"../../components/SoundCloudWidget\";\nimport Button from \"../../components/Button\";\nimport Title from \"../../components/Title\";\nimport {\n  BAND,\n  GENRESINSTRUMENTS,\n  GIGS,\n  VALIDATE_BAND_MEMBERS,\n} from \"../../graphql/queries\";\nimport {\n  constructGigCards,\n  constructBandMemberCards,\n} from \"../../utils/constructCards\";\nimport \"./BandProfile.css\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport MultiSelectDropDown from \"../../components/MultiSelectDropdown\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from \"react-accessible-accordion\";\nimport { BsChevronCompactDown } from \"react-icons/bs\";\nimport ImageUpload from \"../../components/ImageUpload\";\nimport FormInput from \"../../components/FormInput\";\nimport { useModal } from \"../../contexts/ModalProvider\";\nimport { Modal } from \"react-bootstrap\";\nimport {\n  generateDefaultValues,\n  generateOptions,\n  generateRoleOptions,\n} from \"../../utils/generateMultiDropdownOptions\";\nimport { useForm } from \"react-hook-form\";\nimport locationOptions from \"../../data/locationOptions\";\nimport { UPDATE_BAND } from \"../../graphql/mutations\";\nimport getMusicianIds from \"../../utils/getMusicianIds\";\n\nconst BandProfile = (props) => {\n  const { state } = useUserContext();\n  const { id } = useParams();\n  const [modalUpdateData, setModalUpdateData] = useState(null);\n  const [imageUrlBand, setImageUrlBand] = useState();\n  const { setModalState } = useModal();\n  const [validBandMembers, setValidBandMembers] = useState();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    control,\n  } = useForm({\n    mode: \"onBlur\",\n    reValidateMode: \"onChange\",\n    shouldFocusError: true,\n  });\n  let history = useHistory();\n\n  const { data: bandData, loading, error: bandError } = useQuery(BAND, {\n    variables: {\n      bandId: id,\n    },\n    onCompleted: (data) => {\n      const validBandMemberIds = getMusicianIds(data.band.musicians);\n      setValidBandMembers(validBandMemberIds);\n    },\n    onError: (error) => {\n      console.log(error);\n    },\n  });\n\n  let myBandProfile = [];\n\n  if (bandData) {\n    myBandProfile = bandData.band.musicians.filter((musician) => {\n      return musician.id === state.user.id;\n    });\n  }\n\n  const refreshPage = () => {\n    setModalState({\n      open: false,\n    });\n\n    history.go(0);\n  };\n\n  const [validateBandMembers, { data: userValidationData }] = useLazyQuery(\n    VALIDATE_BAND_MEMBERS,\n    {\n      fetchPolicy: \"no-cache\",\n      onCompleted: ({ checkIfMusicianExists }) => {\n        const validUsers = checkIfMusicianExists\n          .filter((musician) => musician.exists)\n          .map((musician) => {\n            return musician.id;\n          });\n\n        if (validUsers) {\n          setValidBandMembers([...validUsers, state.user.id]);\n        } else {\n          setValidBandMembers([state.user.id]);\n        }\n      },\n    }\n  );\n\n  let invalidUsers = [];\n  if (userValidationData) {\n    const filteredInvalidUsers = userValidationData.checkIfMusicianExists.filter(\n      (musician) => !musician.exists\n    );\n\n    invalidUsers = filteredInvalidUsers.map((invalidUser) => invalidUser.email);\n  }\n\n  const validateMembers = useCallback(() => {\n    const membersInput = $(\"#membersInput\").val();\n\n    if (!membersInput) {\n      setValidBandMembers([state.user.id]);\n      invalidUsers = [];\n      return;\n    }\n\n    const formattedMembers = membersInput.split(\",\").map((member) => {\n      return member.trim();\n    });\n\n    validateBandMembers({\n      variables: {\n        checkIfMusicianExistsInput: { musicians: formattedMembers },\n      },\n    });\n\n    invalidUsers = [];\n  }, [validateBandMembers]);\n\n  const [submitEditBandInfo] = useMutation(UPDATE_BAND, {\n    onCompleted: () => {\n      setModalState({\n        open: true,\n        content: (\n          <>\n            <Modal.Header className=\"solid-background\" closeButton>\n              <Modal.Title>Edit Profile</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"solid-background\">\n              <p>Information updated successfully</p>\n            </Modal.Body>\n          </>\n        ),\n      });\n\n      setTimeout(() => {\n        refreshPage();\n      }, 1500);\n    },\n    onError: (error) => {\n      console.log(error);\n      setModalState({\n        open: true,\n        content: (\n          <Modal.Body className=\"solid-background\">\n            <p>Sorry, we couldn't update your page at the moment.</p>\n          </Modal.Body>\n        ),\n      });\n    },\n  });\n\n  const onSubmitEditBand = useCallback(\n    (formData) => {\n      if (formData.lookingFor) {\n        formData.openToMembers = true;\n      } else if (!formData.lookingFor || formData.lookingFor[0] === false) {\n        formData.openToMembers = false;\n      }\n\n      formData.numberOfMembers = parseFloat(formData.numberOfMembers);\n      formData.openToCollaboration = formData.openToCollaboration = \"true\"\n        ? true\n        : false;\n\n      formData.musicians = validBandMembers;\n\n      formData.imageUrl = imageUrlBand ? imageUrlBand : bandData.band.imageUrl;\n\n      submitEditBandInfo({\n        variables: {\n          updateBandInput: {\n            bandInfo: { ...formData },\n            bandId: bandData.band.id,\n          },\n        },\n      });\n    },\n    [bandData, submitEditBandInfo, validBandMembers, imageUrlBand]\n  );\n\n  const [getGenreInstruments, { data: genreInstrumentsData }] = useLazyQuery(\n    GENRESINSTRUMENTS,\n    {\n      fetchPolicy: \"network-only\",\n      onCompleted: (data) => {\n        setModalUpdateData(data);\n      },\n    }\n  );\n\n  const renderBandModal = () => {\n    getGenreInstruments();\n  };\n\n  useEffect(() => {\n    if (genreInstrumentsData && bandData) {\n      const band = bandData.band;\n      const filteredBandMusicians = band.musicians.filter(\n        (musician) => musician.id !== state.user.id\n      );\n      const bandMusicians = filteredBandMusicians.map(\n        (musician) => musician.email\n      );\n      const genres = generateOptions(genreInstrumentsData.genres);\n      const bandGenres = generateDefaultValues(band.genre);\n      const instruments = generateOptions(genreInstrumentsData.instruments);\n      const bandInstruments = generateDefaultValues(band.instruments);\n      const lookingFor = generateRoleOptions(genreInstrumentsData.instruments);\n      const bandLookingFor = generateDefaultValues(band.lookingFor);\n\n      const newData = modalUpdateData;\n      setModalState({\n        open: true,\n        content: (\n          <>\n            <Modal.Header className=\"solid-background\" closeButton>\n              <Modal.Title>Edit {band.name}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"solid-background\">\n              <form onSubmit={handleSubmit(onSubmitEditBand)}>\n                <Accordion preExpanded={[\"a\"]}>\n                  <AccordionItem uuid=\"a\" className=\"accordion-container\">\n                    <AccordionItemHeading className=\"accordion-heading-override\">\n                      <AccordionItemButton>\n                        THE BASICS <BsChevronCompactDown size={24} />\n                      </AccordionItemButton>\n                    </AccordionItemHeading>\n                    <AccordionItemPanel>\n                      <p>BAND NAME *</p>\n                      <FormInput\n                        value={band.name}\n                        placeholder=\"Band Name\"\n                        error={errors.name}\n                        register={register(\"name\")}\n                        required={true}\n                      />\n                      <p>NUMBER OF MEMBERS *</p>\n                      <FormInput\n                        value={band.numberOfMembers}\n                        placeholder=\"Members\"\n                        error={errors.numberOfMembers}\n                        register={register(\"numberOfMembers\", {\n                          required: true,\n                        })}\n                        required={true}\n                        type=\"number\"\n                      />\n                      <p>MEMBERS</p>\n                      <p className=\"small-text regular-text\">\n                        Enter the email address of members with a BandMatch\n                        account. Separate each with a comma.\n                      </p>\n                      <FormInput\n                        value={bandMusicians}\n                        register={register(\"musicians\")}\n                        placeholder=\"Members\"\n                        error={errors.numberOfMembers}\n                        id=\"membersInput\"\n                        onChange={() => {\n                          validateMembers();\n                        }}\n                        onBlur={() => {\n                          validateMembers();\n                        }}\n                      />\n                      {invalidUsers.length > 0 && (\n                        <p className=\"small-text regular-text p-yellow\">\n                          {\" \"}\n                          We couldn't find Bandmatch profiles for the following\n                          users: {invalidUsers.join(\", \")}.\n                        </p>\n                      )}\n                      <p>QUICK OVERVIEW *</p>\n                      <FormInput\n                        value={band.description}\n                        placeholder=\"Brief description\"\n                        error={errors.description}\n                        register={register(\"description\")}\n                        required={true}\n                      />\n                    </AccordionItemPanel>\n                  </AccordionItem>\n                  <AccordionItem uuid=\"b\">\n                    <AccordionItemHeading className=\"accordion-heading-override\">\n                      <AccordionItemButton>\n                        COUPLE SPECIFICS <BsChevronCompactDown size={24} />\n                      </AccordionItemButton>\n                    </AccordionItemHeading>\n                    <AccordionItemPanel>\n                      <p>BAND PIC</p>\n                      <ImageUpload\n                        email={state.user.email}\n                        setImageUrl={setImageUrlBand}\n                        imageUrl={imageUrlBand}\n                      />\n                      <p>CITY *</p>\n                      <section className=\"dropdown-div py-3\">\n                        <select\n                          className=\"select-dropdown\"\n                          id=\"location\"\n                          name=\"location\"\n                          placeholder=\"Select your location\"\n                          {...register(\"location\", { required: true })}\n                        >\n                          {locationOptions.map((location) => {\n                            return (\n                              <option\n                                defaultValue={band.location}\n                                className=\"option-text\"\n                                value={location.label}\n                                key={location.label}\n                              >\n                                {location.label}\n                              </option>\n                            );\n                          })}\n                        </select>\n                      </section>\n\n                      <p>MUSIC GENRE *</p>\n                      <MultiSelectDropDown\n                        defaultValue={bandGenres}\n                        options={genres}\n                        placeholder=\"Select your genre(s)\"\n                        isMulti={true}\n                        name=\"genre\"\n                        control={control}\n                        required={true}\n                      />\n                      <p>EXPERIENCE *</p>\n                      <section className=\"dropdown-div py-3\">\n                        <select\n                          defaultValue={band.experienceLevel}\n                          className=\"select-dropdown\"\n                          id=\"experienceLevel\"\n                          name=\"experienceLevel\"\n                          placeholder=\"Select your experience level\"\n                          {...register(\"experienceLevel\", {\n                            required: true,\n                          })}\n                          required={true}\n                        >\n                          <option\n                            key=\"newbie\"\n                            className=\"option-text\"\n                            value=\"newbie\"\n                          >\n                            Newbie\n                          </option>\n                          <option\n                            key=\"midway\"\n                            className=\"option-text\"\n                            value=\"midway\"\n                          >\n                            Midway\n                          </option>\n                          <option\n                            key=\"expert\"\n                            className=\"option-text\"\n                            value=\"expert\"\n                          >\n                            Expert\n                          </option>\n                        </select>\n                      </section>\n\n                      <p>INSTRUMENTS *</p>\n                      <MultiSelectDropDown\n                        defaultValue={bandInstruments}\n                        options={instruments}\n                        placeholder=\"Band instruments\"\n                        isMulti={true}\n                        name=\"instruments\"\n                        control={control}\n                        required={true}\n                      />\n                    </AccordionItemPanel>\n                  </AccordionItem>\n                  <AccordionItem uuid=\"c\">\n                    <AccordionItemHeading className=\"accordion-heading-override\">\n                      <AccordionItemButton>\n                        COLLABS AND MEDIA <BsChevronCompactDown size={24} />\n                      </AccordionItemButton>\n                    </AccordionItemHeading>\n                    <AccordionItemPanel>\n                      <p>FEATURE SONG</p>\n                      <p className=\"regular-text small-text\">\n                        Enter the Soundcloud url of your top song\n                      </p>\n                      <FormInput\n                        value={band.soundCloudUrl}\n                        placeholder=\"Soundcloud url\"\n                        error={errors.soundCloudUrl}\n                        register={register(\"soundCloudUrl\", {\n                          required: false,\n                        })}\n                      />\n                      <p>WEBSITE</p>\n                      <FormInput\n                        value={band.websiteUrl}\n                        placeholder=\"Website url\"\n                        error={errors.websiteUrl}\n                        register={register(\"websiteUrl\", {\n                          required: false,\n                        })}\n                      />\n                      <p>ARE YOU OPEN TO COLLABS?</p>\n                      <section className=\"dropdown-div py-3\">\n                        <select\n                          defaultValue={band.openToCollaboration}\n                          className=\"select-dropdown\"\n                          id=\"openToCollaboration\"\n                          name=\"openToCollaboration\"\n                          placeholder=\"Select your experience level\"\n                          {...register(\"openToCollaboration\", {\n                            required: true,\n                          })}\n                        >\n                          <option className=\"option-text\" value={true}>\n                            YES\n                          </option>\n                          <option className=\"option-text\" value={false}>\n                            NO\n                          </option>\n                        </select>\n                      </section>\n                      <p className=\"pt-10\">LOOKING FOR NEW MEMBERS?</p>\n                      <p className=\"regular-text small-text\">\n                        If you're looking for new members, please select from\n                        the options below. Otherwise, select \"Not looking atm\".\n                      </p>\n                      <MultiSelectDropDown\n                        defaultValue={bandLookingFor}\n                        options={lookingFor}\n                        placeholder=\"Musician type...\"\n                        isMulti={true}\n                        name=\"lookingFor\"\n                        control={control}\n                      />\n                    </AccordionItemPanel>\n                  </AccordionItem>\n                </Accordion>\n                <Button\n                  type=\"submit\"\n                  label=\"SUBMIT\"\n                  mode=\"primary\"\n                  size=\"medium\"\n                ></Button>\n              </form>\n            </Modal.Body>\n          </>\n        ),\n      });\n    }\n  }, [\n    bandData,\n    control,\n    errors.description,\n    errors.name,\n    errors.numberOfMembers,\n    errors.soundCloudUrl,\n    errors.websiteUrl,\n    genreInstrumentsData,\n    handleSubmit,\n    imageUrlBand,\n    modalUpdateData,\n    onSubmitEditBand,\n    register,\n    setModalState,\n    state.user.email,\n    state.user.id,\n    validateMembers,\n  ]);\n\n  const { data: gigsData, loading: gigsLoading } = useQuery(GIGS, {\n    variables: {\n      gigsFilters: {\n        band: id,\n      },\n    },\n\n    onError: (error) => {\n      console.log(error);\n    },\n  });\n\n  if (loading) {\n    return <div>Loading</div>;\n  }\n\n  const redirectToHomepage = () => {\n    setModalState({\n      open: false,\n    });\n\n    history.push(\"/\");\n  };\n\n  if (bandError) {\n    return (\n      <div className=\"profile-container\">\n        <div className=\"see-through-background-90 error-container\">\n          <p className=\"regular-text\">\n            Sorry, we could not load information at this time.\n          </p>\n          <p className=\"regular-text\">Please try again later.</p>\n          <Button\n            label=\"RETURN HOME\"\n            mode=\"primary\"\n            size=\"medium\"\n            onClick={redirectToHomepage}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  if (bandData) {\n    const band = bandData.band;\n    const name = band.name;\n    const openTo = () => {\n      if (band.openToCollaboration && band.openToMembers) {\n        return \"OPEN TO COLLABORATION | OPEN TO NEW MEMBERS\";\n      } else if (band.openToCollaboration && !band.openToMembers) {\n        return \"OPEN TO COLLABORATION\";\n      } else if (!band.openToCollaboration && band.openToMembers) {\n        return \"OPEN TO NEW MEMBERS\";\n      } else {\n        return \"\";\n      }\n    };\n    let genres = [];\n    let instruments = [];\n    let lookingFor = [];\n    band.genre.forEach((genre) => {\n      genres.push(genre.name);\n    });\n    band.instruments.forEach((instrument) => {\n      instruments.push(instrument.name);\n    });\n    band.lookingFor.forEach((looking) => {\n      lookingFor.push(looking.role);\n    });\n\n    const redirectToPage = (event) => {\n      const page = event.currentTarget.id;\n\n      window.location.replace(`/${page}`);\n    };\n\n    return (\n      <div className=\"profile-container\">\n        <div className=\"p-2\"></div>\n        <div className=\"see-through-background-90 text-align-center profile-title-div\">\n          {myBandProfile.length ? (\n            <Title\n              type=\"profile\"\n              text={name}\n              myProfile={myBandProfile}\n              onClick={renderBandModal}\n            />\n          ) : (\n            <Title type=\"profile\" text={name} />\n          )}\n          <p className=\"mb-3\">{openTo()}</p>\n\n          {lookingFor.length !== 0 && (\n            <p className=\"p-yellow mt-2 text-limit-one-line\">\n              LOOKING FOR:{\" \"}\n              <span className=\"looking-for\">{lookingFor.join(\" | \")}</span>\n            </p>\n          )}\n        </div>\n        <ProfileInfo\n          imageUrl={band.imageUrl}\n          name={name}\n          instruments={instruments}\n          genre={genres}\n          description={band.description}\n          experienceLevel={band.experienceLevel}\n          lookingFor={lookingFor}\n          soundCloudUrl={band.soundCloudUrl}\n        />\n\n        {bandData && band.soundCloudUrl && (\n          <SoundCloudWidget soundCloudUrl={band.soundCloudUrl} />\n        )}\n\n        <div className=\"see-through-background-90 text-align-center\">\n          <p className=\"title mb-2 pt-2 fs-1\">{name}'s GIGS</p>\n\n          {gigsLoading && <LoadingSpinner />}\n          {gigsData && gigsData.gigs.length ? (\n            <div className=\"cards-container\">\n              {constructGigCards(gigsData.gigs)}\n            </div>\n          ) : myBandProfile.length ? (\n            <div className=\"no-gigs-bands-container\">\n              <div>\n                <p className=\"mb-2 fs-3\">Your band has no gigs</p>\n              </div>\n              <div>\n                <Button\n                  label=\"FIND A GIG\"\n                  mode=\"primary\"\n                  size=\"medium\"\n                  onClick={redirectToPage}\n                  buttonId=\"gig\"\n                />\n              </div>\n            </div>\n          ) : (\n            <div className=\"no-gigs-bands-container\">\n              <p className=\"mb-3 fs-3\">\n                {`${bandData.band.name}`} have no gigs\n              </p>\n            </div>\n          )}\n        </div>\n\n        <div className=\"see-through-background-90 text-align-center\">\n          <p className=\"title mb-2 pt-2 fs-1\">{band.name}'s BAND MEMBERS</p>\n\n          <div className=\"cards-container\">\n            {bandData && (\n              <div className=\"cards-container\">\n                {constructBandMemberCards(band.musicians, \"shortest\")}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default BandProfile;\n","import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport \"./Collaborate.css\";\nimport Header from \"../../components/Header\";\nimport CardsCarousel from \"../../components/Carousel\";\nimport FilterStrip from \"../../components/FilterStrip\";\nimport { constructPerformerCards } from \"../../utils/constructCards\";\nimport Button from \"../../components/Button\";\n\nimport { COLLABORATE, COLLABORATE_CAROUSEL } from \"../../graphql/queries\";\nimport { useUserContext } from \"../../contexts/UserProvider\";\nimport renderCards from \"../../utils/renderCardsLogic\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\n\nconst Collaborate = (props) => {\n  const { state } = useUserContext();\n\n  const [hasMoreItems, setHasMoreItems] = useState(true);\n\n  const filters = {\n    genre: state.userFilters.genre,\n    instruments: state.userFilters.instruments,\n    lookingFor: state.userFilters.lookingFor,\n    experienceLevel: state.userFilters.experienceLevel,\n    userType: state.userFilters.userType,\n    location: state.userFilters.location,\n  };\n\n  const {\n    data: collaborateData,\n    loading: collaborateLoading,\n    error: collaborateError,\n    fetchMore,\n  } = useQuery(COLLABORATE, {\n    variables: {\n      collaborateFilters: filters,\n      bandsOffset: 0,\n      musiciansOffset: 0,\n    },\n  });\n\n  const {\n    data: carouselData,\n    loading: carouselLoading,\n    error: carouselError,\n  } = useQuery(COLLABORATE_CAROUSEL);\n\n  if (collaborateError) {\n    console.log(collaborateError);\n    return <div>Error</div>;\n  }\n\n  if (carouselError) {\n    console.log(carouselError);\n    return <div>Error</div>;\n  }\n\n  let carouselCards;\n  if (carouselData) {\n    carouselCards = renderCards(carouselData.collaborateCarousel);\n  }\n\n  let collaborateCards;\n  if (collaborateData) {\n    collaborateCards = renderCards(collaborateData.collaborate);\n  }\n\n  const onLoadMore = async () => {\n    await fetchMore({\n      variables: {\n        bandsOffset: collaborateData.collaborate.bands.length,\n        musiciansOffset: collaborateData.collaborate.musicians.length,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev;\n\n        if (\n          !fetchMoreResult.collaborate.bands.length &&\n          !fetchMoreResult.collaborate.musicians.length\n        ) {\n          setHasMoreItems(false);\n        }\n\n        const result = {\n          collaborate: {\n            id: prev.collaborate.id,\n            bands: [\n              ...prev.collaborate.bands,\n              ...fetchMoreResult.collaborate.bands,\n            ],\n            musicians: [\n              ...prev.collaborate.musicians,\n              ...fetchMoreResult.collaborate.musicians,\n            ],\n          },\n        };\n\n        return result;\n      },\n    });\n  };\n\n  return (\n    <div className=\"results-page-container\">\n      <Header className=\"pt-3\" title=\"Collaborate with other musicians\" />\n      <div className=\"see-through-background-90 mt-20 \">\n        <p className=\"title gutter\">NEW KIDS ON THE BLOCK</p>\n        {carouselLoading && <LoadingSpinner />}\n        {carouselData && <CardsCarousel cards={carouselCards} />}\n      </div>\n      <FilterStrip title=\"FIND YOUR COLLABORATORS\" />\n      <div className=\"see-through-background-90 text-align-center\">\n        {collaborateLoading && <LoadingSpinner />}\n        {collaborateData && (\n          <div className=\"cards-container\">\n            {constructPerformerCards(collaborateCards)}\n          </div>\n        )}\n\n        {hasMoreItems && (\n          <Button\n            label=\"LOAD MORE\"\n            size=\"medium\"\n            mode=\"primary\"\n            onClick={onLoadMore}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Collaborate;\n","import React, { useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\n\nimport { GIGS } from \"../../graphql/queries\";\nimport { constructGigCards } from \"../../utils/constructCards\";\nimport Header from \"../../components/Header\";\nimport Button from \"../../components/Button\";\nimport Title from \"../../components/Title\";\nimport { useUserContext } from \"../../contexts/UserProvider\";\n\nconst Gig = (props) => {\n  const { state } = useUserContext();\n  const musicianId = state.user.id;\n  const [hasMoreItems, setHasMoreItems] = useState(true);\n\n  const { data, loading, error, fetchMore } = useQuery(GIGS, {\n    variables: {\n      gigsOffset: 0,\n    },\n    onError: (error) => {\n      console.log(error);\n    },\n  });\n\n  if (error) {\n    console.log(error);\n    return <div>Error</div>;\n  }\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const onLoadMore = async () => {\n    await fetchMore({\n      variables: {\n        gigsOffset: data.gigs.length,\n      },\n      updateQuery: (prev, { fetchMoreResult }) => {\n        if (!fetchMoreResult) return prev;\n\n        if (fetchMoreResult.gigs.length === 0) {\n          setHasMoreItems(false);\n        }\n\n        const result = {\n          gigs: [...prev.gigs, ...fetchMoreResult.gigs],\n        };\n\n        return result;\n      },\n    });\n  };\n\n  if (data) {\n    const gigs = data.gigs;\n    return (\n      <div className=\"results-page-container\">\n        <Header className=\"pt-3\" title=\"Unleash Your Music to the World\" />\n        <Title text=\"FIND YOUR GIG\" type=\"section\" />\n        <div className=\"see-through-background-90 text-align-center\">\n          { state.user.type === \"venue\" ? <div className=\"cards-container\">\n            {constructGigCards(gigs, \"x\", \"venue\")}\n          </div> : <div className=\"cards-container\">\n            {constructGigCards(gigs, null, musicianId)}\n          </div>}\n          {hasMoreItems && (\n            <Button\n              label=\"LOAD MORE\"\n              size=\"medium\"\n              mode=\"primary\"\n              onClick={onLoadMore}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Gig;\n","export default __webpack_public_path__ + \"static/media/assemble.5dc27c23.jpg\";","export default __webpack_public_path__ + \"static/media/colab.db9542e9.jpg\";","export default __webpack_public_path__ + \"static/media/gig.c7bd4421.jpg\";","import \"../../App.css\";\nimport \"./textPrinter.css\";\n\nimport Typewriter from \"typewriter-effect\";\n\nconst TextPrinter = (props) => {\n  return (\n    <div className=\"text-printer\">\n      <Typewriter\n        options={{\n          strings: [\"UNLEASH YOUR MUSIC TO THE WORLD\"],\n          autoStart: true,\n          loop: true,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default TextPrinter;\n","import { Modal } from \"react-bootstrap\";\nimport { FiArrowDownCircle } from \"react-icons/fi\";\n\nimport \"./Home.css\";\n\nimport assemblePhoto from \"../../images/assemble.jpg\";\nimport colabPhoto from \"../../images/colab.jpg\";\nimport gigPhoto from \"../../images/gig.jpg\";\n\nimport { useModal } from \"../../contexts/ModalProvider\";\nimport Button from \"../../components/Button/index\";\nimport TextPrinter from \"../../components/TextPrinter\";\n\nconst Home = (props) => {\n  const { setModalState } = useModal();\n\n  const showModal = (event) => {\n    console.log();\n\n    if (event.target.id === \"assemble\") {\n      setModalState({\n        open: true,\n        content: (\n          <Modal.Body className=\"solid-background\">\n            <div\n              className=\"profile-preview-image\"\n              style={{\n                backgroundImage: \"url(\" + assemblePhoto + \")\",\n                backgroundPosition: \"center center\",\n              }}\n            ></div>\n            <div className=\"info-div\">\n              <h4 className=\"text-center py-2\">Assemble a band</h4>\n              <ol>\n                <li>Find musicians looking to join a band</li>\n                <li>Click to see their profile</li>\n                <li>Send them a message</li>\n                <li>Filter your search</li>\n              </ol>\n            </div>\n          </Modal.Body>\n        ),\n      });\n    }\n\n    if (event.target.id === \"collab\") {\n      setModalState({\n        open: true,\n        content: (\n          <Modal.Body className=\"solid-background\">\n            <div\n              className=\"profile-preview-image\"\n              style={{\n                backgroundImage: \"url(\" + colabPhoto + \")\",\n                backgroundPosition: \"center center\",\n              }}\n            ></div>\n            <div className=\"info-div\">\n              <h4 className=\"text-center py-2\">Find collabs</h4>\n              <ol>\n                <li>Find musicians or bands looking to collab</li>\n                <li>Click to see their profile</li>\n                <li>Send them a message</li>\n                <li>Filter your search</li>\n              </ol>\n            </div>\n          </Modal.Body>\n        ),\n      });\n    }\n\n    if (event.target.id === \"gig\") {\n      setModalState({\n        open: true,\n        content: (\n          <Modal.Body className=\"solid-background\">\n            <div\n              className=\"profile-preview-image\"\n              style={{\n                backgroundImage: \"url(\" + gigPhoto + \")\",\n                backgroundPosition: \"center center\",\n              }}\n            ></div>\n            <div className=\"info-div w-50\">\n              <h4 className=\"text-center py-2\">Find a Gig</h4>\n              <ol>\n                <li>Find a gig to play</li>\n                <li>See more info</li>\n                <li>Send request to play</li>\n              </ol>\n            </div>\n          </Modal.Body>\n        ),\n      });\n    }\n  };\n  return (\n    <div className=\"home-container\">\n      <div className=\"pt-5 text-center\">\n        <TextPrinter />\n        <h2 className=\"mt-5\">HOW IT WORKS</h2>\n        <div className=\"mt-5\">\n          <FiArrowDownCircle size=\"2rem\" />\n        </div>\n      </div>\n      <div className=\"how-it-works-container\">\n        <div className=\"home-buttons-container\">\n          <Button\n            label=\"ASSEMBLE\"\n            size=\"large\"\n            mode=\"secondary\"\n            buttonId=\"assemble\"\n            onClick={showModal}\n          />\n          <Button\n            label=\"COLLAB\"\n            size=\"large\"\n            mode=\"secondary\"\n            buttonId=\"collab\"\n            onClick={showModal}\n          />\n          <Button\n            label=\"GIG\"\n            size=\"large\"\n            mode=\"secondary\"\n            buttonId=\"gig\"\n            onClick={showModal}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import { AiOutlineClose } from \"react-icons/ai\";\n\nimport \"./ChatSideBar.css\";\n\nconst ChatSideBar = ({ show, setShow, chats, loading, getMessages }) => {\n  let drawerClasses = \"side-drawer\";\n  if (show) {\n    drawerClasses = \"side-drawer open\";\n  }\n\n  const handleClick = () => {\n    return setShow(false);\n  };\n\n  return (\n    <nav className={drawerClasses}>\n      <button className=\"side-drawer-close\">\n        <AiOutlineClose fontSize=\"2em\" onClick={handleClick} />\n      </button>\n      <ul className=\"conversations-list\">\n        {chats &&\n          chats.map((chat) => {\n            return (\n              <button\n                onClick={() =>\n                  getMessages({ variables: { conversationId: chat.id } })\n                }\n                id={chat.id}\n                className=\"conversations-list-item\"\n                key={chat.id}\n              >\n                <li>\n                  <div className=\"profile-inbox-image\">\n                    <img src={chat.user.imageUrl} alt={chat.user.firstName} />\n                  </div>\n                  <div className=\"ms-5 mt-4 chat-user-name\">\n                    {chat.user.firstName &&\n                      chat.user.firstName.charAt(0).toUpperCase() +\n                        chat.user.firstName.slice(1)}{\" \"}\n                    {chat.user.lastName &&\n                      chat.user.lastName.charAt(0).toUpperCase() +\n                        chat.user.lastName.slice(1)}\n                    {chat.user.name && chat.user.name}\n                  </div>\n                </li>\n              </button>\n            );\n          })}\n\n        {loading && <div>Loading...</div>}\n      </ul>\n    </nav>\n  );\n};\nexport default ChatSideBar;\n","import { useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Button from \"../../components/Button\";\nimport ChatSideBar from \"../../components/ChatSideBar\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport Title from \"../../components/Title\";\nimport { useUserContext } from \"../../contexts/UserProvider\";\nimport { CREATE_MESSAGE } from \"../../graphql/mutations\";\nimport { CONVERSATION, CONVERSATIONS } from \"../../graphql/queries\";\nimport \"./inbox.css\";\n\nconst Inbox = (props) => {\n  const [isSideDrawer, setIsSideDrawer] = useState(false);\n  const [selectedConversation, setSelectedConversation] = useState(null);\n\n  const drawerToggleClickHandler = () => {\n    if (isSideDrawer) {\n      return setIsSideDrawer(false);\n    } else {\n      return setIsSideDrawer(true);\n    }\n  };\n\n  const { register, handleSubmit } = useForm();\n\n  const { state } = useUserContext();\n\n  const { data, loading } = useQuery(CONVERSATIONS, {\n    variables: {\n      conversationsId: state.user.id,\n      // CHANGE TO ID FROM STATE L8\n      // bandConversationsBandId: \"612686d7415e5a5e43e7e5b2\",\n    },\n    onError: (error) => {\n      console.log(error);\n    },\n    pollInterval: 500,\n  });\n\n  let chats;\n\n  if (data) {\n    const conversations = data.conversations;\n\n    const renderChats = () => {\n      return conversations.map((conversation) => {\n        const otherUser = conversation.participants.find((participant) => {\n          return participant.id !== state.user.id;\n        });\n\n        const filteredConversation = { ...conversation, user: otherUser };\n        return filteredConversation;\n      });\n    };\n    chats = renderChats();\n  }\n\n  const [\n    getMessages,\n    { data: conversationData, loading: conversationLoading },\n  ] = useLazyQuery(CONVERSATION, {\n    onCompleted: (data) => {\n      setSelectedConversation(conversationData);\n      setIsSideDrawer(false);\n    },\n    pollInterval: 500,\n    onError: (error) => {\n      console.log(error);\n    },\n  });\n\n  const [sendMessageData] = useMutation(CREATE_MESSAGE);\n\n  const sendMessage = async (formData) => {\n    const text = formData.text;\n    const senderId = state.user.id;\n    const conversation = selectedConversation.conversation;\n\n    const recipientId = conversation.participants.find(\n      (participant) => participant.id !== state.user.id\n    );\n\n    await sendMessageData({\n      variables: {\n        createMessageInput: { text, senderId, recipientId: recipientId.id },\n      },\n    });\n  };\n\n  const AlwaysScrollToBottom = () => {\n    const elementRef = useRef();\n    useEffect(() => elementRef.current.scrollIntoView());\n    return <div ref={elementRef} />;\n  };\n\n  let messages;\n  if (conversationData) {\n    messages = conversationData.conversation.messages;\n  }\n\n  // let bandMessages\n  // if (bandConversationData) {\n  //   bandMessages = bandConversationData.conversation.messages;\n  // }\n\n  return (\n    <div className=\"inbox-background-container\">\n      {data && (\n        <ChatSideBar\n          chats={chats}\n          loading={loading}\n          show={isSideDrawer}\n          setShow={setIsSideDrawer}\n          getMessages={getMessages}\n        />\n      )}\n      <div className=\"mobile-chat-nav\">\n        <button\n          className=\"mobile-chat-toggle\"\n          onClick={drawerToggleClickHandler}\n        >\n          VIEW CHATS\n        </button>\n      </div>\n      <div className=\"inbox-flex-container\">\n        <div className=\"inbox-side-panel\">\n          <Title text=\"CHATS\" type=\"profile\" />\n          <ul className=\"conversations-list\">\n            {data &&\n              chats.map((chat) => {\n                return (\n                  <button\n                    onClick={() =>\n                      getMessages({ variables: { conversationId: chat.id } })\n                    }\n                    id={chat.id}\n                    className=\"conversations-list-item\"\n                    key={chat.id}\n                  >\n                    <li>\n                      <div className=\"profile-inbox-image\">\n                        <img\n                          src={chat.user.imageUrl}\n                          alt={\n                            (chat.user.firstName && chat.user.firstName) ||\n                            (chat.name && chat.name)\n                          }\n                        />\n                      </div>\n                      <div className=\"ms-5 mt-4 chat-user-name\">\n                        {chat.user.firstName &&\n                          chat.user.firstName.charAt(0).toUpperCase() +\n                            chat.user.firstName.slice(1)}{\" \"}\n                        {chat.user.lastName &&\n                          chat.user.lastName.charAt(0).toUpperCase() +\n                            chat.user.lastName.slice(1)}\n                        {chat.name && chat.name}\n                      </div>\n                    </li>\n                  </button>\n                );\n              })}\n\n            {loading && <LoadingSpinner />}\n          </ul>\n        </div>\n        <div className=\"inbox-main-panel\">\n          <div className=\"current-message-list pt-3\">\n            {conversationLoading && <LoadingSpinner />}\n            {conversationData &&\n              messages.map((message) => {\n                if (message.senderId === state.user.id) {\n                  return (\n                    <div\n                      key={message.id}\n                      className=\"current-user-message text-center\"\n                    >\n                      {message.text}\n                    </div>\n                  );\n                } else {\n                  return (\n                    <div\n                      key={message.id}\n                      className=\"other-user-message text-center\"\n                    >\n                      {message.text}\n                    </div>\n                  );\n                }\n              })}\n            <AlwaysScrollToBottom />\n          </div>\n          {selectedConversation && (\n            <div className=\"message-input-area pb-3\">\n              <form\n                className=\"inbox-input-form\"\n                onSubmit={handleSubmit(sendMessage)}\n              >\n                <textarea\n                  className=\"inbox-text-area\"\n                  name=\"text\"\n                  {...register(\"text\", {\n                    required: true,\n                    shouldUnregister: true,\n                  })}\n                  placeholder=\"Write your message here...\"\n                ></textarea>\n                <div className=\"text-center\">\n                  <Button\n                    type=\"submit\"\n                    label=\"SEND\"\n                    size=\"medium\"\n                    mode=\"primary\"\n                  />\n                </div>\n              </form>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Inbox;\n","import \"./FormContainer.css\";\n\nconst FormContainer = ({ children }) => {\n  return <div className=\"form-container\">{children}</div>;\n};\n\nexport default FormContainer;\n","import { useForm } from \"react-hook-form\";\nimport { useMutation } from \"@apollo/client\";\nimport { useHistory } from \"react-router-dom\";\n\nimport FormInput from \"../FormInput\";\nimport Title from \"../Title\";\nimport FormContainer from \"../FormContainer\";\nimport Button from \"../Button\";\nimport { LOGIN } from \"../../graphql/mutations\";\nimport { useUserContext } from \"../../contexts/UserProvider\";\n\nimport \"./LoginForm.css\";\n\nconst LoginForm = () => {\n  let history = useHistory();\n  const { dispatch } = useUserContext();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    mode: \"onBlur\",\n    reValidateMode: \"onChange\",\n    shouldFocusError: true,\n  });\n\n  const [login, { loading }] = useMutation(LOGIN, {\n    onCompleted: (data) => {\n      let payload;\n      if (data.login.type === \"venue\") {\n        payload = {\n          token: data.login.token,\n          email: data.login.user.email,\n          firstName: data.login.user.firstName,\n          lastName: data.login.user.lastName,\n          id: data.login.user.id,\n          name: data.login.user.name,\n          type: data.login.type,\n        };\n      } else if (data.login.type === \"musician\") {\n        payload = {\n          token: data.login.token,\n          email: data.login.user.email,\n          firstName: data.login.user.firstName,\n          lastName: data.login.user.lastName,\n          id: data.login.user.id,\n          type: data.login.type,\n        };\n      }\n\n      localStorage.setItem(\"user\", JSON.stringify(payload));\n\n      dispatch({\n        type: \"LOGIN\",\n        payload,\n      });\n\n      if (data.login.type === \"musician\") {\n        history.push(`/profile/${data.login.user.id}`);\n      } else if (data.login.type === \"venue\") {\n        history.push(`/venues/${data.login.user.id}`);\n      }\n    },\n    onError: () => {},\n  });\n\n  const onSubmit = async (formData) => {\n    await login({\n      variables: {\n        loginInput: formData,\n      },\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className=\"pb-5 text-center\">\n        <div className=\"spinner-border \" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <FormContainer>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <section>\n          <Title type=\"section\" text=\"LOGIN\" />\n\n          <FormInput\n            placeholder=\"Email\"\n            error={errors.email}\n            register={register(\"email\", { required: true })}\n          />\n          <FormInput\n            placeholder=\"Password\"\n            error={errors.password}\n            type=\"password\"\n            register={register(\"password\", { required: true })}\n          />\n        </section>\n        <div className=\"button-block py-3\">\n          <Button\n            label=\"LOGIN\"\n            mode=\"primary\"\n            size=\"medium\"\n            type=\"submit\"\n          ></Button>\n        </div>\n        <div className=\"text-center my-2\">\n          Don't have an account?{\" \"}\n          <a className=\"signup-link\" href=\"/signup\">\n            Sign Up\n          </a>\n        </div>\n      </form>\n    </FormContainer>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from \"../../components/LoginForm\";\n\nimport \"./Login.css\";\n\nconst Login = (props) => {\n  return (\n    <div className=\"login-container\">\n      <div className=\"form-div\">\n        <LoginForm />\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import { useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport { Modal } from \"react-bootstrap\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { BsChevronCompactDown } from \"react-icons/bs\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from \"react-accessible-accordion\";\nimport $ from \"jquery\";\n\nimport { useModal } from \"../../contexts/ModalProvider\";\nimport { CREATE_BAND, UPDATE_MUSICIAN } from \"../../graphql/mutations\";\nimport { useUserContext } from \"../../contexts/UserProvider\";\nimport {\n  BANDS,\n  GENRESINSTRUMENTS,\n  GIGS,\n  MUSICIAN_USER,\n  VALIDATE_BAND_MEMBERS,\n} from \"../../graphql/queries\";\nimport {\n  constructGigCards,\n  constructPerformerCards,\n} from \"../../utils/constructCards\";\nimport \"./MusicianProfile.css\";\nimport ProfileInfo from \"../../components/ProfileInfo\";\nimport SoundCloudWidget from \"../../components/SoundCloudWidget\";\nimport Title from \"../../components/Title\";\nimport Button from \"../../components/Button\";\nimport MultiSelectDropDown from \"../../components/MultiSelectDropdown\";\nimport FormInput from \"../../components/FormInput\";\nimport {\n  generateDefaultValues,\n  generateOptions,\n  generateRoleOptions,\n} from \"../../utils/generateMultiDropdownOptions\";\nimport ImageUpload from \"../../components/ImageUpload\";\nimport locationOptions from \"../../data/locationOptions\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\n\nconst MusicianProfile = (props) => {\n  const { state } = useUserContext();\n  const { setModalState } = useModal();\n  let history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    control,\n  } = useForm({\n    mode: \"onBlur\",\n    reValidateMode: \"onChange\",\n    shouldFocusError: true,\n  });\n\n  const {\n    register: register2,\n    formState: { errors: errors2 },\n    handleSubmit: handleSubmit2,\n    control: control2,\n  } = useForm({\n    mode: \"onBlur\",\n    reValidateMode: \"onChange\",\n    shouldFocusError: true,\n  });\n\n  const { id: musicianId } = useParams();\n  const [imageUrl, setImageUrl] = useState();\n  const [imageUrlBand, setImageUrlBand] = useState();\n  const [modalUpdateData, setModalUpdateData] = useState(null);\n  const [bandUpdateData, setBandUpdateData] = useState(null);\n\n  const [validBandMembers, setValidBandMembers] = useState([musicianId]);\n\n  const myProfile = musicianId === state.user.id;\n\n  const refreshPage = () => {\n    setModalState({\n      open: false,\n    });\n\n    history.go(0);\n  };\n\n  const redirectToPage = (url) => {\n    setModalState({\n      open: false,\n    });\n\n    history.push(url);\n  };\n\n  const redirectToHomepage = () => {\n    setModalState({\n      open: false,\n    });\n\n    history.push(\"/\");\n  };\n\n  const { data: musicianData, loading, error } = useQuery(MUSICIAN_USER, {\n    variables: {\n      musicianUserId: musicianId,\n    },\n  });\n\n  const [submitEditProfileInfo] = useMutation(UPDATE_MUSICIAN, {\n    onCompleted: (data) => {\n      setModalState({\n        open: true,\n        content: (\n          <>\n            <Modal.Header className=\"solid-background\" closeButton>\n              <Modal.Title>Edit Profile</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"solid-background\">\n              <p>Information updated successfully</p>\n            </Modal.Body>\n          </>\n        ),\n      });\n\n      setTimeout(() => {\n        refreshPage();\n      }, 1500);\n    },\n    onError: (error) => {\n      setModalState({\n        open: true,\n        content: (\n          <Modal.Body className=\"solid-background\">\n            <p>Sorry, we couldn't update your page at the moment.</p>\n          </Modal.Body>\n        ),\n      });\n    },\n  });\n\n  const onSubmitEditProfile = useCallback(\n    (formData) => {\n      if (formData.openToCollaboration === \"true\") {\n        formData.openToCollaboration = true;\n      } else {\n        formData.openToCollaboration = false;\n      }\n\n      if (formData.openToJoiningBand === \"true\") {\n        formData.openToJoiningBand = true;\n      } else {\n        formData.openToJoiningBand = false;\n      }\n\n      submitEditProfileInfo({\n        variables: {\n          updateMusicianUserInput: {\n            musicianInfo: { ...formData, imageUrl },\n            musicianId: musicianId,\n          },\n        },\n      });\n    },\n    [musicianId, submitEditProfileInfo, imageUrl]\n  );\n\n  const [\n    editProfileModal,\n    { data: editProfileGenreInstrumentsData },\n  ] = useLazyQuery(GENRESINSTRUMENTS, {\n    fetchPolicy: \"network-only\",\n    onCompleted: (data) => {\n      setModalUpdateData(data);\n    },\n  });\n\n  const renderEditProfileModal = () => {\n    editProfileModal({\n      variables: {\n        musicianUserId: musicianId,\n      },\n    });\n    setModalUpdateData(null);\n  };\n\n  useEffect(() => {\n    if (editProfileGenreInstrumentsData && musicianData) {\n      if (!editProfileGenreInstrumentsData) {\n        setModalState({\n          open: true,\n          content: (\n            <Modal.Body className=\"solid-background\">\n              <p>\n                {\" \"}\n                Sorry, you can't update your profile information at this time.\n                Please try again later!{\" \"}\n              </p>\n            </Modal.Body>\n          ),\n        });\n      } else {\n        const musician = musicianData.musicianUser;\n        const genres = generateOptions(editProfileGenreInstrumentsData.genres);\n        const userGenres = generateDefaultValues(musician.genre);\n        const instruments = generateOptions(\n          editProfileGenreInstrumentsData.instruments\n        );\n        const userInstruments = generateDefaultValues(musician.instruments);\n        const lookingFor = generateRoleOptions(\n          editProfileGenreInstrumentsData.instruments\n        );\n        const userLookingFor = generateDefaultValues(musician.lookingFor);\n        setModalState({\n          open: true,\n          content: (\n            <>\n              <Modal.Header className=\"solid-background\" closeButton>\n                <Modal.Title>Edit Profile</Modal.Title>\n              </Modal.Header>\n              <Modal.Body className=\"solid-background\">\n                <form onSubmit={handleSubmit(onSubmitEditProfile)}>\n                  <Accordion preExpanded={[\"a\"]}>\n                    <AccordionItem uuid=\"a\" className=\"accordion-container\">\n                      <AccordionItemHeading className=\"accordion-heading-override\">\n                        <AccordionItemButton>\n                          THE BASICS <BsChevronCompactDown size={24} />\n                        </AccordionItemButton>\n                      </AccordionItemHeading>\n                      <AccordionItemPanel>\n                        <p>FIRST NAME</p>\n                        <FormInput\n                          value={musician.firstName}\n                          error={errors.firstName}\n                          register={register(\"firstName\")}\n                        />\n                        <p>LAST NAME</p>\n                        <FormInput\n                          value={musician.lastName}\n                          error={errors.lastName}\n                          register={register(\"lastName\")}\n                        />\n                        <p>EMAIL</p>\n                        <FormInput\n                          value={musician.email}\n                          error={errors.email}\n                          register={register(\"email\")}\n                        />\n                        <p>CITY</p>\n                        <section className=\"dropdown-div py-3\">\n                          <select\n                            className=\"select-dropdown\"\n                            id=\"location\"\n                            name=\"location\"\n                            placeholder=\"Select your location\"\n                            {...register(\"location\", { required: true })}\n                          >\n                            <option\n                              defaultValue={musician.location}\n                              className=\"option-text\"\n                              value={musician.location}\n                              key=\"selected\"\n                            >\n                              {musician.location}\n                            </option>\n                            {locationOptions.map((location) => {\n                              return (\n                                <option\n                                  className=\"option-text\"\n                                  value={location.label}\n                                  key={location.label}\n                                >\n                                  {location.label}\n                                </option>\n                              );\n                            })}\n                          </select>\n                        </section>\n                      </AccordionItemPanel>\n                    </AccordionItem>\n                    <AccordionItem uuid=\"b\" className=\"accordion-container\">\n                      <AccordionItemHeading className=\"accordion-heading-override\">\n                        <AccordionItemButton>\n                          SOCIALS AND INFO <BsChevronCompactDown size={24} />\n                        </AccordionItemButton>\n                      </AccordionItemHeading>\n                      <AccordionItemPanel>\n                        <p>PROFILE PIC</p>\n                        <ImageUpload\n                          email={musician.email}\n                          setImageUrl={setImageUrl}\n                          imageUrl={imageUrl}\n                        />\n                        <p>BIO</p>\n                        <FormInput\n                          value={musician.description}\n                          error={errors.description}\n                          register={register(\"description\")}\n                        />\n                        <p>WEBSITE</p>\n                        <FormInput\n                          value={musician.websiteUrl}\n                          error={errors.websiteUrl}\n                          register={register(\"websiteUrl\")}\n                        />\n                        <p>SOUNDCLOUD</p>\n                        <FormInput\n                          value={musician.soundCloudUrl}\n                          error={errors.soundCloudUrl}\n                          register={register(\"soundCloudUrl\")}\n                        />\n                      </AccordionItemPanel>\n                    </AccordionItem>\n                    <AccordionItem uuid=\"c\" className=\"accordion-container\">\n                      <AccordionItemHeading className=\"accordion-heading-override\">\n                        <AccordionItemButton>\n                          GENRE AND COLLABS <BsChevronCompactDown size={24} />\n                        </AccordionItemButton>\n                      </AccordionItemHeading>\n                      <AccordionItemPanel>\n                        <p>GENRES</p>\n                        <MultiSelectDropDown\n                          options={genres}\n                          defaultValue={userGenres}\n                          placeholder=\"Select genres\"\n                          isMulti={true}\n                          name=\"genre\"\n                          control={control}\n                        />\n                        <p>INSTRUMENTS</p>\n                        <MultiSelectDropDown\n                          options={instruments}\n                          defaultValue={userInstruments}\n                          placeholder=\"Select instruments\"\n                          isMulti={true}\n                          name=\"instruments\"\n                          control={control}\n                        />\n                        <p>WHO DO YOU WANT TO WORK WITH?</p>\n                        <MultiSelectDropDown\n                          options={lookingFor}\n                          defaultValue={userLookingFor}\n                          placeholder=\"Select instruments\"\n                          isMulti={true}\n                          name=\"lookingFor\"\n                          control={control}\n                        />\n                        <section className=\"dropdown-div\">\n                          <div className=\"select-label\">EXPERIENCE</div>\n                          <select\n                            className=\"select-dropdown\"\n                            id=\"experienceLevel\"\n                            name=\"experienceLevel\"\n                            placeholder=\"Select your experience level\"\n                            defaultValue={musician.experienceLevel}\n                            {...register(\"experienceLevel\", {\n                              required: true,\n                            })}\n                          >\n                            <option className=\"option-text\" value=\"newbie\">\n                              Newbie\n                            </option>\n                            <option className=\"option-text\" value=\"midway\">\n                              Midway\n                            </option>\n                            <option className=\"option-text\" value=\"expert\">\n                              Expert\n                            </option>\n                          </select>\n                        </section>\n                        <section className=\"dropdown-div\">\n                          <div className=\"select-label\">\n                            ARE YOU OPEN TO COLLABS?\n                          </div>\n                          <section>\n                            <select\n                              className=\"select-dropdown\"\n                              id=\"openToCollaboration\"\n                              name=\"openToCollaboration\"\n                              placeholder=\"Select...\"\n                              defaultValue={musician.openToCollaboration}\n                              {...register(\"openToCollaboration\", {\n                                required: true,\n                              })}\n                            >\n                              <option className=\"option-text\" value=\"true\">\n                                Yes\n                              </option>\n                              <option className=\"option-text\" value=\"false\">\n                                No\n                              </option>\n                            </select>\n                          </section>\n                        </section>\n                        <section className=\"dropdown-div\">\n                          <div className=\"select-label\">\n                            INTERESTED IN JOINING A BAND?\n                          </div>\n                          <section>\n                            <select\n                              className=\"select-dropdown\"\n                              id=\"openToJoiningBand\"\n                              name=\"openToJoiningBand\"\n                              placeholder=\"Select...\"\n                              defaultValue={musician.openToJoiningBand}\n                              {...register(\"openToJoiningBand\", {\n                                required: true,\n                              })}\n                            >\n                              <option className=\"option-text\" value=\"true\">\n                                Yes\n                              </option>\n                              <option className=\"option-text\" value=\"false\">\n                                No\n                              </option>\n                            </select>\n                          </section>\n                        </section>\n                      </AccordionItemPanel>\n                    </AccordionItem>\n                  </Accordion>\n                  <Button\n                    type=\"submit\"\n                    label=\"SAVE CHANGES\"\n                    mode=\"primary\"\n                    size=\"medium\"\n                  />\n                </form>\n              </Modal.Body>\n            </>\n          ),\n        });\n      }\n    }\n  }, [\n    control,\n    editProfileGenreInstrumentsData,\n    errors.description,\n    errors.email,\n    errors.firstName,\n    errors.lastName,\n    errors.soundCloudUrl,\n    errors.websiteUrl,\n    handleSubmit,\n    imageUrl,\n    onSubmitEditProfile,\n    register,\n    setModalState,\n    musicianData,\n    modalUpdateData,\n  ]);\n\n  // band page creation logic\n  const [renderCreateBandModal, { data: genreInstrumentsData }] = useLazyQuery(\n    GENRESINSTRUMENTS,\n    {\n      fetchPolicy: \"network-only\",\n      onCompleted: (data) => {\n        setBandUpdateData(data);\n      },\n      onError: (error) => {\n        setModalState({\n          open: true,\n          content: (\n            <Modal.Body className=\"solid-background\">\n              <p> Sorry, we couldn't load filtering options at this time </p>\n            </Modal.Body>\n          ),\n        });\n      },\n    }\n  );\n\n  const [validateBandMembers, { data: userValidationData }] = useLazyQuery(\n    VALIDATE_BAND_MEMBERS,\n    {\n      fetchPolicy: \"no-cache\",\n      onCompleted: ({ checkIfMusicianExists }) => {\n        const validUsers = checkIfMusicianExists\n          .filter((musician) => musician.exists)\n          .map((musician) => {\n            return musician.id;\n          });\n\n        if (validUsers) {\n          setValidBandMembers([state.user.id, ...validUsers]);\n        }\n      },\n    }\n  );\n\n  let invalidUsers = [];\n  if (userValidationData) {\n    const filteredInvalidUsers = userValidationData.checkIfMusicianExists.filter(\n      (musician) => !musician.exists\n    );\n\n    invalidUsers = filteredInvalidUsers.map((invalidUser) => invalidUser.email);\n  }\n\n  const validateMembers = useCallback(() => {\n    const membersInput = $(\"#membersInput\").val();\n\n    if (!membersInput) {\n      return;\n    }\n\n    const formattedMembers = membersInput.split(\",\").map((member) => {\n      return member.trim();\n    });\n\n    validateBandMembers({\n      variables: {\n        checkIfMusicianExistsInput: { musicians: formattedMembers },\n      },\n    });\n\n    invalidUsers = [];\n  }, [validateBandMembers]);\n\n  const [createBand] = useMutation(CREATE_BAND, {\n    onCompleted: (data) => {\n      const bandId = data.createBand.id;\n\n      setModalState({\n        open: true,\n        content: (\n          <>\n            <Modal.Header className=\"solid-background\" closeButton>\n              <Modal.Title>Create a new band</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"solid-background\">\n              <p>Band created successfully</p>\n            </Modal.Body>\n          </>\n        ),\n      });\n\n      setTimeout(() => {\n        redirectToPage(`/bands/${bandId}`);\n      }, 1500);\n    },\n    onError: () => {\n      setModalState({\n        open: true,\n        content: (\n          <>\n            <Modal.Header className=\"solid-background\" closeButton>\n              <Modal.Title>Create a new band</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"solid-background\">\n              <p className=\"regular-text\">\n                Sorry, we currently experiencing some difficulties and could not\n                create your band at this time.\n              </p>\n              <p className=\"regular-text\">Please try again later.</p>\n            </Modal.Body>\n          </>\n        ),\n      });\n    },\n  });\n\n  const onSubmit = useCallback(\n    (formData) => {\n      let openToMembers;\n      let lookingFor;\n\n      if (formData.lookingFor) {\n        openToMembers = true;\n        lookingFor = formData.lookingFor;\n      } else if (!formData.lookingFor || formData.lookingFor[0] === false) {\n        openToMembers = false;\n        lookingFor = [];\n      }\n\n      formData.numberOfMembers = parseFloat(formData.numberOfMembers);\n      formData.openToCollaboration = formData.openToCollaboration = \"true\"\n        ? true\n        : false;\n\n      createBand({\n        variables: {\n          createBandInput: {\n            ...formData,\n            imageUrl: imageUrlBand,\n            openToMembers,\n            musicians: validBandMembers,\n            lookingFor,\n          },\n        },\n      });\n    },\n    [createBand, validBandMembers, imageUrlBand]\n  );\n\n  const { data: gigsData, loading: gigsLoading, error: gigsError } = useQuery(\n    GIGS,\n    {\n      variables: {\n        gigsFilters: {\n          musician: musicianId,\n        },\n      },\n    }\n  );\n\n  const {\n    data: bandsData,\n    loading: bandsLoading,\n    error: bandsError,\n  } = useQuery(BANDS, {\n    variables: {\n      bandsFilters: {\n        musician: musicianId,\n      },\n    },\n  });\n\n  useEffect(() => {\n    if (genreInstrumentsData) {\n      const serverGenres = genreInstrumentsData.genres.map((genre) => {\n        return {\n          value: genre.id,\n          label: genre.name.charAt(0).toUpperCase() + genre.name.slice(1),\n        };\n      });\n\n      const serverInstruments = genreInstrumentsData.instruments.map(\n        (instrument) => {\n          return {\n            value: instrument.id,\n            label:\n              instrument.name.charAt(0).toUpperCase() +\n              instrument.name.slice(1),\n          };\n        }\n      );\n\n      const serverLookingFor = genreInstrumentsData.instruments.map(\n        (instrument) => {\n          return {\n            value: instrument.id,\n            label:\n              instrument.role.charAt(0).toUpperCase() +\n              instrument.role.slice(1),\n          };\n        }\n      );\n      serverLookingFor.unshift({ label: \"Not looking atm\", value: false });\n\n      setBandUpdateData(null);\n      const x = bandUpdateData;\n\n      setModalState({\n        open: true,\n        content: (\n          <>\n            <Modal.Header className=\"solid-background\" closeButton>\n              <Modal.Title>Create a new band</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"solid-background\">\n              <form onSubmit={handleSubmit2(onSubmit)}>\n                <Accordion preExpanded={[\"a\"]}>\n                  <AccordionItem uuid=\"a\" className=\"accordion-container\">\n                    <AccordionItemHeading className=\"accordion-heading-override\">\n                      <AccordionItemButton>\n                        THE BASICS <BsChevronCompactDown size={24} />\n                      </AccordionItemButton>\n                    </AccordionItemHeading>\n                    <AccordionItemPanel>\n                      <p>BAND NAME *</p>\n                      <FormInput\n                        placeholder=\"Band Name\"\n                        error={errors2.name}\n                        register={register2(\"name\")}\n                        required={true}\n                      />\n\n                      <p>NUMBER OF MEMBERS *</p>\n                      <FormInput\n                        placeholder=\"Members\"\n                        error={errors2.numberOfMembers}\n                        register={register2(\"numberOfMembers\", {\n                          required: true,\n                        })}\n                        required={true}\n                        type=\"number\"\n                      />\n                      <p>MEMBERS</p>\n                      <p className=\"small-text regular-text\">\n                        Enter the email address of members with a BandMatch\n                        account. Separate each with a comma.\n                      </p>\n                      <FormInput\n                        register={register2(\"musicians\")}\n                        placeholder=\"Members\"\n                        error={errors2.numberOfMembers}\n                        id=\"membersInput\"\n                        onChange={(e) => {\n                          validateMembers(e);\n                        }}\n                        onBlur={(e) => {\n                          validateMembers(e);\n                        }}\n                      />\n                      {invalidUsers.length > 0 && (\n                        <p className=\"small-text regular-text p-yellow\">\n                          {\" \"}\n                          We couldn't find Bandmatch profiles for the following\n                          users: {invalidUsers.join(\", \")}.\n                        </p>\n                      )}\n\n                      <p>QUICK OVERVIEW *</p>\n                      <FormInput\n                        placeholder=\"Brief description\"\n                        error={errors2.description}\n                        register={register2(\"description\")}\n                        required={true}\n                      />\n                    </AccordionItemPanel>\n                  </AccordionItem>\n                  <AccordionItem uuid=\"b\">\n                    <AccordionItemHeading className=\"accordion-heading-override\">\n                      <AccordionItemButton>\n                        COUPLE SPECIFICS <BsChevronCompactDown size={24} />\n                      </AccordionItemButton>\n                    </AccordionItemHeading>\n                    <AccordionItemPanel>\n                      <p>BAND PIC</p>\n\n                      <ImageUpload\n                        email={state.user.email}\n                        setImageUrl={setImageUrlBand}\n                        imageUrl={imageUrlBand}\n                      />\n\n                      <p>LOCATION *</p>\n\n                      <section className=\"dropdown-div py-3\">\n                        <select\n                          className=\"select-dropdown\"\n                          id=\"location\"\n                          name=\"location\"\n                          placeholder=\"Select your location\"\n                          {...register2(\"location\", { required: true })}\n                        >\n                          {locationOptions.map((location) => {\n                            return (\n                              <option\n                                className=\"option-text\"\n                                value={location.label}\n                                key={location.label}\n                              >\n                                {location.label}\n                              </option>\n                            );\n                          })}\n                        </select>\n                      </section>\n\n                      <p>MUSIC GENRE *</p>\n                      <MultiSelectDropDown\n                        options={serverGenres}\n                        placeholder=\"Select your genre(s)\"\n                        isMulti={true}\n                        name=\"genre\"\n                        control={control2}\n                        required={true}\n                      />\n                      <p>EXPERIENCE *</p>\n                      <section className=\"dropdown-div py-3\">\n                        <select\n                          className=\"select-dropdown\"\n                          id=\"experienceLevel\"\n                          name=\"experienceLevel\"\n                          placeholder=\"Select your experience level\"\n                          {...register2(\"experienceLevel\", {\n                            required: true,\n                          })}\n                          required={true}\n                        >\n                          <option\n                            key=\"newbie\"\n                            className=\"option-text\"\n                            value=\"newbie\"\n                          >\n                            Newbie\n                          </option>\n                          <option\n                            key=\"midway\"\n                            className=\"option-text\"\n                            value=\"midway\"\n                          >\n                            Midway\n                          </option>\n                          <option\n                            key=\"expert\"\n                            className=\"option-text\"\n                            value=\"expert\"\n                          >\n                            Expert\n                          </option>\n                        </select>\n                      </section>\n\n                      <p>INSTRUMENTS *</p>\n                      <MultiSelectDropDown\n                        options={serverInstruments}\n                        placeholder=\"Band instruments\"\n                        isMulti={true}\n                        name=\"instruments\"\n                        control={control2}\n                        required={true}\n                      />\n                    </AccordionItemPanel>\n                  </AccordionItem>\n                  <AccordionItem uuid=\"c\">\n                    <AccordionItemHeading className=\"accordion-heading-override\">\n                      <AccordionItemButton>\n                        COLLABS AND MEDIA <BsChevronCompactDown size={24} />\n                      </AccordionItemButton>\n                    </AccordionItemHeading>\n                    <AccordionItemPanel>\n                      <p>FEATURE SONG</p>\n                      <p className=\"regular-text small-text\">\n                        Enter the Soundcloud url of your top song\n                      </p>\n                      <FormInput\n                        placeholder=\"Soundcloud url\"\n                        error={errors.soundCloudUrl}\n                        register={register2(\"soundCloudUrl\", {\n                          required: false,\n                        })}\n                      />\n                      <p>WEBSITE</p>\n                      <FormInput\n                        placeholder=\"Website url\"\n                        error={errors.websiteUrl}\n                        register={register2(\"websiteUrl\", {\n                          required: false,\n                        })}\n                      />\n                      <p>ARE YOU OPEN TO COLLABS?</p>\n                      <section className=\"dropdown-div py-3\">\n                        <select\n                          className=\"select-dropdown\"\n                          id=\"openToCollaboration\"\n                          name=\"openToCollaboration\"\n                          placeholder=\"Select your experience level\"\n                          {...register2(\"openToCollaboration\", {\n                            required: true,\n                          })}\n                        >\n                          <option className=\"option-text\" value={true}>\n                            YES\n                          </option>\n                          <option className=\"option-text\" value={false}>\n                            NO\n                          </option>\n                        </select>\n                      </section>\n                      <p className=\"pt-10\">LOOKING FOR NEW MEMBERS?</p>\n                      <p className=\"regular-text small-text\">\n                        If you're looking for new members, please select from\n                        the options below. Otherwise, select \"Not looking atm\".\n                      </p>\n                      <MultiSelectDropDown\n                        options={serverLookingFor}\n                        placeholder=\"Musician type...\"\n                        isMulti={true}\n                        name=\"lookingFor\"\n                        control={control2}\n                      />\n                    </AccordionItemPanel>\n                  </AccordionItem>\n                </Accordion>\n                <Button\n                  type=\"submit\"\n                  label=\"SUBMIT\"\n                  mode=\"primary\"\n                  size=\"medium\"\n                ></Button>\n              </form>\n            </Modal.Body>\n          </>\n        ),\n      });\n    }\n  }, [\n    control,\n    errors.soundCloudUrl,\n    errors.websiteUrl,\n    errors2.description,\n    errors2.imageUrl,\n    errors2.location,\n    errors2.name,\n    errors2.numberOfMembers,\n    genreInstrumentsData,\n    handleSubmit2,\n    onSubmit,\n    register2,\n    setModalState,\n    validateMembers,\n    control2,\n    imageUrlBand,\n    state.user.email,\n    bandUpdateData,\n    setBandUpdateData,\n  ]);\n\n  let bands;\n  if (bandsData) {\n    bands = bandsData.bands.map((band) => {\n      let bandGenres = [];\n      let bandInstruments = [];\n      let bandLookingFor = [];\n\n      band.genre.forEach((genre) => {\n        bandGenres.push(genre.name);\n      });\n\n      band.instruments.forEach((instrument) => {\n        bandInstruments.push(instrument.name);\n      });\n\n      band.lookingFor.forEach((looking) => {\n        bandLookingFor.push(looking.role);\n      });\n\n      return {\n        ...band,\n        type: \"band\",\n        genre: bandGenres,\n        instruments: bandInstruments,\n        lookingFor: bandLookingFor,\n      };\n    });\n  }\n\n  if (loading) {\n    return <LoadingSpinner />;\n  }\n\n  if (error) {\n    return (\n      <div className=\"profile-container\">\n        <div className=\"see-through-background-90 error-container\">\n          <p className=\"regular-text\">\n            Sorry, we could not load information at this time.\n          </p>\n          <p className=\"regular-text\">Please try again later.</p>\n          <Button\n            label=\"RETURN HOME\"\n            mode=\"primary\"\n            size=\"medium\"\n            onClick={redirectToHomepage}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  if (musicianData) {\n    const musician = musicianData.musicianUser;\n\n    const name =\n      musician.firstName.charAt(0).toUpperCase() +\n      musician.firstName.slice(1) +\n      \" \" +\n      musician.lastName.charAt(0).toUpperCase() +\n      musician.lastName.slice(1);\n    const openTo = () => {\n      if (musician.openToCollaboration && musician.openToJoiningBand) {\n        return \"OPEN TO COLLABORATION | OPEN TO JOINING A BAND\";\n      } else if (musician.openToCollaboration && !musician.openToJoiningBand) {\n        return \"OPEN TO COLLABORATION\";\n      } else if (!musician.openToCollaboration && musician.openToJoiningBand) {\n        return \"OPEN TO JOINING A BAND\";\n      } else {\n        return \"\";\n      }\n    };\n    let genres = [];\n    let instruments = [];\n    let lookingFor = [];\n    musician.genre.forEach((genre) => {\n      genres.push(genre.name);\n    });\n    musician.instruments.forEach((instrument) => {\n      instruments.push(instrument.name);\n    });\n    musician.lookingFor.forEach((looking) => {\n      lookingFor.push(looking.role);\n    });\n\n    const redirectToPage = (event) => {\n      const page = event.currentTarget.id;\n\n      window.location.replace(`/${page}`);\n    };\n\n    return (\n      <div className=\"profile-container\">\n        <div className=\"p-2\"></div>\n        {myProfile ? (\n          <div className=\"see-through-background-90 text-align-center profile-title-div\">\n            <Title\n              type=\"profile\"\n              text=\"MY PROFILE\"\n              myProfile={myProfile}\n              onClick={renderEditProfileModal}\n            />\n            <div className=\"create-band-button \">\n              <Button\n                label=\"CREATE A BAND\"\n                mode=\"primary\"\n                size=\"medium\"\n                onClick={renderCreateBandModal}\n              />\n            </div>\n          </div>\n        ) : (\n          <div className=\"see-through-background-90 text-align-center profile-title-div\">\n            <p className=\"title mb-2 pt-2 fs-1\">{name}</p>\n            <p className=\"mb-3\">{openTo()}</p>\n\n            <p className=\"p-yellow mt-2 text-limit-one-line\">\n              LOOKING FOR:{\" \"}\n              <span className=\"looking-for\">{lookingFor.join(\" | \")}</span>\n            </p>\n          </div>\n        )}\n        <ProfileInfo\n          imageUrl={musician.imageUrl}\n          name={name}\n          instruments={instruments}\n          genre={genres}\n          openTo={openTo()}\n          description={musician.description}\n          experienceLevel={musician.experienceLevel}\n          lookingFor={lookingFor}\n          soundCloudUrl={musician.soundCloudUrl}\n          myProfile={myProfile}\n          location={musician.location}\n        />\n        {musicianData && musician.soundCloudUrl && (\n          <SoundCloudWidget soundCloudUrl={musician.soundCloudUrl} />\n        )}\n\n        <div className=\"see-through-background-90 text-align-center\">\n          {myProfile ? (\n            <Title type=\"profile\" text=\"MY GIGS\" />\n          ) : (\n            <p className=\"title mb-2 pt-2 fs-1\">{musician.firstName}'s GIGS</p>\n          )}\n\n          {gigsLoading && <LoadingSpinner />}\n\n          {gigsError && (\n            <p className=\"regular-text pb-20\">\n              Sorry, we couldn't load gigs at this time.\n            </p>\n          )}\n\n          {gigsData && gigsData.gigs.length ? (\n            <div className=\"cards-container\">\n              {myProfile\n                ? constructGigCards(gigsData.gigs, \"myAcceptedGig\", musicianId)\n                : constructGigCards(gigsData.gigs, null, state.user.id)}\n            </div>\n          ) : myProfile && !gigsError ? (\n            <div className=\"no-gigs-bands-container\">\n              <div>\n                <p className=\"mb-2 fs-3\">You have no gigs</p>\n              </div>\n              <div>\n                <Button\n                  label=\"FIND A GIG\"\n                  mode=\"primary\"\n                  size=\"medium\"\n                  onClick={redirectToPage}\n                  buttonId=\"gig\"\n                />\n              </div>\n            </div>\n          ) : (\n            !gigsError && (\n              <div className=\"no-gigs-bands-container\">\n                <p className=\"mb-3 fs-3\">\n                  {`${musician.firstName} ${musician.lastName}`} has no gigs\n                </p>\n              </div>\n            )\n          )}\n        </div>\n\n        <div className=\"see-through-background-90 text-align-center\">\n          {myProfile ? (\n            <Title type=\"profile\" text=\"MY BANDS\" />\n          ) : (\n            <p className=\"title mb-2 pt-2 fs-1\">{musician.firstName}'s BANDS</p>\n          )}\n\n          {bandsLoading && <LoadingSpinner />}\n\n          <div className=\"cards-container\">\n            {bandsData && bandsData.bands.length > 0 && (\n              <div className=\"cards-container\">\n                {constructPerformerCards(bands, \"shortened\")}\n              </div>\n            )}\n\n            {bandsError && (\n              <p className=\"regular-text pb-20\">\n                Sorry, we couldn't load gigs at this time.\n              </p>\n            )}\n\n            {(myProfile && !bandsData) ||\n              (myProfile && bandsData.bands.length === 0 && (\n                <div className=\"no-gigs-bands-container\">\n                  <div>\n                    <p className=\"mb-2 fs-3\">You have no bands</p>\n                  </div>\n                  <div>\n                    <Button\n                      label=\"FIND A BAND\"\n                      mode=\"primary\"\n                      size=\"medium\"\n                      onClick={redirectToPage}\n                      buttonId=\"assemble\"\n                    />\n                  </div>\n                </div>\n              ))}\n\n            {(!myProfile && !bandsData) ||\n              (!myProfile && bandsData.bands.length === 0 && (\n                <div className=\"no-gigs-bands-container\">\n                  <p className=\"mb-3 fs-3\">\n                    {`${musician.firstName} ${musician.lastName}`} has no bands\n                  </p>\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default MusicianProfile;\n","import \"./SignUp.css\";\n\nconst SignUp = (props) => {\n  return (\n    <div className=\"signup-choice-container\">\n      <div className=\"form-div\">\n        <div className=\"select-user-type-form\">\n          <div className=\"text-center user-signup-title\">\n            WHAT TYPE OF USER ARE YOU?\n          </div>\n          <div className=\"user-types-flex-container\">\n            <div className=\"user-signup-div\">\n              <a\n                href=\"/signup/musician\"\n                className=\"user-type-button text-center\"\n                data-type=\"musician\"\n              >\n                I'M A MUSICIAN\n              </a>\n              <div className=\"user-info-text text-center\">\n                Discover other musicians - form a new band, find collaborators\n                and book yourself some gigs!\n              </div>\n            </div>\n            <div className=\"venue-signup-div\">\n              <a\n                href=\"/signup/venue\"\n                className=\"user-type-button text-center\"\n                data-type=\"venue\"\n              >\n                I'M A VENUE OWNER\n              </a>\n              <div className=\"user-info-text text-center\">\n                Advertise your upcoming gigs and try to book some of the hottest\n                new talent!\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SignUp;\n","import { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { useHistory } from \"react-router-dom\";\nimport { Stepper } from \"react-form-stepper\";\n\nimport { useUserContext } from \"../../contexts/UserProvider\";\n\nimport FormInput from \"../FormInput\";\nimport Title from \"../Title\";\nimport FormContainer from \"../FormContainer\";\nimport MultiSelectDropDown from \"../MultiSelectDropdown\";\nimport Button from \"../Button\";\nimport LoadingSpinner from \"../LoadingSpinner\";\nimport { SIGNUP } from \"../../graphql/mutations\";\nimport { GENRESINSTRUMENTS } from \"../../graphql/queries\";\n\nimport \"./MusicianSignupForm.css\";\nimport ImageUpload from \"../ImageUpload\";\nimport locationOptions from \"../../data/locationOptions\";\n\nconst MusicianSignupForm = () => {\n  let history = useHistory();\n  const { dispatch } = useUserContext();\n\n  const [formStep, setFormStep] = useState(0);\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState();\n\n  const nextFormStep = () => {\n    setFormStep(formStep + 1);\n  };\n\n  const lastFormStep = () => {\n    setFormStep(formStep - 1);\n  };\n\n  const onFirstSubmit = (formData) => {\n    setUserEmail(formData.email);\n    nextFormStep();\n  };\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n    control,\n  } = useForm({\n    mode: \"onBlur\",\n    reValidateMode: \"onBlur\",\n    shouldFocusError: true,\n  });\n\n  const [signUp, { loading }] = useMutation(SIGNUP, {\n    onCompleted: (data) => {\n      const payload = {\n        token: data.signup.token,\n        email: data.signup.user.email,\n        firstName: data.signup.user.firstName,\n        lastName: data.signup.user.lastName,\n        id: data.signup.user.id,\n        type: data.signup.type,\n      };\n\n      localStorage.setItem(\"user\", JSON.stringify(payload));\n\n      dispatch({\n        type: \"LOGIN\",\n        payload,\n      });\n\n      history.push(`/profile/${data.signup.user.id}`);\n    },\n    onError: (error) => {\n      console.log(error);\n    },\n  });\n\n  const { data: formSelectData } = useQuery(GENRESINSTRUMENTS);\n\n  let genreOptions;\n  let instrumentOptions;\n  let lookingForOptions;\n\n  if (formSelectData) {\n    genreOptions = formSelectData.genres.map((genre) => {\n      return {\n        value: genre.id,\n        label: genre.name.charAt(0).toUpperCase() + genre.name.slice(1),\n      };\n    });\n\n    instrumentOptions = formSelectData.instruments.map((instrument) => {\n      return {\n        value: instrument.id,\n        label:\n          instrument.name.charAt(0).toUpperCase() + instrument.name.slice(1),\n      };\n    });\n\n    lookingForOptions = formSelectData.instruments.map((instrument) => {\n      return {\n        value: instrument.id,\n        label:\n          instrument.role.charAt(0).toUpperCase() + instrument.role.slice(1),\n      };\n    });\n  }\n\n  const submitForm = async (formData) => {\n    if (formData.openToCollaboration === \"true\") {\n      formData.openToCollaboration = true;\n    } else {\n      formData.openToCollaboration = false;\n    }\n\n    if (formData.openToJoiningBand === \"true\") {\n      formData.openToJoiningBand = true;\n    } else {\n      formData.openToJoiningBand = false;\n    }\n\n    const newUser = {\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      password: formData.password,\n      imageUrl,\n      description: formData.description,\n      location: formData.location,\n      websiteUrl: formData.websiteUrl,\n      soundCloudUrl: formData.soundCloudUrl,\n      genre: formData.genre,\n      instruments: formData.instruments,\n      experienceLevel: formData.experienceLevel,\n      lookingFor: formData.lookingFor,\n      openToCollaboration: formData.openToCollaboration,\n      openToJoiningBand: formData.openToJoiningBand,\n    };\n\n    await signUp({\n      variables: {\n        signupInput: { ...newUser, isPremium: false },\n      },\n    });\n  };\n\n  const renderButton = () => {\n    if (formStep > 3) {\n      return undefined;\n    } else if (formStep === 3) {\n      return (\n        <div className=\"button-block d-flex gap-4 mt-2 py-3\">\n          <Button\n            label=\"GO BACK\"\n            mode=\"secondary\"\n            size=\"medium\"\n            type=\"button\"\n            onClick={lastFormStep}\n          ></Button>\n          <Button\n            label=\"CREATE ACCOUNT\"\n            mode=\"primary\"\n            size=\"medium\"\n            type=\"submit\"\n          ></Button>\n        </div>\n      );\n    } else if (formStep === 0) {\n      return (\n        <div className=\"button-block py-3\">\n          <Button\n            label=\"NEXT STEP\"\n            mode=\"primary\"\n            size=\"medium\"\n            type=\"submit\"\n          ></Button>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"button-block d-flex gap-4 mt-2 py-3\">\n          <Button\n            label=\"GO BACK\"\n            mode=\"secondary\"\n            size=\"medium\"\n            type=\"button\"\n            onClick={lastFormStep}\n          ></Button>\n          <Button\n            label=\"NEXT STEP\"\n            mode=\"primary\"\n            size=\"medium\"\n            type=\"submit\"\n          ></Button>\n        </div>\n      );\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"pb-5 text-center\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  return (\n    <FormContainer>\n      {formStep === 0 && (\n        <form onSubmit={handleSubmit(onFirstSubmit)}>\n          <section>\n            <Title type=\"section\" text=\"REGISTER\" />\n            <FormInput\n              placeholder=\"First Name\"\n              error={errors.firstName}\n              register={register(\"firstName\", { required: true })}\n            />\n            <FormInput\n              placeholder=\"Last Name\"\n              error={errors.lastName}\n              register={register(\"lastName\", { required: true })}\n            />\n            <FormInput\n              placeholder=\"Email\"\n              type=\"email\"\n              error={errors.email}\n              register={register(\"email\", {\n                required: true,\n                pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n              })}\n              required={true}\n            />\n            <FormInput\n              type=\"password\"\n              placeholder=\"Password\"\n              error={errors.password}\n              register={register(\"password\", {\n                required: true,\n                pattern: /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n              })}\n            />\n\n            <FormInput\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              error={errors.confirmPassword}\n              register={register(\"confirmPassword\", {\n                required: true,\n                validate: (value) =>\n                  value === watch(\"password\") ||\n                  \"Make sure your passwords match.\",\n                shouldUnregister: true,\n              })}\n            />\n            {errors.confirmPassword && (\n              <div className=\"error-message\">\n                Make sure your passwords match.\n              </div>\n            )}\n          </section>\n          {errors.password && (\n            <div className=\"error-message\">\n              Your password must contain at least 8 characters, with at least\n              one letter, one number and one special character.\n            </div>\n          )}\n          {renderButton()}\n        </form>\n      )}\n\n      {formStep === 1 && (\n        <form onSubmit={handleSubmit(nextFormStep)}>\n          <section>\n            <Title type=\"section\" text=\"SET UP YOUR PROFILE\" />\n\n            <ImageUpload\n              email={userEmail}\n              setImageUrl={setImageUrl}\n              imageUrl={imageUrl}\n            />\n\n            <section className=\"dropdown-div\">\n              <div className=\"select-label\">Where are you based?</div>\n              <select\n                className=\"select-dropdown\"\n                id=\"location\"\n                name=\"location\"\n                placeholder=\"Select your location\"\n                {...register(\"location\", { required: true })}\n              >\n                {locationOptions.map((location) => {\n                  return (\n                    <option\n                      key={location.label}\n                      className=\"option-text\"\n                      value={location.label}\n                    >\n                      {location.label}\n                    </option>\n                  );\n                })}\n              </select>\n            </section>\n\n            <FormInput\n              placeholder=\"Short bio\"\n              error={errors.description}\n              register={register(\"description\", { required: true })}\n            />\n\n            <FormInput\n              placeholder=\"Website URL\"\n              error={errors.websiteUrl}\n              register={register(\"websiteUrl\", { required: false })}\n            />\n\n            <FormInput\n              placeholder=\"SoundCloud URL\"\n              error={errors.soundCloudUrl}\n              register={register(\"soundCloudUrl\", { required: false })}\n            />\n          </section>\n          {renderButton()}\n        </form>\n      )}\n\n      {formStep === 2 && (\n        <form onSubmit={handleSubmit(nextFormStep)}>\n          <section>\n            <Title type=\"section\" text=\"YOUR MUSIC\" />\n\n            <MultiSelectDropDown\n              options={genreOptions}\n              placeholder=\"Select your genre(s)\"\n              isMulti={true}\n              name=\"genre\"\n              control={control}\n              label=\"What genre(s) do you play?\"\n              required={true}\n            />\n            {errors.genre && <div className=\"error-message\">* Required</div>}\n\n            <MultiSelectDropDown\n              options={instrumentOptions}\n              placeholder=\"Select your instrument(s)\"\n              isMulti={true}\n              name=\"instruments\"\n              control={control}\n              label=\"What instrument(s) do you play?\"\n              required={true}\n            />\n            {errors.instruments && (\n              <div className=\"error-message\">* Required</div>\n            )}\n\n            <section className=\"dropdown-div\">\n              <div className=\"select-label\">What level are you?</div>\n              <select\n                className=\"select-dropdown\"\n                id=\"experienceLevel\"\n                name=\"experienceLevel\"\n                placeholder=\"Select your experience level\"\n                {...register(\"experienceLevel\", { required: true })}\n              >\n                <option className=\"option-text\" value=\"newbie\">\n                  Newbie\n                </option>\n                <option className=\"option-text\" value=\"midway\">\n                  Midway\n                </option>\n                <option className=\"option-text\" value=\"expert\">\n                  Expert\n                </option>\n              </select>\n            </section>\n          </section>\n          {renderButton()}\n        </form>\n      )}\n\n      {formStep === 3 && (\n        <form onSubmit={handleSubmit(submitForm)}>\n          <section>\n            <Title type=\"section\" text=\"YOUR GOALS\" />\n\n            <MultiSelectDropDown\n              options={lookingForOptions}\n              placeholder=\"Musician type...\"\n              isMulti={true}\n              name=\"lookingFor\"\n              control={control}\n              label=\"Who do you want to work with?\"\n              required={true}\n            />\n            {errors.lookingFor && (\n              <div className=\"error-message\">* Required</div>\n            )}\n\n            <section className=\"dropdown-div\">\n              <div className=\"select-label\">Interested in collaborations?</div>\n              <select\n                className=\"select-dropdown\"\n                id=\"openToCollaboration\"\n                name=\"openToCollaboration\"\n                placeholder=\"Select...\"\n                {...register(\"openToCollaboration\", { required: true })}\n              >\n                <option className=\"option-text\" value=\"true\">\n                  Yes\n                </option>\n                <option className=\"option-text\" value=\"false\">\n                  No\n                </option>\n              </select>\n            </section>\n\n            <section className=\"dropdown-div\">\n              <div className=\"select-label\">Interested in joining a band?</div>\n              <select\n                className=\"select-dropdown\"\n                id=\"openToJoiningBand\"\n                name=\"openToJoiningBand\"\n                placeholder=\"Select...\"\n                {...register(\"openToJoiningBand\", { required: true })}\n              >\n                <option className=\"option-text\" value=\"true\">\n                  Yes\n                </option>\n                <option className=\"option-text\" value=\"false\">\n                  No\n                </option>\n              </select>\n            </section>\n          </section>\n          {renderButton()}\n        </form>\n      )}\n      <Stepper\n        steps={[\n          { label: \"Account Details\" },\n          { label: \"Your Profile\" },\n          { label: \"Your Music\" },\n          { label: \"Your Goals\" },\n        ]}\n        activeStep={formStep}\n        styleConfig={{\n          activeBgColor: \"#ffd324\",\n          completedBgColor: \"#bb9d24\",\n          activeTextColor: \"#131313\",\n          completedTextColor: \"#131313\",\n          inactiveTextColor: \"#131313\",\n        }}\n      />\n      <div className=\"text-center my-2\">\n        Already have an account?{\" \"}\n        <a className=\"signup-link\" href=\"/login\">\n          Login\n        </a>\n      </div>\n    </FormContainer>\n  );\n};\n\nexport default MusicianSignupForm;\n","import MusicianSignupForm from \"../../components/MusicianSignupForm\";\n\nimport \"./MusicianSignup.css\";\n\nconst MusicianSignup = (props) => {\n  return (\n    <div className=\"signup-container\">\n      <div className=\"form-div\">\n        <MusicianSignupForm />\n      </div>\n    </div>\n  );\n};\n\nexport default MusicianSignup;\n","import { useForm } from \"react-hook-form\";\nimport { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { useHistory } from \"react-router-dom\";\nimport { Stepper } from \"react-form-stepper\";\n\nimport { useUserContext } from \"../../contexts/UserProvider\";\n\nimport FormInput from \"../FormInput\";\nimport Title from \"../Title\";\nimport FormContainer from \"../FormContainer\";\nimport Button from \"../Button\";\nimport ImageUpload from \"../ImageUpload\";\nimport { SIGNUP_VENUE_USER } from \"../../graphql/mutations\";\n\nimport \"./VenueSignupForm.css\";\n\nconst VenueSignupForm = () => {\n  let history = useHistory();\n  const { dispatch } = useUserContext();\n\n  const [formStep, setFormStep] = useState(0);\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState();\n\n  const nextFormStep = () => {\n    setFormStep(formStep + 1);\n  };\n\n  const lastFormStep = () => {\n    setFormStep(formStep - 1);\n  };\n\n  const onFirstSubmit = (formData) => {\n    setUserEmail(formData.email);\n    nextFormStep();\n  };\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm({\n    mode: \"onBlur\",\n    reValidateMode: \"onBlur\",\n    shouldFocusError: true,\n  });\n\n  const [signUp, { loading }] = useMutation(SIGNUP_VENUE_USER, {\n    onCompleted: (data) => {\n      const payload = {\n        token: data.signupVenueUser.token,\n        email: data.signupVenueUser.user.email,\n        firstName: data.signupVenueUser.user.firstName,\n        lastName: data.signupVenueUser.user.lastName,\n        id: data.signupVenueUser.user.id,\n        type: data.signupVenueUser.type,\n        name: data.signupVenueUser.user.name,\n      };\n\n      localStorage.setItem(\"user\", JSON.stringify(payload));\n\n      dispatch({\n        type: \"LOGIN\",\n        payload,\n      });\n\n      history.push(`/venues/${data.signupVenueUser.user.id}`);\n    },\n    onError: (error) => {\n      console.log(error);\n    },\n  });\n\n  const submitForm = async (formData) => {\n    const newUser = {\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      password: formData.password,\n      postcode: formData.postcode,\n      name: formData.name,\n      websiteUrl: formData.websiteUrl,\n      photoUrl: imageUrl,\n      description: formData.description,\n    };\n\n    await signUp({\n      variables: {\n        signupVenueUserInput: { ...newUser, isPremium: false },\n      },\n    });\n  };\n\n  if (loading) {\n    return (\n      <div className=\"pb-5 text-center\">\n        <div className=\"spinner-border \" role=\"status\">\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <FormContainer>\n      {formStep === 0 && (\n        <form onSubmit={handleSubmit(onFirstSubmit)}>\n          <section>\n            <Title type=\"section\" text=\"REGISTER\" />\n            <FormInput\n              placeholder=\"First Name\"\n              error={errors.firstName}\n              register={register(\"firstName\", { required: true })}\n            />\n            <FormInput\n              placeholder=\"Last Name\"\n              error={errors.lastName}\n              register={register(\"lastName\", { required: true })}\n            />\n            <FormInput\n              placeholder=\"Email\"\n              type=\"email\"\n              error={errors.email}\n              register={register(\"email\", {\n                required: true,\n                pattern: /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n              })}\n              required={true}\n            />\n            <FormInput\n              type=\"password\"\n              placeholder=\"Password\"\n              error={errors.password}\n              register={register(\"password\", {\n                required: true,\n                pattern: /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\n              })}\n            />\n\n            <FormInput\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              error={errors.confirmPassword}\n              register={register(\"confirmPassword\", {\n                required: true,\n                validate: (value) =>\n                  value === watch(\"password\") ||\n                  \"Make sure your passwords match.\",\n                shouldUnregister: true,\n              })}\n            />\n            {errors.confirmPassword && (\n              <div className=\"error-message\">\n                Make sure your passwords match.\n              </div>\n            )}\n          </section>\n          {errors.password && (\n            <div className=\"error-message\">\n              Your password must contain at least 8 characters, with at least\n              one letter, one number and one special character.\n            </div>\n          )}\n          <div className=\"button-block py-3\">\n            <Button\n              label=\"NEXT STEP\"\n              mode=\"primary\"\n              size=\"medium\"\n              type=\"submit\"\n            ></Button>\n          </div>\n        </form>\n      )}\n\n      {formStep === 1 && (\n        <form onSubmit={handleSubmit(nextFormStep)}>\n          <section>\n            <Title type=\"section\" text=\"YOUR VENUE\" />\n            <FormInput\n              placeholder=\"Venue Name\"\n              error={errors.name}\n              register={register(\"name\", { required: true })}\n            />\n\n            <ImageUpload\n              email={userEmail}\n              setImageUrl={setImageUrl}\n              imageUrl={imageUrl}\n            />\n          </section>\n\n          <div className=\"button-block d-flex gap-4 mt-2 py-3\">\n            <Button\n              label=\"GO BACK\"\n              mode=\"secondary\"\n              size=\"medium\"\n              type=\"button\"\n              onClick={lastFormStep}\n            ></Button>\n            <Button\n              label=\"NEXT STEP\"\n              mode=\"primary\"\n              size=\"medium\"\n              type=\"submit\"\n            ></Button>\n          </div>\n        </form>\n      )}\n\n      {formStep === 2 && (\n        <form onSubmit={handleSubmit(submitForm)}>\n          <section>\n            <Title type=\"section\" text=\"VENUE DETAILS\" />\n            <FormInput\n              placeholder=\"Short Description...\"\n              error={errors.description}\n              register={register(\"description\", { required: true })}\n            />\n\n            <FormInput\n              placeholder=\"Venue Postcode\"\n              error={errors.postcode}\n              register={register(\"postcode\", { required: true })}\n            />\n\n            <FormInput\n              placeholder=\"Venue Website URL\"\n              error={errors.websiteUrl}\n              register={register(\"websiteUrl\", { required: false })}\n            />\n          </section>\n\n          <div className=\"button-block d-flex gap-4 mt-2 py-3\">\n            <Button\n              label=\"GO BACK\"\n              mode=\"secondary\"\n              size=\"medium\"\n              type=\"button\"\n              onClick={lastFormStep}\n            ></Button>\n            <Button\n              label=\"CREATE ACCOUNT\"\n              mode=\"primary\"\n              size=\"medium\"\n              type=\"submit\"\n            ></Button>\n          </div>\n        </form>\n      )}\n      <Stepper\n        steps={[\n          { label: \"Account Details\" },\n          { label: \"Your Venue\" },\n          { label: \"Venue Details\" },\n        ]}\n        activeStep={formStep}\n        styleConfig={{\n          activeBgColor: \"#ffd324\",\n          completedBgColor: \"#bb9d24\",\n          activeTextColor: \"#131313\",\n          completedTextColor: \"#131313\",\n          inactiveTextColor: \"#131313\",\n        }}\n      />\n\n      <div className=\"text-center my-2\">\n        Already have an account?{\" \"}\n        <a className=\"signup-link\" href=\"/login\">\n          Login\n        </a>\n      </div>\n    </FormContainer>\n  );\n};\n\nexport default VenueSignupForm;\n","import VenueSignupForm from \"../../components/VenueSignupForm\";\n\nimport \"./VenueSignup.css\";\n\nconst VenueSignup = (props) => {\n  return (\n    <div className=\"signup-container\">\n      <div className=\"form-div\">\n        <VenueSignupForm />\n      </div>\n    </div>\n  );\n};\n\nexport default VenueSignup;\n","const formatToTwoDecimals = (numberToFormat) => {\n  const formattedNumber = (Math.round(numberToFormat * 100) / 100).toFixed(2);\n  return parseFloat(formattedNumber);\n};\n\nexport default formatToTwoDecimals;\n","const generateDropdownOptions = (options) => {\n  return options.map((option, index) => {\n    return (\n      <option\n        className=\"option-text\"\n        value={option.value}\n        key={`${option.value}-${index}`}\n      >\n        {option.label}\n      </option>\n    );\n  });\n};\n\nexport default generateDropdownOptions;\n","import moment from \"moment\";\n\nconst validateFutureDates = (current) => {\n  const yesterday = moment().subtract(1, \"day\");\n  return current.isAfter(yesterday);\n};\n\nexport default validateFutureDates;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { useLazyQuery, useMutation, useQuery } from \"@apollo/client\";\nimport { useForm } from \"react-hook-form\";\nimport { useModal } from \"../../contexts/ModalProvider\";\nimport { Modal } from \"react-bootstrap\";\nimport { BsChevronCompactDown } from \"react-icons/bs\";\nimport Datetime from \"react-datetime\";\nimport moment from \"moment\";\nimport \"react-datetime/css/react-datetime.css\";\nimport {\n  Accordion,\n  AccordionItem,\n  AccordionItemHeading,\n  AccordionItemButton,\n  AccordionItemPanel,\n} from \"react-accessible-accordion\";\nimport $ from \"jquery\";\n\nimport { GENRESINSTRUMENTS, GIGS, VENUE } from \"../../graphql/queries\";\nimport { CREATE_GIG } from \"../../graphql/mutations\";\nimport formatToTwoDecimals from \"../../utils/formatToTwoDecimals\";\nimport generateDropdownOptions from \"../../utils/generateDropdownOptions\";\nimport validateFutureDates from \"../../utils/validateFutureDates\";\n\nimport \"./Venue.css\";\nimport Button from \"../../components/Button\";\nimport FormInput from \"../../components/FormInput\";\nimport { useUserContext } from \"../../contexts/UserProvider\";\nimport Title from \"../../components/Title\";\nimport ProfileInfo from \"../../components/ProfileInfo\";\nimport { constructGigCards } from \"../../utils/constructCards\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport ImageUpload from \"../../components/ImageUpload\";\n\nconst Venue = () => {\n  const { state } = useUserContext();\n  const [imageUrl, setImageUrl] = useState();\n\n  const { id: venueId } = useParams();\n\n  const myProfile = venueId === state.user.id;\n\n  const { setModalState } = useModal();\n  const history = useHistory();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    mode: \"onBlur\",\n    reValidateMode: \"onBlur\",\n    shouldFocusError: true,\n  });\n\n  const refreshPage = () => {\n    setModalState({\n      open: false,\n    });\n\n    history.go(0);\n  };\n\n  const [createGig] = useMutation(CREATE_GIG, {\n    onCompleted: () => {\n      setModalState({\n        open: true,\n        content: (\n          <>\n            <Modal.Header className=\"solid-background\" closeButton>\n              <Modal.Title>Create a new gig</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"solid-background\">\n              <p>Gig created successfully</p>\n            </Modal.Body>\n          </>\n        ),\n      });\n\n      setTimeout(() => {\n        refreshPage();\n      }, 1500);\n    },\n    onError: (error) => {\n      console.log(error);\n      setModalState({\n        open: true,\n        content: (\n          <>\n            <Modal.Header className=\"solid-background\" closeButton>\n              <Modal.Title>Create a new gig</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"solid-background\">\n              <p>Sorry, we could not create a new gig at this time.</p>\n              <p>Please try again later.</p>\n            </Modal.Body>\n          </>\n        ),\n      });\n    },\n  });\n\n  const onSubmit = useCallback(\n    async (formData) => {\n      formData.fee = formatToTwoDecimals(formData.fee);\n      const dateTimeUnformatted = $(\".form-control\").attr(\"value\");\n      const dateTimeFormatted = moment.utc(dateTimeUnformatted).format();\n\n      createGig({\n        variables: {\n          createGigInput: {\n            ...formData,\n            venue: venueId,\n            dateTime: dateTimeFormatted,\n            imageUrl,\n          },\n        },\n      });\n    },\n    [createGig, venueId, imageUrl]\n  );\n\n  const [renderCreateGigModal, { data: genreInstrumentsData }] = useLazyQuery(\n    GENRESINSTRUMENTS,\n    {\n      fetchPolicy: \"network-only\",\n      onError: (error) => {\n        setModalState({\n          open: true,\n          content: (\n            <Modal.Body className=\"solid-background\">\n              <p> Sorry, we couldn't load filtering options at this time </p>\n            </Modal.Body>\n          ),\n        });\n      },\n    }\n  );\n\n  useEffect(() => {\n    if (genreInstrumentsData) {\n      const serverGenres = genreInstrumentsData.genres.map((genre) => {\n        return {\n          value: genre.id,\n          label: genre.name.charAt(0).toUpperCase() + genre.name.slice(1),\n        };\n      });\n\n      const genres = generateDropdownOptions(serverGenres);\n\n      setModalState({\n        open: true,\n        content: (\n          <>\n            <Modal.Header className=\"solid-background\" closeButton>\n              <Modal.Title>Create a new gig</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"solid-background\">\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <Accordion preExpanded={[\"a\"]}>\n                  <AccordionItem uuid=\"a\" className=\"accordion-container\">\n                    <AccordionItemHeading className=\"accordion-heading-override\">\n                      <AccordionItemButton>\n                        THE BASICS <BsChevronCompactDown size={24} />\n                      </AccordionItemButton>\n                    </AccordionItemHeading>\n                    <AccordionItemPanel>\n                      <p>TITLE *</p>\n                      <FormInput\n                        placeholder=\"Gig title\"\n                        error={errors.title}\n                        register={register(\"title\", { required: true })}\n                        required={true}\n                      />\n\n                      <p>QUICK OVERVIEW *</p>\n                      <FormInput\n                        placeholder=\"Brief description\"\n                        error={errors.description}\n                        register={register(\"description\")}\n                        required={true}\n                      />\n                      <p>DATE AND TIME *</p>\n                      <Datetime\n                        isValidDate={validateFutureDates}\n                        closeOnSelect={true}\n                        // dateFormat=\"DD-MM-YYYY\"\n                        className=\"form-control-override\"\n                      />\n                      <p>PAY RATE (£) *</p>\n                      <FormInput\n                        placeholder=\"Reward for performer\"\n                        error={errors.fee}\n                        register={register(\"fee\", {\n                          required: true,\n                        })}\n                        required={true}\n                        type=\"number\"\n                      />\n                    </AccordionItemPanel>\n                  </AccordionItem>\n                  <AccordionItem uuid=\"b\" className=\"accordion-container\">\n                    <AccordionItemHeading className=\"accordion-heading-override\">\n                      <AccordionItemButton>\n                        COUPLE SPECIFICS <BsChevronCompactDown size={24} />\n                      </AccordionItemButton>\n                    </AccordionItemHeading>\n                    <AccordionItemPanel>\n                      <p>MUSIC GENRE *</p>\n                      <section className=\"dropdown-div py-3\">\n                        <select\n                          className=\"select-dropdown\"\n                          id=\"genre\"\n                          name=\"genre\"\n                          placeholder=\"Select your genre\"\n                          {...register(\"genre\", {\n                            required: true,\n                          })}\n                          required={true}\n                        >\n                          {[...genres]}\n                        </select>\n                      </section>\n\n                      <p>VENUE PIC</p>\n\n                      <ImageUpload\n                        email={state.user.email}\n                        setImageUrl={setImageUrl}\n                        imageUrl={imageUrl}\n                      />\n                      <p>WEBSITE URL</p>\n                      <FormInput\n                        placeholder=\"Link to the site?\"\n                        error={errors.websiteUrl}\n                        register={register(\"websiteUrl\")}\n                      />\n                    </AccordionItemPanel>\n                  </AccordionItem>\n                </Accordion>\n                <Button\n                  type=\"submit\"\n                  label=\"SUBMIT\"\n                  mode=\"primary\"\n                  size=\"medium\"\n                ></Button>\n              </form>\n            </Modal.Body>\n          </>\n        ),\n      });\n    }\n  }, [\n    errors.description,\n    errors.fee,\n    errors.title,\n    errors.websiteUrl,\n    genreInstrumentsData,\n    handleSubmit,\n    imageUrl,\n    onSubmit,\n    register,\n    setModalState,\n    state.user.email,\n  ]);\n\n  const {\n    data: venueData,\n    loading: venueLoading,\n    error: venueError,\n  } = useQuery(VENUE, {\n    variables: {\n      venueId: venueId,\n    },\n  });\n\n  const { data: gigsData, loading: gigsLoading, error: gigsError } = useQuery(\n    GIGS,\n    {\n      variables: {\n        gigsFilters: {\n          venue: venueId,\n        },\n      },\n    }\n  );\n\n  const redirectToHomepage = () => {\n    setModalState({\n      open: false,\n    });\n\n    history.push(\"/\");\n  };\n\n  let venue;\n\n  if (venueData) {\n    venue = venueData.venue;\n  }\n\n  if (venueError) {\n    return (\n      <div className=\"profile-container\">\n        <div className=\"see-through-background-90 error-container\">\n          <p className=\"regular-text\">\n            Sorry, we could not load information at this time.\n          </p>\n          <p className=\"regular-text\">Please try again later.</p>\n          <Button\n            label=\"RETURN HOME\"\n            mode=\"primary\"\n            size=\"medium\"\n            onClick={redirectToHomepage}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"p-2\"></div>\n\n      {myProfile && venueData && (\n        <div className=\"see-through-background-90 text-align-center profile-title-div\">\n          <Title type=\"profile\" text=\"MY VENUE\" />\n          <div className=\"create-band-button \">\n            <Button\n              label=\"NEW GIG\"\n              mode=\"primary\"\n              size=\"medium\"\n              onClick={renderCreateGigModal}\n            />\n          </div>\n        </div>\n      )}\n\n      {!myProfile && venueData && (\n        <div className=\"see-through-background-90 text-align-center profile-title-div\">\n          <p className=\"title mb-2 pt-2 fs-1\">{venue.name}</p>\n        </div>\n      )}\n\n      {venue && (\n        <ProfileInfo\n          imageUrl={venue.photoUrl}\n          name={venue.name}\n          postcode={venue.postcode}\n          description={venue.description}\n          websiteUrl={venue.websiteUrl}\n          myProfile={myProfile}\n        />\n      )}\n\n      {venueLoading && <LoadingSpinner />}\n\n      <div className=\"see-through-background-90 text-align-center\">\n        {venueData && (\n          <p className=\"title mb-2 pt-2 fs-1\">GIGS at {venue.name}</p>\n        )}\n\n        {gigsData && myProfile && (\n          <div className=\"cards-container\">\n            {constructGigCards(gigsData.gigs, \"x\", \"venue\")}\n          </div>\n        )}\n\n        {gigsData && !myProfile && (\n          <div className=\"cards-container\">\n            {constructGigCards(gigsData.gigs)}\n          </div>\n        )}\n\n        {gigsLoading && <LoadingSpinner />}\n\n        {!myProfile && !gigsData && venueData && (\n          <div className=\"no-gigs-bands-container\">\n            <p className=\"mb-3 fs-3\">\n              {venueData.venue.name} has no gigs coming up.\n            </p>\n          </div>\n        )}\n\n        {myProfile && !gigsData && (\n          <div className=\"no-gigs-bands-container\">\n            <div>\n              <p className=\"mb-2 fs-3\">You have no gigs</p>\n            </div>\n            <div>\n              <Button\n                label=\"NEW GIG\"\n                mode=\"primary\"\n                size=\"medium\"\n                onClick={renderCreateGigModal}\n              />\n            </div>\n          </div>\n        )}\n\n        {gigsError && (\n          <p className=\"mb-3 fs-3\">\n            We can't display any gig information at the moment. Check again\n            later!\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Venue;\n","import Button from \"../Button\";\nimport \"./RequestCard.css\";\nimport moment from \"moment\";\nimport { useMutation } from \"@apollo/client\";\nimport { UPDATE_GIG_REQUEST } from \"../../graphql/mutations\";\n\nconst RequestCard = ({\n  firstName,\n  lastName,\n  name,\n  gigName,\n  imageUrl,\n  musicianId,\n  bandId,\n  gigId,\n  dateTime,\n  id,\n}) => {\n  const [updateGigRequest] = useMutation(UPDATE_GIG_REQUEST);\n  const acceptRequest = async (event) => {\n    const id = event.target.parentElement.dataset.id;\n    await updateGigRequest({\n      variables: { updateGigRequestInput: { id, confirmed: \"true\" } },\n    });\n  };\n  const rejectRequest = async (event) => {\n    const id = event.target.parentElement.dataset.id;\n    await updateGigRequest({\n      variables: {\n        updateGigRequestInput: { id, confirmed: \"false\" },\n      },\n    });\n  };\n  return (\n    <div className=\"musician-request-card solid-background d-flex align-items-center\">\n      <div className=\"musician-image-container\">\n        <a href={bandId ? `/bands/${bandId}` : `/profile/${musicianId}`}>\n          <img\n            className=\"musician-request-image\"\n            src={imageUrl}\n            alt={bandId ? name : firstName}\n          />\n        </a>\n      </div>\n      <div className=\"musician-info-container text-center\">\n        <p>{bandId ? name : firstName + \" \" + lastName}</p>\n        <p>{gigName}</p>\n        <p>\n          {moment(dateTime * 1)\n            .local()\n            .format(\"DD-MM-YYYY HH:mm\")}\n        </p>\n      </div>\n      <div className=\"musician-button-container\">\n        <div className=\"musician-button\" data-id={id}>\n          <Button\n            mode=\"primary\"\n            size=\"small\"\n            label=\"ACCEPT\"\n            onClick={acceptRequest}\n          />\n        </div>\n        <div className=\"musician-button\" data-id={id}>\n          <Button\n            mode=\"secondary\"\n            size=\"small\"\n            label=\"REJECT\"\n            onClick={rejectRequest}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RequestCard;\n","import { useQuery } from \"@apollo/client\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport RequestCard from \"../../components/RequestCard\";\nimport Title from \"../../components/Title\";\nimport { useUserContext } from \"../../contexts/UserProvider\";\nimport { GIG_REQUESTS } from \"../../graphql/queries\";\nimport \"./Requests.css\";\n\nconst Requests = (props) => {\n  const { state } = useUserContext();\n\n  const { data, loading: requestsLoading } = useQuery(GIG_REQUESTS, {\n    variables: {\n      gigRequestsId: state.user.id,\n    },\n    onError: (error) => {\n      console.log(error);\n    },\n    pollInterval: 500,\n  });\n\n  const filteredData = [];\n\n  if (data) {\n    data.gigRequests.map((gig) => {\n      gig.performers.map((performer) => {\n        if (performer.band) {\n          const performerData = {\n            bandId: performer.band,\n            name: performer.bandDetails.name,\n            imageUrl: performer.bandDetails.imageUrl,\n            gigId: gig.id,\n            gigName: gig.title,\n            dateTime: gig.dateTime,\n            id: performer._id,\n          };\n          filteredData.push(performerData);\n        } else if (performer.musician) {\n          const performerData = {\n            musicianId: performer.musician,\n            firstName: performer.musicianDetails.firstName,\n            lastName: performer.musicianDetails.lastName,\n            imageUrl: performer.musicianDetails.imageUrl,\n            gigId: gig.id,\n            gigName: gig.title,\n            dateTime: gig.dateTime,\n            id: performer._id,\n          };\n          filteredData.push(performerData);\n        }\n      });\n    });\n  }\n\n  return (\n    <div className=\"results-page-container d-flex justify-content-center\">\n      <div className=\"request-cards-container see-through-background-90\">\n        <Title text=\"MY REQUESTS\" type=\"section\" />\n\n        {requestsLoading && <LoadingSpinner />}\n        {data &&\n          filteredData.map((performer) => {\n            return (\n              <RequestCard\n                firstName={performer.firstName || null}\n                lastName={performer.lastName || null}\n                name={performer.name || null}\n                gigName={performer.gigName}\n                imageUrl={performer.imageUrl}\n                musicianId={performer.musicianId || null}\n                bandId={performer.bandId || null}\n                gigId={performer.gigId}\n                dateTime={performer.dateTime}\n                id={performer.id}\n                key={performer.gigId + performer.imageUrl}\n              />\n            );\n          })}\n      </div>\n    </div>\n  );\n};\n\nexport default Requests;\n","import { useQuery } from \"@apollo/client\";\n\nimport Header from \"../../components/Header\";\nimport CardsCarousel from \"../../components/Carousel\";\nimport { constructPerformerCards } from \"../../utils/constructCards\";\n\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport { BANDS } from \"../../graphql/queries\";\nimport Title from \"../../components/Title\";\n\nconst Bands = () => {\n  const { data: bandsData, loading: bandsLoading } = useQuery(BANDS);\n\n  let bandCards;\n  if (bandsData) {\n    bandCards = bandsData.bands.map((card) => {\n      let genres = [];\n      let instruments = [];\n      let lookingFor = [];\n\n      card.genre.forEach((genre) => {\n        genres.push(genre.name);\n      });\n\n      card.instruments.forEach((instrument) => {\n        instruments.push(instrument.name);\n      });\n\n      card.lookingFor.forEach((looking) => {\n        lookingFor.push(looking.role);\n      });\n      return {\n        ...card,\n        type: \"band\",\n        genre: genres,\n        instruments,\n        lookingFor,\n      };\n    });\n  }\n\n  return (\n    <div className=\"results-page-container\">\n      <Header className=\"pt-3\" title=\"FIND YOUR GIG'S PERFECT BAND\" />\n      <div className=\"see-through-background-90 mt-20 \">\n        <p className=\"title gutter\">NEW KIDS ON THE BLOCK</p>\n        {bandsLoading && <LoadingSpinner />}\n        {bandsData && <CardsCarousel cards={bandCards} />}\n      </div>\n\n      <div className=\"mt-5 see-through-background-90 text-align-center main-cards-container\">\n        <Title className=\"pt-3\" text=\"ALL BANDS\" type=\"section\" />\n        {bandsLoading && <LoadingSpinner />}\n        {bandsData && (\n          <div className=\"cards-container\">\n            {constructPerformerCards(bandCards)}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Bands;\n","import { useQuery } from \"@apollo/client\";\n\nimport Header from \"../../components/Header\";\nimport CardsCarousel from \"../../components/Carousel\";\nimport { constructPerformerCards } from \"../../utils/constructCards\";\n\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport { MUSICIANS } from \"../../graphql/queries\";\nimport Title from \"../../components/Title\";\n\nconst Musicians = () => {\n  const { data: musiciansData, loading: musiciansLoading } = useQuery(\n    MUSICIANS\n  );\n\n  let musicianCards;\n  if (musiciansData) {\n    musicianCards = musiciansData.musicians.map((card) => {\n      let genres = [];\n      let instruments = [];\n      let lookingFor = [];\n\n      card.genre.forEach((genre) => {\n        genres.push(genre.name);\n      });\n\n      card.instruments.forEach((instrument) => {\n        instruments.push(instrument.name);\n      });\n\n      card.lookingFor.forEach((looking) => {\n        lookingFor.push(looking.role);\n      });\n      return {\n        ...card,\n        genre: genres,\n        instruments,\n        lookingFor,\n      };\n    });\n  }\n\n  return (\n    <div className=\"results-page-container\">\n      <Header className=\"pt-3\" title=\"FIND YOUR GIG'S PERFECT MUSICIAN\" />\n      <div className=\"see-through-background-90 mt-20 \">\n        <p className=\"title gutter\">NEW KIDS ON THE BLOCK</p>\n        {musiciansLoading && <LoadingSpinner />}\n        {musiciansData && <CardsCarousel cards={musicianCards} />}\n      </div>\n      <div className=\"see-through-background-90 text-align-center main-cards-container mt-5\">\n        <Title className=\"pt-5\" text=\"ALL MUSICIANS\" type=\"section\" />\n        {musiciansLoading && <LoadingSpinner />}\n        {musiciansData && (\n          <div className=\"cards-container\">\n            {constructPerformerCards(musicianCards)}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Musicians;\n","import { AiFillGithub, AiFillLinkedin } from \"react-icons/ai\";\nimport { MdWeb } from \"react-icons/md\";\n\nimport \"./AboutUsCard.css\";\n\nconst AboutUsCard = (props) => {\n  return (\n    <div className=\"card-container card-container-extended mx-3 about-card\">\n      <div\n        className=\"about-card-image\"\n        style={{\n          backgroundImage: \"url(\" + props.imageUrl + \")\",\n          backgroundPosition: \"center center\",\n        }}\n      ></div>\n      <div>\n        <h3 className=\"title text-limit-one-line my-3\"> {props.name} </h3>\n        <p className=\"text-limit-one-line my-3\"> {props.description} </p>\n      </div>\n      <div className=\"about-icons-container my-3\">\n        <a href={props.githubUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n          <AiFillGithub size={30} />\n        </a>\n        <a href={props.linkedinUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n          <AiFillLinkedin size={30} />\n        </a>\n        <a href={props.portfolioUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n          <MdWeb size={30} />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutUsCard;\n","export default __webpack_public_path__ + \"static/media/natasha.9892fec5.jpeg\";","export default __webpack_public_path__ + \"static/media/soumeya.1bb1feb7.jpeg\";","export default __webpack_public_path__ + \"static/media/kris.093708c6.jpg\";","export default __webpack_public_path__ + \"static/media/dom.a6d3f75b.jpg\";","import AboutUsCard from \"../../components/AboutUsCard\";\n\nimport \"./AboutUs.css\";\n\nimport tashaPhoto from \"../../images/natasha.jpeg\";\nimport soumeyaPhoto from \"../../images/soumeya.jpeg\";\nimport krisPhoto from \"../../images/kris.jpg\";\nimport domPhoto from \"../../images/dom.jpg\";\n\nconst AboutUs = () => {\n  const ourInfo = [\n    {\n      name: \"Dominika\",\n      imageUrl: domPhoto,\n      githubUrl: \"https://github.com/dominikacookies\",\n      linkedinUrl: \"https://www.linkedin.com/in/dominika-pietrzak-183755137/\",\n      portfolioUrl: \"https://dominikacookies.github.io/react-portfolio/\",\n    },\n    {\n      name: \"Kris\",\n      imageUrl: krisPhoto,\n      githubUrl: \"https://github.com/ivnkris\",\n      linkedinUrl: \"https://www.linkedin.com/in/krisztian-ivan-10880478//\",\n      portfolioUrl: \"https://ivnkris.github.io/personal-portfolio-react/#/\",\n    },\n    {\n      name: \"Natasha\",\n      imageUrl: tashaPhoto,\n      githubUrl: \"https://github.com/natasha-mann\",\n      linkedinUrl: \"https://www.linkedin.com/in/natashamann2896//\",\n      portfolioUrl: \"https://natasha-mann.github.io/portfolio-react/\",\n    },\n    {\n      name: \"Soumeya\",\n      imageUrl: soumeyaPhoto,\n      githubUrl: \"https://github.com/SoumeyaH\",\n      linkedinUrl: \"https://www.linkedin.com/in/soumeya-hassan-0a12a5203/\",\n      portfolioUrl: \"https://soumeyah.github.io/react-portfolio/\",\n    },\n  ];\n\n  const cardsToRender = ourInfo.map((info) => {\n    return (\n      <AboutUsCard\n        key={info.name}\n        name={info.name}\n        imageUrl={info.imageUrl}\n        description={info.description}\n        githubUrl={info.githubUrl}\n        linkedinUrl={info.linkedinUrl}\n        portfolioUrl={info.portfolioUrl}\n      />\n    );\n  });\n  return (\n    <div className=\"about-us-page-container\">\n      <h1 className=\"about-title\">Meet the Team</h1>\n      <div className=\"about-cards-container\">{cardsToRender}</div>\n    </div>\n  );\n};\n\nexport default AboutUs;\n","import Button from \"../../components/Button\";\n\nconst Error404 = () => {\n  return (\n    <div className=\"error-page-container\">\n      <div className=\"move-center\">\n        <div>\n          <h1>\n            <span className=\"larger-text\">Oops!</span> Sorry, we couldn't find\n            that page.\n          </h1>\n        </div>\n        <h4 className=\"my-5 ms-3\">\n          Try going back to the previous page or click below to go home.\n        </h4>\n        <a href=\"/\">\n          <Button label=\"Home\" size=\"medium\" mode=\"primary\" />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Error404;\n","import { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport { useUserContext } from \"./contexts/UserProvider\";\nimport Assemble from \"./pages/Assemble\";\nimport BandProfile from \"./pages/BandProfile/index.js\";\nimport Collaborate from \"./pages/Collaborate\";\nimport Gig from \"./pages/Gig\";\nimport Home from \"./pages/Home/index\";\nimport Inbox from \"./pages/Inbox/index\";\nimport Login from \"./pages/Login/index\";\nimport MusicianProfile from \"./pages/MusicianProfile\";\nimport SignUp from \"./pages/SignUp/index\";\nimport MusicianSignup from \"./pages/MusicianSignup\";\nimport VenueSignup from \"./pages/VenueSignup\";\nimport Venue from \"./pages/Venue\";\nimport Requests from \"./pages/Requests\";\nimport Bands from \"./pages/Bands\";\nimport Musicians from \"./pages/Musicians\";\nimport AboutUs from \"./pages/AboutUs\";\nimport Error404 from \"./pages/Error404\";\n\nconst Routes = () => {\n  const { state } = useUserContext();\n\n  return (\n    <Switch>\n      <Route exact path=\"/assemble\">\n        {state.user ? <Assemble /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/collaborate\">\n        {state.user ? <Collaborate /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/gig\">\n        {state.user ? <Gig /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/inbox\">\n        {state.user ? <Inbox /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/login\">\n        {!state.user && <Login />}\n        {state.user && state.user.type === \"musician\" && (\n          <Redirect to={`/profile/${state.user.id}`} />\n        )}\n        {state.user && state.user.type === \"venue\" && (\n          <Redirect to={`/venues/${state.user.id}`} />\n        )}\n      </Route>\n      <Route exact path=\"/signup\">\n        {!state.user && <SignUp />}\n        {state.user && state.user.type === \"musician\" && (\n          <Redirect to={`/profile/${state.user.id}`} />\n        )}\n        {state.user && state.user.type === \"venue\" && (\n          <Redirect to={`/venues/${state.user.id}`} />\n        )}\n      </Route>\n      <Route exact path=\"/signup/musician\">\n        {!state.user && <MusicianSignup />}\n        {state.user && state.user.type === \"musician\" && (\n          <Redirect to={`/profile/${state.user.id}`} />\n        )}\n        {state.user && state.user.type === \"venue\" && (\n          <Redirect to={`/venues/${state.user.id}`} />\n        )}\n      </Route>\n      <Route exact path=\"/signup/venue\">\n        {!state.user && <VenueSignup />}\n        {state.user && state.user.type === \"musician\" && (\n          <Redirect to={`/profile/${state.user.id}`} />\n        )}\n        {state.user && state.user.type === \"venue\" && (\n          <Redirect to={`/venues/${state.user.id}`} />\n        )}\n      </Route>\n      <Route exact path=\"/musicians\">\n        <Musicians />\n      </Route>\n      <Route exact path=\"/bands\">\n        {state.user ? <Bands /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/profile/:id\">\n        {state.user ? <MusicianProfile /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/bands/:id\">\n        {state.user ? <BandProfile /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/venues/:id\">\n        {state.user ? <Venue /> : <Redirect to=\"/login\" />}\n      </Route>\n      <Route exact path=\"/requests/:id\">\n        {state.user && state.user.type === \"venue\" ? (\n          <Requests />\n        ) : (\n          <Redirect to=\"/login\" />\n        )}\n      </Route>\n      <Route exact path=\"/about-us\">\n        <AboutUs />\n      </Route>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route path=\"*\">\n        <Error404 />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default Routes;\n","import { GiHamburgerMenu } from \"react-icons/gi\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { isMobile, isBrowser } from \"react-device-detect\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"bootstrap/dist/js/bootstrap\";\n\nimport { useUserContext } from \"../../contexts/UserProvider\";\n\nimport \"./NavigationBar.css\";\n\nconst NavigationBar = (props) => {\n  const { state, dispatch } = useUserContext();\n  let history = useHistory();\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"userFilters\");\n    dispatch({ type: \"LOGOUT\" });\n    history.push(\"/\");\n  };\n\n  const capitalizeFirstLetter = (string) => {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  };\n\n  return (\n    <nav id=\"navbar\" className=\"navbar navbar-expand-lg nav-bar sticky-top\">\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand nav-bar-logo-container\" href=\"/\">\n          <div>BAND MATCH</div>\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNavAltMarkup\"\n          aria-controls=\"navbarNavAltMarkup\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\">\n            <GiHamburgerMenu />\n          </span>\n        </button>\n        <div\n          className=\"collapse navbar-collapse dropdown-nav\"\n          id=\"navbarNavAltMarkup\"\n        >\n          <div className=\"navbar-nav nav-links nav-bar-links-container\">\n            {!state.user && (\n              <>\n                <a className=\"nav-link nav-bar-link\" href=\"/assemble\">\n                  ASSEMBLE\n                </a>\n                <a className=\"nav-link nav-bar-link\" href=\"/collaborate\">\n                  COLLAB\n                </a>\n                <a className=\"nav-link nav-bar-link\" href=\"/gig\">\n                  GIG\n                </a>\n              </>\n            )}\n\n            {state.user && state.user.type === \"musician\" && (\n              <>\n                <a className=\"nav-link nav-bar-link\" href=\"/assemble\">\n                  ASSEMBLE\n                </a>\n                <a className=\"nav-link nav-bar-link\" href=\"/collaborate\">\n                  COLLAB\n                </a>\n                <a className=\"nav-link nav-bar-link\" href=\"/gig\">\n                  GIG\n                </a>\n              </>\n            )}\n\n            {state.user && state.user.type === \"venue\" && (\n              <>\n                <a className=\"nav-link nav-bar-link\" href=\"/musicians\">\n                  MUSICIANS\n                </a>\n                <a className=\"nav-link nav-bar-link\" href=\"/bands\">\n                  BANDS\n                </a>\n                <a className=\"nav-link nav-bar-link\" href=\"/gig\">\n                  GIG\n                </a>\n              </>\n            )}\n\n            {!state.user && (\n              <>\n                <a className=\"nav-link nav-bar-link\" href=\"/about-us\">\n                  ABOUT US\n                </a>\n                <a className=\"nav-link nav-bar-link\" href=\"/login\">\n                  LOGIN\n                </a>\n              </>\n            )}\n\n            {state.user && isMobile && (\n              <>\n                {state.user.type === \"venue\" && (\n                  <a\n                    className=\"nav-link nav-bar-link\"\n                    href={`/venues/${state.user.id}`}\n                  >\n                    MY PROFILE\n                  </a>\n                )}\n                {state.user.type !== \"venue\" && (\n                  <a\n                    className=\"nav-link nav-bar-link\"\n                    href={`/profile/${state.user.id}`}\n                  >\n                    MY PROFILE\n                  </a>\n                )}\n                {state.user.type === \"venue\" && (\n                  <a\n                    className=\"nav-link nav-bar-link\"\n                    href={`/venues/${state.user.id}`}\n                  >\n                    MY PROFILE\n                  </a>\n                )}\n                {state.user.type === \"venue\" && (\n                  <a\n                    className=\"nav-link nav-bar-link\"\n                    href={`/requests/${state.user.id}`}\n                  >\n                    MY REQUESTS\n                  </a>\n                )}\n                <a className=\"nav-link nav-bar-link\" href=\"/inbox\">\n                  INBOX\n                </a>\n                <button\n                  type=\"link\"\n                  className=\"logout-btn nav-link\"\n                  onClick={handleLogout}\n                >\n                  LOGOUT\n                </button>\n              </>\n            )}\n            {state.user && isBrowser && (\n              <DropdownButton\n                variant=\"secondary\"\n                title={\n                  capitalizeFirstLetter(state.user.firstName) +\n                  \" \" +\n                  capitalizeFirstLetter(state.user.lastName)\n                }\n                align=\"end\"\n                className=\"nav-menu-button\"\n              >\n                {state.user.type === \"venue\" && (\n                  <Dropdown.Item\n                    className=\"dropdown-menu-item\"\n                    href={`/venues/${state.user.id}`}\n                  >\n                    My Profile\n                  </Dropdown.Item>\n                )}\n                {state.user.type !== \"venue\" && (\n                  <Dropdown.Item\n                    className=\"dropdown-menu-item\"\n                    href={`/profile/${state.user.id}`}\n                  >\n                    My Profile\n                  </Dropdown.Item>\n                )}\n                {state.user.type === \"venue\" && (\n                  <Dropdown.Item\n                    className=\"dropdown-menu-item\"\n                    href={`/requests/${state.user.id}`}\n                  >\n                    My Requests\n                  </Dropdown.Item>\n                )}\n                <Dropdown.Item href=\"/inbox\">Inbox</Dropdown.Item>\n                <Dropdown.Divider />\n                <button\n                  type=\"link\"\n                  className=\"logout-btn nav-link\"\n                  onClick={handleLogout}\n                >\n                  LOGOUT\n                </button>\n              </DropdownButton>\n            )}\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavigationBar;\n","import { Modal } from \"react-bootstrap\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport Routes from \"./Routes\";\nimport NavigationBar from \"./components/NavigationBar\";\nimport UserProvider from \"./contexts/UserProvider\";\nimport ModalProvider, { useModal } from \"./contexts/ModalProvider\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./Reset.css\";\nimport \"./App.css\";\n\nconst httpLink = createHttpLink({\n  uri:\n    process.env.GRAPHQL_URL ||\n    \"https://boiling-headland-30180.herokuapp.com/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n  return {\n    headers: {\n      ...headers,\n      authorization: user ? `Bearer ${user.token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache({\n    typePolicies: {\n      Query: {\n        assemble: {\n          feed: {\n            keyArgs: false,\n            merge(existing = [], incoming) {\n              return [...existing, ...incoming];\n            },\n          },\n        },\n      },\n    },\n  }),\n});\n\nconst AppModal = () => {\n  const { modalState, setModalState } = useModal();\n\n  const onHideModal = () => {\n    setModalState({ open: false, content: null });\n  };\n\n  return (\n    <Modal size=\"lg\" show={modalState.open} onHide={onHideModal} centered>\n      {modalState?.content}\n    </Modal>\n  );\n};\n\nconst App = () => {\n  return (\n    <ApolloProvider client={client}>\n      <UserProvider>\n        <ModalProvider>\n          <Router>\n            <NavigationBar />\n            <Routes />\n            <AppModal />\n          </Router>\n        </ModalProvider>\n      </UserProvider>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const generateOptions = (options) => {\n  return options.map((option) => {\n    return {\n      value: option.id,\n      label: option.name.charAt(0).toUpperCase() + option.name.slice(1),\n    };\n  });\n};\n\nconst generateRoleOptions = (options) => {\n  return options.map((option) => {\n    return {\n      value: option.id,\n      label: option.role.charAt(0).toUpperCase() + option.role.slice(1),\n    };\n  });\n};\n\nconst generateDefaultValues = (options) => {\n  return options.map((option) => {\n    return option.id;\n  });\n};\n\nmodule.exports = {\n  generateOptions,\n  generateRoleOptions,\n  generateDefaultValues,\n};\n","const locationOptions = [\n  { label: \"Aberdeen\", value: \"Aberdeen\" },\n  { label: \"Bangor\", value: \"Bangor\" },\n  { label: \"Belfast\", value: \"Belfast\" },\n  { label: \"Birmingham\", value: \"Birmingham\" },\n  { label: \"Bournemouth\", value: \"Bournemouth\" },\n  { label: \"Bradford\", value: \"Bradford\" },\n  { label: \"Brighton\", value: \"Brighton\" },\n  { label: \"Bristol\", value: \"Bristol\" },\n  { label: \"Cambridge\", value: \"Cambridge\" },\n  { label: \"Coventry\", value: \"Coventry\" },\n  { label: \"Cardiff\", value: \"Cardiff\" },\n  { label: \"Chester\", value: \"Chester\" },\n  { label: \"Derby\", value: \"Derby\" },\n  { label: \"Durham\", value: \"Durham\" },\n  { label: \"Edinburgh\", value: \"Edinburgh\" },\n  { label: \"Exeter\", value: \"Exeter\" },\n  { label: \"Glasgow\", value: \"Glasgow\" },\n  { label: \"Lancaster\", value: \"Lancaster\" },\n  { label: \"Leeds\", value: \"Leeds\" },\n  { label: \"Leicester\", value: \"Leicester\" },\n  { label: \"Lichfield\", value: \"Lichfield\" },\n  { label: \"Lincoln\", value: \"Lincoln\" },\n  { label: \"Liverpool\", value: \"Liverpool\" },\n  { label: \"London\", value: \"London\" },\n  { label: \"Manchester\", value: \"Manchester\" },\n  { label: \"Middlesbrough\", value: \"Middlesbrough\" },\n  { label: \"Newcastle\", value: \"Newcastle\" },\n  { label: \"Newport\", value: \"Newport\" },\n  { label: \"Norwich\", value: \"Norwich\" },\n  { label: \"Oxford\", value: \"Oxford\" },\n  { label: \"Peterborough\", value: \"Peterborough\" },\n  { label: \"Plymouth\", value: \"Plymouth\" },\n  { label: \"Portsmouth\", value: \"Portsmouth\" },\n  { label: \"Preston\", value: \"Preston\" },\n  { label: \"Reading\", value: \"Reading\" },\n  { label: \"Salford\", value: \"Salford\" },\n  { label: \"Salisbury\", value: \"Salisbury\" },\n  { label: \"Sheffield\", value: \"Sheffield\" },\n  { label: \"Stirling\", value: \"Stirling\" },\n  { label: \"Stoke-on-Trent\", value: \"Stoke-on-Trent\" },\n  { label: \"Sunderland\", value: \"Sunderland\" },\n  { label: \"Truro\", value: \"Truro\" },\n  { label: \"Wakefield\", value: \"Wakefield\" },\n  { label: \"Westminster\", value: \"Westminster\" },\n  { label: \"Winchester\", value: \"Winchester\" },\n  { label: \"Wolverhampton\", value: \"Wolverhampton\" },\n  { label: \"York\", value: \"York\" },\n];\n\nmodule.exports = locationOptions;\n"],"sourceRoot":""}